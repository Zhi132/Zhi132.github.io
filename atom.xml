<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小白</title>
  
  <subtitle>努力努力再努力</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-23T13:15:56.117Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>银尘</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前后台交互</title>
    <link href="http://yoursite.com/2019/06/23/%E5%89%8D%E5%90%8E%E5%8F%B0%E4%BA%A4%E4%BA%92/"/>
    <id>http://yoursite.com/2019/06/23/前后台交互/</id>
    <published>2019-06-23T11:20:31.000Z</published>
    <updated>2019-06-23T13:15:56.117Z</updated>
    
    <content type="html"><![CDATA[<p><strong>基于Ajax与JQuery的前后台交互</strong></p><a id="more"></a><h5 id="整合Maven-SSM-IDEA"><a href="#整合Maven-SSM-IDEA" class="headerlink" title="整合Maven+SSM+IDEA"></a>整合Maven+SSM+IDEA</h5><h6 id="1、先创建Maven工程"><a href="#1、先创建Maven工程" class="headerlink" title="1、先创建Maven工程"></a>1、先创建Maven工程</h6><h6 id="2、手动创建main-java-main-resource-以及存储配置文件的目录"><a href="#2、手动创建main-java-main-resource-以及存储配置文件的目录" class="headerlink" title="2、手动创建main.java main.resource 以及存储配置文件的目录"></a>2、手动创建main.java main.resource 以及存储配置文件的目录</h6><p><img src="/2019/06/23/前后台交互/1.jpg" alt></p><h6 id="3、引入pom-xml文件"><a href="#3、引入pom-xml文件" class="headerlink" title="3、引入pom.xml文件"></a>3、引入pom.xml文件</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 数据库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.37<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--jdbc连接池--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- DAO: MyBatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Servlet web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring核⼼ --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring DAO层 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="4、配置Spring，SpringMVC，Mybatis相关文件"><a href="#4、配置Spring，SpringMVC，Mybatis相关文件" class="headerlink" title="4、配置Spring，SpringMVC，Mybatis相关文件"></a>4、配置Spring，SpringMVC，Mybatis相关文件</h6><ol><li><p>Spring配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:db.properties"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数据库连接池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置连接池属性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--c3p0连接池私有属性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxPoolSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;maxPoolSize&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minPoolSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;minPoolSize&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"autoCommitOnClose"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"checkoutTimeout"</span> <span class="attr">value</span>=<span class="string">"$&#123;checkoutTimeout&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"acquireRetryAttempts"</span> <span class="attr">value</span>=<span class="string">"$&#123;acquireRetryAttempts&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Mybatis的工厂 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactoryBean"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 核心配置文件的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:sqlMapConfig.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Mapper动态代理开发   扫描 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 基本包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.cn.nuc.dao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 注解事务 进行事务判断--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开启注解 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>Spring-MVC配置文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置包扫描器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.cn"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置注解驱动 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/**"</span> <span class="attr">location</span>=<span class="string">"/res"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--前缀--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--后缀--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>Mybatis配置文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置别名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 2. 指定扫描包，会把包内所有的类都设置别名，别名的名称就是类名，大小写不敏感 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.cn.nuc.pojo"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>db.properties</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql://localhost:3306/shop?useUnicode=true&amp;characterEncoding=utf8</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=123456</span><br><span class="line">#最大连接数</span><br><span class="line">maxPoolSize=20</span><br><span class="line">#最小连接数</span><br><span class="line">minPoolSize=10</span><br><span class="line">#连接超时时间</span><br><span class="line">checkoutTimeout=60000</span><br><span class="line">#失败重连次数</span><br><span class="line">acquireRetryAttempts=3</span><br></pre></td></tr></table></figure></li></ol><h6 id="5、实现前后台交互"><a href="#5、实现前后台交互" class="headerlink" title="5、实现前后台交互"></a>5、实现前后台交互</h6><ol><li><p>配置Spring-MVC.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">添加</span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/**"</span> <span class="attr">location</span>=<span class="string">"/res"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">mapping固定写法  location写你的js文件以及img文件或者其他统一在哪个文件夹下</span><br></pre></td></tr></table></figure><ol start="2"><li>前台写法，博主在这写了两种写法，其中一种注释了</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Dell</span><br><span class="line">  Date: <span class="number">2019</span>/<span class="number">6</span>/<span class="number">23</span></span><br><span class="line">  Time: <span class="number">18</span>:<span class="number">43</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span>%&gt;</span><br><span class="line">&lt;%--&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;--%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Ajax&lt;/title&gt;</span><br><span class="line">&lt;%--    &lt;script type="text/javascript" src="&lt;c:url value="/res/js/jquery-3.2.1.js"/&gt;"&gt;&lt;/script&gt;--%&gt;</span><br><span class="line">    &lt;script type="text/javascript" src="/res/js/jquery-3.2.1.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    $(function()&#123;</span><br><span class="line">        $.post(<span class="string">"hello.do"</span>,&#123;&#125;,function (data)&#123;</span><br><span class="line">            console.log(<span class="string">"hello World"</span>)</span><br><span class="line">        &#125;,<span class="string">"json"</span>)</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;基于Ajax与JQuery的前后台交互&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode(一)</title>
    <link href="http://yoursite.com/2019/06/21/LeetCode-%E4%B8%80/"/>
    <id>http://yoursite.com/2019/06/21/LeetCode-一/</id>
    <published>2019-06-21T07:25:58.000Z</published>
    <updated>2019-06-21T08:34:16.552Z</updated>
    
    <content type="html"><![CDATA[<p><font style="color:blue; font-size:24px;">算法面试</font></p><a id="more"></a><h5 id="1、只出现一次的数字"><a href="#1、只出现一次的数字" class="headerlink" title="1、只出现一次的数字"></a>1、只出现一次的数字</h5><h5 id="2、求众数"><a href="#2、求众数" class="headerlink" title="2、求众数"></a>2、求众数</h5><p>给定一个大小为 <em>n</em> 的数组，找到其中的众数。众数是指在数组中出现次数<strong>大于</strong> <code>⌊ n/2 ⌋</code> 的元素。</p><p>你可以假设数组是非空的，并且给定的数组总是存在众数。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [3,2,3]</span><br><span class="line">输出: 3</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [2,2,1,1,1,2,2]</span><br><span class="line">输出: 2</span><br></pre></td></tr></table></figure><h6 id="第一种解法"><a href="#第一种解法" class="headerlink" title="第一种解法"></a>第一种解法</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">普通的遍历存Map查找</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;Integer,Integer&gt; map = <span class="keyword">new</span> HashMap&lt;Integer,Integer&gt;();</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!map.containsKey(nums[i]))&#123;</span><br><span class="line">                map.put(nums[i],<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                num = map.get(nums[i]);</span><br><span class="line">                num++;</span><br><span class="line">                map.put(nums[i],num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">         Iterator iterator = map.entrySet().iterator();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line"></span><br><span class="line">            Map.Entry entry = (Map.Entry) iterator.next();</span><br><span class="line">            <span class="keyword">if</span> ((<span class="keyword">int</span>) entry.getValue() &gt; nums.length / <span class="number">2</span>) &#123;</span><br><span class="line">                num = (<span class="keyword">int</span>) entry.getKey();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="第二种解法"><a href="#第二种解法" class="headerlink" title="第二种解法"></a>第二种解法</h6><blockquote><p>摩尔投票法 Moore Voting，需要 O(n) 的时间和 O(1) 的空间</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res = nums[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (nums[i] == res) &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                count--;</span><br><span class="line">                <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">                    res = nums[i];</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3、搜索二维矩阵"><a href="#3、搜索二维矩阵" class="headerlink" title="3、搜索二维矩阵"></a>3、搜索二维矩阵</h5><p>编写一个高效的算法来搜索 <em>m</em> x <em>n</em> 矩阵 matrix 中的一个目标值 target。该矩阵具有以下特性：</p><ul><li>每行的元素从左到右升序排列。</li><li>每列的元素从上到下升序排列。</li></ul><p><strong>示例:</strong></p><p>现有矩阵 matrix 如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  [1,   4,  7, 11, 15],</span><br><span class="line">  [2,   5,  8, 12, 19],</span><br><span class="line">  [3,   6,  9, 16, 22],</span><br><span class="line">  [10, 13, 14, 17, 24],</span><br><span class="line">  [18, 21, 23, 26, 30]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>给定 target = <code>5</code>，返回 <code>true</code>。</p><p>给定 target = <code>20</code>，返回 <code>false</code>。</p><h6 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">searchMatrix</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = matrix.length;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span> == m) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> n = matrix[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span> == n) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(matrix[i][<span class="number">0</span>] &lt;= target &amp;&amp; matrix[i][n-<span class="number">1</span>] &gt;= target)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(matrix[i][j] == target) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好像可以先对角线找到第一个比给的值大的，然后对左下角和右上角进行二分查找也可以</p><blockquote><p>​    附上别人代码，可以体会一下</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">bool <span class="title">searchMatrix</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> m = matrix.size();</span><br><span class="line">        <span class="keyword">if</span> (m == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> n = matrix[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (m == <span class="number">1</span>) <span class="keyword">return</span> binary_row_search(matrix, <span class="number">0</span>, n-<span class="number">1</span>, target);</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> binary_col_search(matrix, <span class="number">0</span>, m-<span class="number">1</span>, target);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> square = m &lt;= n ? m : n;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; square - <span class="number">1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (target == matrix[i][i] || target == matrix[i+<span class="number">1</span>][i+<span class="number">1</span>]) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (target &gt; matrix[i][i] &amp;&amp; target &lt; matrix[i+<span class="number">1</span>][i+<span class="number">1</span>]) <span class="keyword">break</span>;     </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> row = i+<span class="number">1</span>; row &lt; m; row++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (binary_row_search(matrix, row, i, target)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> col = i+<span class="number">1</span>; col &lt; n; col++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (binary_col_search(matrix, col, i, target)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 行搜索</span></span><br><span class="line">    <span class="function">bool <span class="title">binary_row_search</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> row, <span class="keyword">int</span> end, <span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (start &lt;= end)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = start + ((end - start) &gt;&gt; <span class="number">2</span>); <span class="comment">// 右移运算优先级小于加法，切记加括号！！！</span></span><br><span class="line">            <span class="keyword">if</span> (matrix[row][mid] == target) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (matrix[row][mid] &lt; target) start = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> end = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 列搜索</span></span><br><span class="line">    <span class="function">bool <span class="title">binary_col_search</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> col, <span class="keyword">int</span> end, <span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (start &lt;= end)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = start + ((end - start) &gt;&gt; <span class="number">2</span>); </span><br><span class="line">            <span class="keyword">if</span> (matrix[mid][col] == target) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (matrix[mid][col] &lt; target) start = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> end = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;font style=&quot;color:blue; font-size:24px;&quot;&gt;算法面试&lt;/font&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>关于本站</title>
    <link href="http://yoursite.com/2019/06/21/top/"/>
    <id>http://yoursite.com/2019/06/21/top/</id>
    <published>2019-06-21T01:40:33.000Z</published>
    <updated>2019-06-21T01:44:03.078Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>​    博主之前是在CSDN与博客园上写博客的。但是慢慢地CSDN上广告突出……博客园也很少用，就自己上网学习，搭hexo博客。</p></blockquote><p><a href="https://blog.csdn.net/qq_40984919" target="_blank" rel="noopener">CSDN</a></p><p><a href="https://www.cnblogs.com/Yinchen-One/" target="_blank" rel="noopener">博客园</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;​    博主之前是在CSDN与博客园上写博客的。但是慢慢地CSDN上广告突出……博客园也很少用，就自己上网学习，搭hexo博客。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_409
      
    
    </summary>
    
    
      <category term="Info" scheme="http://yoursite.com/tags/Info/"/>
    
  </entry>
  
  <entry>
    <title>css3</title>
    <link href="http://yoursite.com/2019/06/20/css3/"/>
    <id>http://yoursite.com/2019/06/20/css3/</id>
    <published>2019-06-20T06:38:04.000Z</published>
    <updated>2019-06-21T02:51:54.881Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><a id="more"></a><h5 id="二、选择器"><a href="#二、选择器" class="headerlink" title="二、选择器"></a>二、选择器</h5><p><a href="http://tool.mkblog.cn/codeonline/" target="_blank" rel="noopener">孟坤工具箱</a></p><h6 id="层次选择器"><a href="#层次选择器" class="headerlink" title="层次选择器"></a>层次选择器</h6><ul><li><p>后代选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>子选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&gt;<span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>相邻选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.active</span>+<span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">backgroung</span>:green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>通用兄弟选择器(同一层)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.active</span>~<span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h6 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h6><ul><li><p>选择第一个子元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>选择最后一个子元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>选择第n个子元素(父元素)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>选择第n个元素(同级)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:nth-of-type(2)</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h6 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h6><ul><li>E[attr]：选择匹配具有属性attr的E元素</li></ul><ul><li><p>a[id=first]：具有id属性且匹配first</p></li><li><p>a[class=”links”]：class=links的会改变</p></li><li><p>a[class*=”links”]：class中包含links的会改变</p></li><li><p>a[href^=http]：以http开头元素</p></li><li><p>a[href$=png]：以png结尾的元素</p><hr></li></ul><h5 id="三、CSS美化页面"><a href="#三、CSS美化页面" class="headerlink" title="三、CSS美化页面"></a>三、CSS美化页面</h5><ul><li>盒子模型<pre><code>- </code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CSS&quot;&gt;&lt;a href=&quot;#CSS&quot; class=&quot;headerlink&quot; title=&quot;CSS&quot;&gt;&lt;/a&gt;CSS&lt;/h1&gt;
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>深入浅出-MySQL</title>
    <link href="http://yoursite.com/2019/06/20/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA-MySQL/"/>
    <id>http://yoursite.com/2019/06/20/深入浅出-MySQL/</id>
    <published>2019-06-20T00:09:18.000Z</published>
    <updated>2019-06-20T08:03:06.821Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/06/20/深入浅出-MySQL/mysql.jpg" alt></p><a id="more"></a><h2 id="一、SQL基础"><a href="#一、SQL基础" class="headerlink" title="一、SQL基础"></a>一、SQL基础</h2><h4 id="1、SQL分类"><a href="#1、SQL分类" class="headerlink" title="1、SQL分类"></a>1、SQL分类</h4><ol><li><p>DDL：数据定义语句</p><ul><li><p>创建数据库 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> test1</span><br><span class="line"><span class="comment">## 数据库中已有的</span></span><br><span class="line"><span class="number">1.</span>information_schema:存储系统中的一些数据库对象信息</span><br><span class="line"><span class="number">2.</span>cluster:存储了系统的集群信息</span><br><span class="line"><span class="number">3.</span>mysql:存储了系统的用户权限信息。</span><br><span class="line"><span class="number">4.</span><span class="keyword">test</span>:系统自动创建的测试数据库。</span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> test1</span><br></pre></td></tr></table></figure></li><li><p>创建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> **();</span><br><span class="line"></span><br><span class="line">查看表的定义</span><br><span class="line">DESC **</span><br><span class="line"></span><br><span class="line">查看创建表的SQL语句</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> ** \G;</span><br><span class="line">在这里我们可以看到ENGINE（存储引擎）和CHARSET（字符集信息）</span><br></pre></td></tr></table></figure></li><li><p>删除表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> emp</span><br></pre></td></tr></table></figure></li><li><p>修改表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改表类型</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">modify</span> ename <span class="built_in">varchar</span>(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 增加表字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">column</span> age <span class="built_in">int</span>(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除表字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> <span class="keyword">column</span> age;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 字段改名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">change</span> age age1 <span class="built_in">int</span>(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">## 修改字段排列顺序(可选项 first|after)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> birth <span class="keyword">data</span> <span class="keyword">after</span> ename;</span><br><span class="line">&gt; 修改字段age，将它放在最前边</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">modify</span> age <span class="built_in">int</span>(<span class="number">3</span>) <span class="keyword">first</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 更改表名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">rename</span> emp1;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>DML：数据操作语句</p><blockquote><p>​    是对数据库中表记录的操作，主要包括表记录的插入、更新、删除和查询。</p></blockquote><ul><li><p>插入记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 插入语句</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp(<span class="number">1</span>,<span class="number">2</span>) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 一次性插入多条语句</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp(<span class="number">1</span>,<span class="number">2</span>) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>),(<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure></li><li><p>更新记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 更新</span></span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> <span class="number">1</span>=<span class="number">1</span> wherh ename=<span class="string">'lisi'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 同时更新两个表与这个情况类似</span></span><br></pre></td></tr></table></figure></li><li><p>删除记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 删除</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename=<span class="string">'dony'</span></span><br></pre></td></tr></table></figure></li><li><p>查询记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查询</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查询不重复的记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> deptno <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 条件查询(=、&gt;、&lt;、&gt;=、&lt;=、!=)</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="number">2</span>=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 排序和限制</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal;</span><br><span class="line">desc<span class="comment">----&gt;降序   </span></span><br><span class="line">asc<span class="comment">------&gt;升序</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 分页查询</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">3</span>  <span class="comment">-----&gt;第一个参数为起始偏移量，第二个为行数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 聚合</span></span><br><span class="line"><span class="keyword">select</span> [f1,f2,f3...]fun_name<span class="comment">------&gt;聚合函数  sun，count，max，min</span></span><br><span class="line"><span class="keyword">from</span> tablename</span><br><span class="line">[<span class="keyword">WHERE</span> where_contition] <span class="comment">-----&gt;条年间查询</span></span><br><span class="line">[<span class="keyword">GROUP</span> <span class="keyword">BY</span> field1,field2<span class="comment">-----&gt;分类聚合字段</span></span><br><span class="line">[<span class="keyword">WITH</span> <span class="keyword">ROLLUP</span>]]<span class="comment">-----&gt;表名是否对分类聚合进行汇总</span></span><br><span class="line">[<span class="keyword">HAVING</span> where_contition]<span class="comment">-----&gt;对分类后的结果再进行条件的过滤</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 连接</span></span><br><span class="line"><span class="number">1</span>、内连接</span><br><span class="line">仅选出两张表中互相匹配的记录</span><br><span class="line">fx：查询所有雇员的名字和所在的部门名称</span><br><span class="line"><span class="keyword">select</span> ename,deptname <span class="keyword">from</span> emp,dept <span class="keyword">where</span> emp.deptno=dept.deptno;</span><br><span class="line">2、外连接</span><br><span class="line">左连接：包含所有左边表中的记录甚至是右边表中没有和它匹配的记录。</span><br><span class="line">右连接：包含所有右边表中的记录甚至是左边表中没有和它匹配的记录。</span><br><span class="line">3、子查询（条件是另一<span class="keyword">select</span>语句的结果）</span><br><span class="line"><span class="keyword">select</span> * fomr emp <span class="keyword">where</span> <span class="number">1</span> <span class="keyword">in</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> dept);</span><br><span class="line">如果查询条件唯一，可以使用=代替in</span><br><span class="line">4、记录联合</span><br><span class="line">UNION:将UNION ALL后的结果进行一次DISTINCT</span><br><span class="line">UNION ALL把结果集直接合并在一起</span><br></pre></td></tr></table></figure></li></ul></li></ol><ol start="3"><li>DCL：数据控制语句—–管理系统中的对象权限时使用</li></ol><h4 id="2、MySQL数据类型"><a href="#2、MySQL数据类型" class="headerlink" title="2、MySQL数据类型"></a>2、MySQL数据类型</h4><table><thead><tr><th>整数类型</th><th>字节</th><th>最小值</th><th>最大值</th></tr></thead><tbody><tr><td>TINYINT</td><td>1</td><td>有符号-128<br>无符号 0</td><td>有符号 127<br>无符号 255</td></tr><tr><td>SMALLINT</td><td>2</td><td>有符号-32768<br>无符号 0</td><td>有符号32767<br>无符号 65535</td></tr><tr><td>MEDIUMINT</td><td>3</td><td>有符号-8388608<br>无符号 0</td><td>有符号8388607<br>无符号 1677215</td></tr><tr><td>INT,INTEGER</td><td>4</td><td>有符号-2147483648<br>无符号 0</td><td>有符号2147483647<br>无符号 4294967295</td></tr><tr><td>BIGINT</td><td>8</td><td>有符号-9223372036854775808<br>无符号 0</td><td>有符号9223372036854775807<br>无符号 18446744073709551615</td></tr></tbody></table><table><thead><tr><th>浮点数类型</th><th>字节</th><th>最小值</th><th>最大值</th></tr></thead><tbody><tr><td>FLOAT</td><td>4</td><td>±1.175494351E-38</td><td>±3.402823466E+38</td></tr><tr><td>DOUBLE</td><td>8</td><td>±2.2250738585072014E-308</td><td>±1.7976931348623157E+308</td></tr></tbody></table><table><thead><tr><th>位类型</th><th>字节</th><th>最小值</th><th>最大值</th></tr></thead><tbody><tr><td>BIT</td><td>1~8</td><td>BIT(1)</td><td>BIT(64)</td></tr></tbody></table><hr><h2 id="二、MySQL开发篇"><a href="#二、MySQL开发篇" class="headerlink" title="二、MySQL开发篇"></a>二、MySQL开发篇</h2><h4 id="1、表类型的选择"><a href="#1、表类型的选择" class="headerlink" title="1、表类型的选择"></a>1、表类型的选择</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2019/06/20/深入浅出-MySQL/mysql.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL学习" scheme="http://yoursite.com/categories/MySQL%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Spring注解</title>
    <link href="http://yoursite.com/2019/06/19/Spring%E6%B3%A8%E8%A7%A3/"/>
    <id>http://yoursite.com/2019/06/19/Spring注解/</id>
    <published>2019-06-19T07:40:17.000Z</published>
    <updated>2019-06-23T13:31:10.509Z</updated>
    
    <content type="html"><![CDATA[<h1 id="核心容器"><a href="#核心容器" class="headerlink" title="核心容器"></a>核心容器</h1><a id="more"></a><h2 id="Spring的核心jar包"><a href="#Spring的核心jar包" class="headerlink" title="Spring的核心jar包"></a>Spring的核心jar包</h2><p>​        一、spring-context—–maven注入</p><pre><code>#####         没有注解之前，使用配置方式</code></pre><p>​                    <img src="/2019/06/19/Spring注解/Spring1.png" alt="Spring1">    </p><h5 id="使用注解"><a href="#使用注解" class="headerlink" title="使用注解"></a>使用注解</h5><ul><li><p>@Configuration  配置类</p><ul><li><p>@Bean给容器一注册一个Bean；类型为方绘制的类型，id默认为id</p><ul><li>可以给Bean添加value值</li></ul></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContextnew a = AnnotationConfigApplicationContext(配置类.class);</span><br><span class="line">Person p = a.getBean(Person.class);</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>包扫描&lt;context:componet-scan class=””&gt;</p><ul><li><p>只要标注了@Controller @Service @Repository @Component  自动扫描</p><ul><li>包扫描过滤 在其下边继续写&lt;context:include合作者exclude</li></ul></li><li><p>另一种方法可以在配置类上边加注解 @ComponentScan(value=””)—-和上边包扫描效果一样会自动扫描</p><ul><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">指定要扫描的包</span><br><span class="line"><span class="meta">@ComponentScan</span>(value=<span class="string">""</span>,excludeFilters = &#123;</span><br><span class="line"><span class="meta">@Filter</span>(type=FilterType.ANNOTATION,classes=  &#123;Controller.class,Service,<span class="class"><span class="keyword">class</span>&#125;)</span></span><br><span class="line"><span class="class">&#125;)</span></span><br><span class="line"><span class="class">如果要使用只扫描--我们需要把<span class="title">useDefaultFilters</span> </span>= <span class="keyword">false</span>  默认扫描关闭</span><br></pre></td></tr></table></figure></li><li><p>在其中我们还可以使用ComponentScans来扫描多个  value是数组</p></li><li><p><img src="/2019/06/19/Spring注解/Spring2.png" alt></p></li><li><p>常用规则（扫描方式）</p><ul><li><blockquote><p>FilterType.*</p><p>1、<strong>ANNOTATION</strong>                  按照注解</p><p>2、<strong>ASSIGNABLE_TYPE</strong>         按照给定的类型</p><p>3、ASPECTJ                             ASPECTJ表达式</p><p>4、REGEX                                正则表达式</p><p>5、CUSTOM                            自定义规则</p><ul><li>需要实现TypeFilter接口</li></ul></blockquote></li><li><p>修改Scope（调整组件作用域）</p><ul><li>prototype    多实例的</li><li>singletion     单实例的</li></ul></li><li><p>懒加载@Lazy</p><ul><li>单实例Bean：默认在启动的时候创建对象</li><li>第一次使用Bean的时候再创建对象—–懒加载</li></ul></li><li><p>按照条件注册bean</p><ul><li>@Conditional:    按照一定的条件进行判断，满足条件给容器中注册bean</li><li>@Conditional(Condition数组—》类.class)</li><li>实现的类需要实现Conditional接口，来为后续的判断提供条件</li></ul></li></ul></li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;核心容器&quot;&gt;&lt;a href=&quot;#核心容器&quot; class=&quot;headerlink&quot; title=&quot;核心容器&quot;&gt;&lt;/a&gt;核心容器&lt;/h1&gt;
    
    </summary>
    
      <category term="Java知识点" scheme="http://yoursite.com/categories/Java%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>JavaSE基础</title>
    <link href="http://yoursite.com/2019/06/18/JavaSE%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2019/06/18/JavaSE基础/</id>
    <published>2019-06-18T08:40:40.000Z</published>
    <updated>2019-06-21T05:55:28.925Z</updated>
    
    <content type="html"><![CDATA[<p><strong>JavaSE面试要点以及知识概要</strong></p><a id="more"></a><h5 id="1、面向对象的特征有哪些方面"><a href="#1、面向对象的特征有哪些方面" class="headerlink" title="1、面向对象的特征有哪些方面"></a>1、面向对象的特征有哪些方面</h5><ol><li>抽象：抽象就是忽略一个主题中与当前目标无关的那些方面，以便更充分地注意与当前目标有关的方面。抽象并不打算了解全部问题，而只是选择其中的一部分，暂时不用部分细节。抽象包括两个方面，一是过程抽象，二是数据抽象。</li><li>继承：继承是一种联结类的层次模型，并且允许和鼓励类的重用，它提供了一种明确表述共性的方法。对象的一个新类可以从现有的类中派生，这个过程称为类继承。新类继承了原始类的特性，新类称为原始类的派生类（子类），而原始类称为新类的基类（父类）。派生类可以从它的基类那里继承方法和实例变量，并且类可以修改或增加新的方法使之更适合特殊的需要。</li><li>封装：封装是把过程和数据包围起来，对数据的访问只能通过已定义的界面。面向对象计算始于这个基本概念，即现实世界可以被描绘成一系列完全自治、封装的对象，这些对象通过一个受保护的接口访问其他对象。</li><li>多态性：多态性是指允许不同类的对象对同一消息作出响应。多态性包括参数化多态性和包含多态性。多态性语言具有灵活、抽象、行为共享、代码共享的优势，很好的解决了应用程序函数同名问题。</li></ol><h5 id="2、基本数据类型"><a href="#2、基本数据类型" class="headerlink" title="2、基本数据类型"></a>2、基本数据类型</h5><p>​    基本数据类型包括</p><pre><code>byte、int、char、long、float、double、boolean、short</code></pre><p>​    <strong>java.lang.String类是final类型的，因此不可以继承这个类、不能修改这个类。为了提高效率节省空间，我们应该用StringBuffer类</strong></p><h5 id="3、super和this的区别"><a href="#3、super和this的区别" class="headerlink" title="3、super和this的区别"></a>3、super和this的区别</h5><p>​    super代表父类对象，this代表当前类对象 </p><h5 id="4、-和equals的区别"><a href="#4、-和equals的区别" class="headerlink" title="4、==和equals的区别"></a>4、==和equals的区别</h5><p><strong>==</strong></p><ul><li><p>基本类型：比较值是否相同</p></li><li><p>引用类型：比较引用是否相同</p><p>代码示例</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String x = <span class="string">"string"</span>;</span><br><span class="line">String y = <span class="string">"string"</span>;</span><br><span class="line">String z = <span class="keyword">new</span> String(<span class="string">"string"</span>);</span><br><span class="line">system.out.println(x==y);<span class="comment">//true比较引用</span></span><br><span class="line">system.out.println(x==z);<span class="comment">//false比较引用</span></span><br><span class="line">system.out.println(x.equals(y));<span class="comment">//true比较值</span></span><br><span class="line">system.out.println(x.equals(z));<span class="comment">//true比较值</span></span><br></pre></td></tr></table></figure><p><strong>equals</strong></p><p>​    equals本质上是==，不过String和Integer等重写了equals方法，变为了值比较</p><h5 id="5、两个对象的hashcode相同，equals相同么"><a href="#5、两个对象的hashcode相同，equals相同么" class="headerlink" title="5、两个对象的hashcode相同，equals相同么"></a>5、两个对象的hashcode相同，equals相同么</h5><p>​    hashcode得到的是哈希值相同，然而哈希值相同，并不能得到键值对相同。</p><h5 id="6、final在Java中的作用"><a href="#6、final在Java中的作用" class="headerlink" title="6、final在Java中的作用"></a>6、final在Java中的作用</h5><ul><li>final修饰的类交最终类，改类不能被继承</li><li>final修饰的方法不能被重写</li><li>final修饰的变量交常量，常量必须初始化，初始化之后值不能被修改</li></ul><h5 id="7、操作字符串的类"><a href="#7、操作字符串的类" class="headerlink" title="7、操作字符串的类"></a>7、操作字符串的类</h5><p>String声明的是不可变的对象，每次操作都会生成新的String对象。</p><p>StringBuffer、StringBuilder可以在原有对象的基础上进行操作</p><p>String和StringBuilder的区别</p><p><font style="color:red">    1. StringBuffer是线程安全的   StringBuilder是非线程安全的</font></p><p><font style="color:red">    2.StringBuilder性能比StringBuffer高</font></p><p><font style="color:red">    3.单线程可以使用StringBulider  多项成使用StringBuffer</font></p><h5 id="8、String-s-”i”-与-String-s1-new-String-“asd”-的区别"><a href="#8、String-s-”i”-与-String-s1-new-String-“asd”-的区别" class="headerlink" title="8、String s=”i” 与 String s1=new String(“asd”)的区别"></a>8、String s=”i” 与 String s1=new String(“asd”)的区别</h5><p>​    第一种是分配到常量池中，第二种是分配到堆内存中。</p><h5 id="9、抽象类必须要有抽象方法么？"><a href="#9、抽象类必须要有抽象方法么？" class="headerlink" title="9、抽象类必须要有抽象方法么？"></a>9、抽象类必须要有抽象方法么？</h5><p>​    不需要，抽象类不一定非要有抽象方法。</p><h6 id="我们来具体分析一下抽象与接口"><a href="#我们来具体分析一下抽象与接口" class="headerlink" title="我们来具体分析一下抽象与接口"></a>我们来具体分析一下抽象与接口</h6><ul><li>抽象类是什么？（抽象类只能作为父类被继承，避免子类的随意性）<ul><li>抽象方法只做声明，而不包含实现，可以看成是没有实现体的虚方法</li><li>抽象类不能被实例化</li><li>抽象类可以但不是必须有抽象属性和抽象方法，但是一旦有了抽象方法，就一定要把这个类声明为抽象类</li><li>具体派生类必须覆盖基类的抽象方法</li><li>抽象派生类可以覆盖基类的抽象方法，也可以不覆盖。如果不覆盖，则其具体派生类必须覆盖它们</li><li>接口是什么？</li></ul></li><li>接口不能被实例化</li><li>接口只能包含方法声明</li><li>接口的成员包括方法、属性、索引器、事件</li><li>接口中不能包含常量、字段(域)、构造函数、析构函数(Java存在自动回收机制，一般用不到析构函数)、静态成员<ul><li>接口和抽象类的区别   <strong>重要</strong></li></ul></li><li>抽象类可以有构造方法，接口中不能有构造方法。</li><li>抽象类中可以有普通成员变量，接口中没有普通成员变量</li><li>抽象类中可以包含静态方法，接口中不能包含静态方法</li><li>一个类可以实现多个接口，但只能继承一个抽象类。</li><li>接口可以被多重实现，抽象类只能被单一继承</li><li>如果抽象类实现接口，则可以把接口中方法映射到抽象类中作为抽象方法而不必实现，而在抽象类的子类中实现接口中方法<ul><li>接口和抽象类的相同点</li></ul></li><li>都可以被继承</li><li>都不能被实例化</li><li>都可以包含方法声明</li><li>派生类必须实现未实现的方法</li></ul><h5 id="10、-amp-和-amp-amp-的区别？"><a href="#10、-amp-和-amp-amp-的区别？" class="headerlink" title="10、&amp;和&amp;&amp;的区别？"></a>10、&amp;和&amp;&amp;的区别？</h5><ul><li>&amp;运算符有两种用法：<pre><code>-    按位与；   -    逻辑与。   -    &amp;&amp;运算符是短路与运算。逻辑与跟短路与的差别是非常巨大的，虽然二者都要求运算符左右两端的布尔值都是true整个表达式的值才是true。&amp;&amp;之所以称为短路运算是因为，如果&amp;&amp;左边的表达式的值是false，右边的表达式会被直接短路掉，不会进行运算。很多时候我们可能都需要用&amp;&amp;而不是&amp;，例如在验证用户登录时判定用户名不是null而且不是空字符串，应当写为：username != null &amp;&amp;!username.equals(&quot;&quot;)，二者的顺序不能交换，更不能用&amp;运算符，因为第一个条件如果不成立，根本不能进行字符串的equals比较，否则会产生NullPointerException异常。</code></pre></li></ul><h5 id="11、关键字"><a href="#11、关键字" class="headerlink" title="11、关键字"></a>11、关键字</h5><h6 id="与流程控制相关的"><a href="#与流程控制相关的" class="headerlink" title="与流程控制相关的"></a>与流程控制相关的</h6><table><thead><tr><th>关键字</th><th>知识点</th></tr></thead><tbody><tr><td>if</td><td>表示条件判断，一般用法if（关系表达式），后跟else或{……}</td></tr><tr><td>esle</td><td>条件转折，如if （关系表达式）{语句块1}else{语句块2}，如果关系表达式的值为true，则执行语句块1，否则执行语句块2.</td></tr><tr><td>do……while……</td><td>do和while一般一起使用，用于表示循环语句。do{……}while（关系表达式）……；当关系表达式的值为true是继续循环。</td></tr><tr><td>for</td><td>用于表示循环，for循环是最常使用的循环，格式for（表达式a; 表达式b; 表达式c）括号里面的书通常用于控制循环的次数，一般会用一个int类型的变量类计数，如（int i=0; i&lt;10; i++）表达式a用于流程控制的开始值，表达式b表示循环终止条件，表达式c用于计数。</td></tr><tr><td>switch</td><td>分支语句</td></tr><tr><td>default</td><td>条件不成立</td></tr><tr><td>break</td><td>跳出</td></tr><tr><td>continue</td><td>跳出本次循环</td></tr><tr><td>return</td><td>返回值</td></tr><tr><td>try……catch……finally……</td><td>异常处理</td></tr></tbody></table><h6 id="与修饰符有关的"><a href="#与修饰符有关的" class="headerlink" title="与修饰符有关的"></a>与修饰符有关的</h6><table><thead><tr><th>范围</th><th>本类</th><th>同软件包</th><th>不同包中子类</th><th>不同包且无继承</th><th>作用(含义)</th></tr></thead><tbody><tr><td>public</td><td>可以</td><td>可以</td><td>可以</td><td>可以</td><td>公有的</td></tr><tr><td>protect</td><td>可以</td><td>可以</td><td>可以</td><td></td><td>受保护的</td></tr><tr><td>default(无权限修饰符)</td><td>可以</td><td>可以</td><td></td><td></td><td>当前的</td></tr><tr><td>private</td><td>可以</td><td></td><td></td><td></td><td>私有的</td></tr></tbody></table><table><thead><tr><th>关键字</th><th>知识点</th></tr></thead><tbody><tr><td>final</td><td>1. final的变量的值不能被改变<br>              a.final的成员变量<br>              b.final的局部变量；<br>2. final的方法不能被重写；<br>3. final的类不能被继承。</td></tr><tr><td>Synchronized</td><td>当它用来修饰一个方法或者一个代码块的时候，能够保证在同一时刻最多只有一个线程执行该段代码。JDK1.5以后引入了自旋锁、锁粗化、轻量级锁，偏向锁来有优化关键字的性能。</td></tr><tr><td>Lock</td><td><strong>synchronized在发生异常时，会自动释放线程占有的锁，因此不会导致死锁现象发生；而Lock在发生异常时，如果没有主动通过unLock()去释放锁，则很可能造成死锁现象，因此使用Lock时需要在finally块中释放锁；<br><br>Lock可以让等待锁的线程响应中断，而synchronized却不行，使用synchronized时，等待的线程会一直等待下去，不能够响应中断；<br><br>通过Lock可以知道有没有成功获取锁，而synchronized却无法办到。</strong></td></tr></tbody></table><h5 id="12、Java中的覆盖与重载的含义"><a href="#12、Java中的覆盖与重载的含义" class="headerlink" title="12、Java中的覆盖与重载的含义"></a>12、Java中的覆盖与重载的含义</h5><pre><code>1.    覆盖是发生在同一个类里边或者多个方法的方法名相同但参数不用的情况。 2.    方法覆盖是说子类重新定义了父类的方法。方法覆盖必须有相同的方法名，参数列表和返回类型。覆盖者可能不会限制它所覆盖的方法的访问。</code></pre><h5 id="13、面向对象的”六原则一法则”。"><a href="#13、面向对象的”六原则一法则”。" class="headerlink" title="13、面向对象的”六原则一法则”。"></a>13、面向对象的”六原则一法则”。</h5><table><thead><tr><th>名称</th><th>作用</th></tr></thead><tbody><tr><td>单一职责原则（高内聚）</td><td>一个类只做它该做的事情</td></tr><tr><td>开闭原则</td><td>软件实体应当对扩展开放，对修改关闭。</td></tr><tr><td>依赖倒转原则</td><td>面向接口编程。</td></tr><tr><td>里氏替换原则</td><td>任何时候都可以用子类型替换掉父类型</td></tr><tr><td>接口隔离性</td><td>接口要小而专，绝不能大而全。</td></tr><tr><td>合成聚合复用原则</td><td>优先使用聚合或合成关系复用代码。</td></tr><tr><td>迪米特法则（低耦合）</td><td>迪米特法则又叫最少知识原则，一个对象应当对其他对象有尽可能少的了解。</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;JavaSE面试要点以及知识概要&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java知识点" scheme="http://yoursite.com/categories/Java%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>实训---html</title>
    <link href="http://yoursite.com/2019/06/18/%E5%AE%9E%E8%AE%AD-html/"/>
    <id>http://yoursite.com/2019/06/18/实训-html/</id>
    <published>2019-06-18T08:06:37.000Z</published>
    <updated>2019-06-20T06:44:42.026Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p><img src="/2019/06/18/实训-html/bg.jpg" alt="生活"></p><a id="more"></a><h3 id="W3C标准"><a href="#W3C标准" class="headerlink" title="W3C标准"></a>W3C标准</h3><pre><code>1. 结构化标准语言(HTML,XHML)2. 表现标准语言(CSS)3. 行为标准(DOM)</code></pre><h3 id="meta设置"><a href="#meta设置" class="headerlink" title="meta设置"></a>meta设置</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置过期--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--跳转页面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"2:http://www.baidu.com"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!----&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Pragma"</span> <span class="attr">content</span>=<span class="string">"No-cach"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--无法被其他网页嵌套--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Window-target"</span> <span class="attr">content</span>=<span class="string">"_top"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--网页特效--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Page-Exit"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--搜索关键字--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"Keywords"</span> <span class="attr">lang</span>=<span class="string">"EN"</span> <span class="attr">content</span>=<span class="string">"中北大学"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置网页简介--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"中北大学"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置网址作者--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"Author"</span> <span class="attr">content</span>=<span class="string">"银尘"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置网站的版本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"Copyright"</span> <span class="attr">content</span>=<span class="string">"本页版权归银尘所有"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="页面布局分析"><a href="#页面布局分析" class="headerlink" title="页面布局分析"></a>页面布局分析</h3><h4 id="H5结构元素"><a href="#H5结构元素" class="headerlink" title="H5结构元素"></a>H5结构元素</h4><table><thead><tr><th align="left">方法名</th><th>作用位置</th></tr></thead><tbody><tr><td align="left">header</td><td>头部</td></tr><tr><td align="left">nav</td><td>头部</td></tr><tr><td align="left">aside</td><td>侧面栏</td></tr><tr><td align="left">section</td><td>主题部分</td></tr><tr><td align="left">article</td><td>主题部分</td></tr><tr><td align="left">footer</td><td>尾部</td></tr></tbody></table><h4 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h4><blockquote><p>frameset—-现在不经常使用了</p><p>iframe—基本都使用这个（灵活）</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HTML&quot;&gt;&lt;a href=&quot;#HTML&quot; class=&quot;headerlink&quot; title=&quot;HTML&quot;&gt;&lt;/a&gt;HTML&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2019/06/18/实训-html/bg.jpg&quot; alt=&quot;生活&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="web前端" scheme="http://yoursite.com/tags/web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Java容器知识点</title>
    <link href="http://yoursite.com/2019/06/18/Java%E5%AE%B9%E5%99%A8%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://yoursite.com/2019/06/18/Java容器知识点/</id>
    <published>2019-06-18T05:20:03.000Z</published>
    <updated>2019-06-20T06:44:55.260Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Java容器与设计模式解释</strong></p><a id="more"></a><h3 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h3><h4 id="静态初始化（饿汉式）"><a href="#静态初始化（饿汉式）" class="headerlink" title="静态初始化（饿汉式）"></a>静态初始化（饿汉式）</h4><h4 id="双重检查（懒汉式）"><a href="#双重检查（懒汉式）" class="headerlink" title="双重检查（懒汉式）"></a>双重检查（懒汉式）</h4><blockquote><p><strong>用到的时候才会建立，不用则不会建立</strong></p></blockquote><h5 id="要考虑多个线程的并发问题"><a href="#要考虑多个线程的并发问题" class="headerlink" title="要考虑多个线程的并发问题"></a>要考虑多个线程的并发问题</h5><ul><li>通过lock和synchronized双重检查</li><li>保证只有一个线程运行</li><li>内存可见性  volatile 修饰</li></ul><h4 id="单例注册表"><a href="#单例注册表" class="headerlink" title="单例注册表"></a>单例注册表</h4><h3 id="常用设计模式与应用场景"><a href="#常用设计模式与应用场景" class="headerlink" title="常用设计模式与应用场景"></a>常用设计模式与应用场景</h3><ol><li>工厂模式：Spring如何创建Bean</li><li>代理模式：Motan服务的动态代理  反射</li></ol><ul><li>静态代理:编译时创建好的  源代码中编写的类</li><li>动态代理:在JVM</li></ul><ol start="3"><li>责任链模式：Netty消息处理的方式</li><li>适配器模式：SLF4J如何支持Log4J  — 接口</li><li>观察者模式（一个对象的某个事件触发某些行为）：GRPC是如何支持流式请求的</li><li>构造者模式（多个复杂的属性）：PB序列化中的Builder</li></ol><h3 id="Java语言特性"><a href="#Java语言特性" class="headerlink" title="Java语言特性"></a>Java语言特性</h3><h4 id="知识详解"><a href="#知识详解" class="headerlink" title="知识详解"></a>知识详解</h4><p>==HashMap==</p><ul><li>数组加链表的实现方式</li><li>容量大小是2的幂次方<ul><li>可以利用按位与操作，计算余数</li></ul></li><li>并发读写的风险（参考源码）<ul><li>死循环问题 </li><li>HashMap 是一个散列桶（数组和链表），它存储的内容是键值对 key-value 映射</li><li>HashMap 采用了数组和链表的数据结构，能在查询和修改方便继承了数组的线性查找和链表的寻址修改</li><li>HashMap 是非 synchronized，所以 HashMap 很快</li><li>HashMap 可以接受 null 键和值，而 Hashtable 则不能（原因就是 equlas() 方法需要对象，因为 HashMap 是后出的 API 经过处理才可以）</li></ul></li><li>工作原理</li><li>HashMap 在 Map.Entry 静态内部类实现中存储键值对，使用哈希算法。在 put 和 get 方法中，使用 hashCode() 和 equals() 方法。</li><li>调用 put 方法时，使用键值对中的 Key hashCode() 和哈希算法找出存储键值对索引。键值对 Entry 存储在 LinkedList 中，如果存在 Entry，使用 equals() 方法来检查 Key 是否已经存在：如果存在，则覆盖 value；如果不存在，会创建一个新的 Entry 然后保存。</li><li>调用 get 方法时，HashMap 使用键值 Key hashCode() 来找到数组中的索引，然后使用 equals() 方法找出正确的 Entry，返回 Entry 中的 Value。</li></ul><p>==ConcurrentHashMap==</p><blockquote><p>ConcurrentHashMap 和 HashMap 实现上类似，最主要的差别是 ConcurrentHashMap 采用了分段锁（Segment），每个分段锁维护着几个桶（HashEntry），多个线程可以同时访问不同分段锁上的桶，从而使其并发度更高（并发度就是 Segment 的个数）。</p><ol><li>并发控制与分段锁的思想</li><li>1.8的CAS自旋锁</li><li>红黑树的启动条件</li></ol></blockquote><ul><li><p>TREEIFY THRESHOLD==8  阈值超过8  小于6就转回链表</p><ol start="4"><li>具体的get方法</li></ol><blockquote><h3 id="当我们调用-get-方法，HashMap-会使用键对象的-hashcode-找到-bucket-位置，找到-bucket-位置之后，会调用-keys-equals-方法去找到链表中正确的节点，最终找到要找的值对象。"><a href="#当我们调用-get-方法，HashMap-会使用键对象的-hashcode-找到-bucket-位置，找到-bucket-位置之后，会调用-keys-equals-方法去找到链表中正确的节点，最终找到要找的值对象。" class="headerlink" title="- 当我们调用 get() 方法，HashMap 会使用键对象的 hashcode 找到 bucket 位置，找到 bucket 位置之后，会调用 keys.equals() 方法去找到链表中正确的节点，最终找到要找的值对象。"></a>- 当我们调用 get() 方法，HashMap 会使用键对象的 hashcode 找到 bucket 位置，找到 bucket 位置之后，会调用 keys.equals() 方法去找到链表中正确的节点，最终找到要找的值对象。</h3><ol start="5"><li>hash源码</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">static final int hash(Object key) &#123;</span><br><span class="line"> if (key == null)&#123;</span><br><span class="line">     return 0;</span><br><span class="line"> &#125;</span><br><span class="line"> int h;</span><br><span class="line"> h = key.hashCode()；返回散列值也就是hashcode</span><br><span class="line"> // ^ ：按位异或</span><br><span class="line"> // &gt;&gt;&gt;:无符号右移，忽略符号位，空位都以0补齐</span><br><span class="line"> //其中n是数组的长度，即Map的数组部分初始化长度</span><br><span class="line"> return (n-1)&amp;(h ^ (h &gt;&gt;&gt; 16));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ul><li>源码分析(个人理解n初始化数组长度为16)<blockquote><p> 高16 bit 不变，低16 bit 和高16 bit 做了一个异或（得到的 hashcode 转化为32位二进制，前16位和后16位低16 bit和高16 bit做了一个异或）(n·1) &amp; hash = -&gt; 得到下标</p></blockquote></li></ul></li></ul><hr><ol start="6"><li><p>为什么一直使用红黑树，不使用二叉树呢?</p><ul><li>二叉树在使用过程中可能会变成一条线性结构，这就相当于链表结构了，查找速度会很慢。红黑树可以在插入数据时进行左旋，右旋、变色这些操作来保持平衡。所以，我们在长度大于8的时候，我们会使用红黑树，长度小于8的时候就没有必要用了，反而会更慢。</li></ul></li><li><p>说说你对红黑树的见解</p><ul><li>应该不会手撕。。。。<ol><li>每个节点非红即黑</li><li>根节点总是黑色的</li><li>如果节点是红色的，则它的子节点必须是黑色的（反之不一定）</li><li>每个叶子节点都是黑色的空节点（NIL节点）</li><li>从根节点到叶节点或空子节点的每条路径，必须包含相同数目的黑色节点（即相同的黑色高度）</li></ol></li></ul></li><li><p>解决hash碰撞的方法</p><ul><li><p>开放定址法</p><blockquote><h6 id="当冲突发生时，使用某种探查技术在散列表中形成一个探查（测）序列。沿此序列逐个单元地查找，直到找到给定的地址。按照形成探查序列的方法不同，可将开放定址法区分为线性探查法、二次探查法、双重散列法等。"><a href="#当冲突发生时，使用某种探查技术在散列表中形成一个探查（测）序列。沿此序列逐个单元地查找，直到找到给定的地址。按照形成探查序列的方法不同，可将开放定址法区分为线性探查法、二次探查法、双重散列法等。" class="headerlink" title="当冲突发生时，使用某种探查技术在散列表中形成一个探查（测）序列。沿此序列逐个单元地查找，直到找到给定的地址。按照形成探查序列的方法不同，可将开放定址法区分为线性探查法、二次探查法、双重散列法等。"></a>当冲突发生时，使用某种探查技术在散列表中形成一个探查（测）序列。沿此序列逐个单元地查找，直到找到给定的地址。按照形成探查序列的方法不同，可将开放定址法区分为线性探查法、二次探查法、双重散列法等。</h6></blockquote></li></ul></li><li><p>如果 HashMap 的大小超过了负载因子（load factor）定义的容量怎么办？</p><blockquote><h5 id="HashMap-默认的负载因子大小为0-75。也就是说，当一个-Map-填满了75-的-bucket-时候，和其它集合类一样（如-ArrayList-等），将会创建原来-HashMap-大小的两倍的-bucket-数组来重新调整-Map-大小，并将原来的对象放入新的-bucket-数组中。这个过程叫作-rehashing。只有两个可能的位置-一个是原下标的位置，另一种是在下标为-lt-原下标-原容量-gt-的位置。"><a href="#HashMap-默认的负载因子大小为0-75。也就是说，当一个-Map-填满了75-的-bucket-时候，和其它集合类一样（如-ArrayList-等），将会创建原来-HashMap-大小的两倍的-bucket-数组来重新调整-Map-大小，并将原来的对象放入新的-bucket-数组中。这个过程叫作-rehashing。只有两个可能的位置-一个是原下标的位置，另一种是在下标为-lt-原下标-原容量-gt-的位置。" class="headerlink" title="HashMap 默认的负载因子大小为0.75。也就是说，当一个 Map 填满了75%的 bucket 时候，和其它集合类一样（如 ArrayList 等），将会创建原来 HashMap 大小的两倍的 bucket 数组来重新调整 Map 大小，并将原来的对象放入新的 bucket 数组中。这个过程叫作 rehashing。只有两个可能的位置:一个是原下标的位置，另一种是在下标为 &lt;原下标+原容量&gt; 的位置。"></a>HashMap 默认的负载因子大小为0.75。也就是说，当一个 Map 填满了75%的 bucket 时候，和其它集合类一样（如 ArrayList 等），将会创建原来 HashMap 大小的两倍的 bucket 数组来重新调整 Map 大小，并将原来的对象放入新的 bucket 数组中。这个过程叫作 rehashing。<br><br><strong>只有两个可能的位置</strong>:一个是原下标的位置，另一种是在下标为 &lt;原下标+原容量&gt; 的位置。</h5></blockquote></li><li><p>什么情况会引起多线程</p><ol><li>在调整HashMap大小的时候，如果两个线程同时调整HashMap大小的话，可能会发生条件竞争。然后就—-&gt;死循环了。。。</li></ol></li><li><p>为什么多线程会死循环。怎么发生的？</p><blockquote><h6 id="HashMap-的容量是有限的。当经过多次元素插入，使得-HashMap-达到一定饱和度时，Key-映射位置发生冲突的几率会逐渐提高。这时候，-HashMap-需要扩展它的长度，也就是进行Resize。"><a href="#HashMap-的容量是有限的。当经过多次元素插入，使得-HashMap-达到一定饱和度时，Key-映射位置发生冲突的几率会逐渐提高。这时候，-HashMap-需要扩展它的长度，也就是进行Resize。" class="headerlink" title="HashMap 的容量是有限的。当经过多次元素插入，使得 HashMap 达到一定饱和度时，Key 映射位置发生冲突的几率会逐渐提高。这时候， HashMap 需要扩展它的长度，也就是进行Resize。"></a>HashMap 的容量是有限的。当经过多次元素插入，使得 HashMap 达到一定饱和度时，Key 映射位置发生冲突的几率会逐渐提高。这时候， HashMap 需要扩展它的长度，也就是进行Resize。<br><br></h6><h6 id="扩容：创建一个新的-Entry-空数组，长度是原数组的2倍rehash：遍历原-Entry-数组，把所有的-Entry-重新-Hash-详解"><a href="#扩容：创建一个新的-Entry-空数组，长度是原数组的2倍rehash：遍历原-Entry-数组，把所有的-Entry-重新-Hash-详解" class="headerlink" title="扩容：创建一个新的 Entry 空数组，长度是原数组的2倍rehash：遍历原 Entry 数组，把所有的 Entry 重新 Hash 详解"></a>扩容：创建一个新的 Entry 空数组，长度是原数组的2倍<br>rehash：遍历原 Entry 数组，把所有的 Entry 重新 Hash <a href="https://www.cnblogs.com/zhuoqingsen/p/8577646.html" target="_blank" rel="noopener">详解</a></h6></blockquote></li><li><p>HashMap 允许插入键为 null 的键值对。但是因为无法调用 null 的 hashCode() 方法，也就无法确定该键值对的桶下标，只能通过强制指定一个桶下标来存放。HashMap 使用第 0 个桶存放键为 null 的键值对。</p></li></ol><h3 id="容器的区别"><a href="#容器的区别" class="headerlink" title="容器的区别"></a>容器的区别</h3><p>==HashTable与HashTable==</p><ol><li>HashTable<ul><li>数组+链式存储</li><li>默认容量：11</li><li>put操作：首先进行索引计算 （key.hashCode() &amp; 0x7FFFFFFF）% table.length；若在链表中找到了，则替换旧值，若未找到则继续；当总元素个数超过 容量 * 加载因子 时，扩容为原来 2 倍并重新散列；将新元素加到链表头部</li><li>对修改 Hashtable 内部共享数据的方法添加了 synchronized，保证线程安全</li></ul></li><li>HashMap和HashTable的区别<ul><li>默认容量不同，扩容不同</li><li>线程安全性： HashTable安全</li><li>效率不同： HashTable要慢  加锁了</li></ul></li><li>可以使用 CocurrentHashMap 来代替 Hashtable 吗？<ul><li>我们知道 Hashtable 是 synchronized 的，但是 ConcurrentHashMap 同步性能更好，因为它仅仅根据同步级别对 map 的一部分进行上锁</li><li>ConcurrentHashMap 当然可以代替 HashTable，但是 HashTable 提供更强的线程安全性</li><li>它们都可以用于多线程的环境，但是当 Hashtable 的大小增加到一定的时候，性能会急剧下降，因为迭代时需要被锁定很长的时间。由于 ConcurrentHashMap 引入了分割（segmentation），不论它变得多么大，仅仅需要锁定 Map 的某个部分，其它的线程不需要等到迭代完成才能访问 Map。简而言之，在迭代的过程中，ConcurrentHashMap 仅仅锁定 Map 的某个部分，而 Hashtable 则会锁定整个 Map </li></ul></li></ol><p>==Collection详解==</p><ol><li>Set</li></ol><ul><li>TreeSet</li></ul><blockquote><p>基于红黑树实现，支持有序性操作，例如根据一个范围查找元素的操作。但是查找效率不如 HashSet，HashSet 查找的时间复杂度为 O(1)，TreeSet 则为 O(logN)。</p></blockquote><ul><li><p>HashSet</p><blockquote><p>基于哈希表实现，支持快速查找，但不支持有序性操作。并且失去了元素的插入顺序信息，也就是说使用 Iterator 遍历 HashSet 得到的结果是不确定的。</p></blockquote></li><li><p>LinkedHashSet</p><blockquote><p>具有 HashSet 的查找效率，且内部使用双向链表维护元素的插入顺序</p></blockquote></li></ul><ol start="2"><li>List</li></ol><ul><li>ArrayList</li></ul><blockquote><p>基于动态数组实现，支持随机访问。</p></blockquote><ul><li><p>Vector</p><blockquote><p>和 ArrayList 类似，但它是线程安全的。</p></blockquote></li><li><p>LinkedList</p><blockquote><p>基于双向链表实现，只能顺序访问，但是可以快速地在链表中间插入和删除元素。不仅如此，LinkedList 还可以用作栈、队列和双向队列。</p></blockquote></li></ul><ol start="3"><li>Queue</li></ol><ul><li>LinkedList</li></ul><blockquote><p>可以用来实现双向队列</p></blockquote><ul><li><p>PriorityQueue</p><blockquote><p>基于堆结构实现，可以用它来实现优先队列。</p></blockquote></li></ul><hr><ol start="4"><li>Map</li></ol><ul><li><p>TreeMap：基于红黑树实现。</p></li><li><p>HashMap：基于哈希表实现。</p></li><li><p>HashTable：和 HashMap 类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入 HashTable 并且不会导致数据不一致。它是遗留类，不应该去使用它。现在可以使用 ConcurrentHashMap 来支持线程安全，并且 ConcurrentHashMap 的效率会更高，因为 ConcurrentHashMap 引入了分段锁。</p></li><li><p>LinkedHashMap：使用双向链表来维护元素的顺序，顺序为插入顺序或者最近最少使用（LRU）顺序。</p></li></ul><h5 id="5-ArrayList和Vector的区别"><a href="#5-ArrayList和Vector的区别" class="headerlink" title="5. ArrayList和Vector的区别"></a>5. ArrayList和Vector的区别</h5><pre><code>Vector 是同步的，因此开销就比 ArrayList 要大，访问速度更慢。最好使用 ArrayList 而不是 Vector，因为同步操作完全可以由程序员自己来控制；Vector 每次扩容请求其大小的 2 倍空间，而 ArrayList 是 1.5 倍。可以使用 Collections.synchronizedList(); 得到一个线程安全的 ArrayList。List&lt;String&gt; list = new ArrayList&lt;&gt;();List&lt;String&gt; synList = Collections.synchronizedList(list);</code></pre><h5 id="6-ArrayList和LinkedList比较"><a href="#6-ArrayList和LinkedList比较" class="headerlink" title="6.ArrayList和LinkedList比较"></a>6.ArrayList和LinkedList比较</h5><pre><code>ArrayList 基于动态数组实现，LinkedList 基于双向链表实现；ArrayList 支持随机访问，LinkedList 不支持；LinkedList 在任意位置添加删除元素更快。</code></pre><h5 id="7-LinkedHashMap"><a href="#7-LinkedHashMap" class="headerlink" title="7.LinkedHashMap"></a>7.LinkedHashMap</h5><p>继承自 HashMap，因此具有和 HashMap 一样的快速查找特性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public class LinkedHashMap&lt;K,V&gt; extends HashMap&lt;K,V&gt; implements Map&lt;K,V&gt;</span><br></pre></td></tr></table></figure><p>内部维护了一个双向链表，用来维护插入顺序或者 LRU 顺序。</p><h5 id="8-为什么要实现序列化"><a href="#8-为什么要实现序列化" class="headerlink" title="8.为什么要实现序列化"></a>8.为什么要实现序列化</h5><pre><code>实现serializable接口的作用是就是可以把对象存到字节流，然后可以恢复。所以你想如果你的对象没实现序列化怎么才能进行网络传输呢，要网络传输就得转为字节流，所以在分布式应用中，你就得实现序列化，如果你不需要分布式应用，那就没那个必要实现序列化。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Java容器与设计模式解释&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java知识点" scheme="http://yoursite.com/categories/Java%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/06/18/hello-world/"/>
    <id>http://yoursite.com/2019/06/18/hello-world/</id>
    <published>2019-06-18T03:08:02.942Z</published>
    <updated>2019-06-21T08:06:44.756Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><a id="more"></a><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
