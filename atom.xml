<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小白</title>
  
  <subtitle>努力努力再努力</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-25T11:58:47.247Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>银尘</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计算机网络</title>
    <link href="http://yoursite.com/2019/06/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    <id>http://yoursite.com/2019/06/25/计算机网络/</id>
    <published>2019-06-25T05:27:18.000Z</published>
    <updated>2019-06-25T11:58:47.247Z</updated>
    
    <content type="html"><![CDATA[<p><font style="font-weight:bold;font-size:25px">👉💭计算机网络</font></p><a id="more"></a><p><strong>参考链接</strong></p><p><a href="https://baijiahao.baidu.com/s?id=1620169126251822734&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">计算机网络基础知识</a></p><p><a href="https://blog.csdn.net/weixin_41910694/article/details/91960815#jump1" target="_blank" rel="noopener">计算机网络</a></p><h3 id="1-计算机网络体系结构">1、计算机网络体系结构</h3><p><img src="/2019/06/25/计算机网络/jg.png" alt></p><table><thead><tr><th style="text-align:center">OSI七层模型</th><th style="text-align:center">TCP/IP概念层模型</th><th style="text-align:center">功能</th><th style="text-align:center">TCP/IP协议族</th></tr></thead><tbody><tr><td style="text-align:center">应用层</td><td style="text-align:center"></td><td style="text-align:center">文件传输，电子邮件，文件服务，虚拟终端</td><td style="text-align:center">TFTP，HTTP，DNS</td></tr><tr><td style="text-align:center">表示层</td><td style="text-align:center">应用层</td><td style="text-align:center">数据格式化，代码转换，数据加密</td><td style="text-align:center">没有协议</td></tr><tr><td style="text-align:center">会话层</td><td style="text-align:center"></td><td style="text-align:center">解除或建立与别的接点的联系</td><td style="text-align:center">没有协议</td></tr><tr><td style="text-align:center">传输层</td><td style="text-align:center">传输层</td><td style="text-align:center">提供端对端的接口</td><td style="text-align:center">TCP、UDP</td></tr><tr><td style="text-align:center">网络层</td><td style="text-align:center">网络层</td><td style="text-align:center">为数据包选择路由(数据传输服务)</td><td style="text-align:center">IP，ICMP、RIP、OSPF</td></tr><tr><td style="text-align:center">数据链路层</td><td style="text-align:center">链路层</td><td style="text-align:center">传输有地址的帧以及错误检验功能</td><td style="text-align:center">SLIP、CSLIP</td></tr><tr><td style="text-align:center">物理层</td><td style="text-align:center"></td><td style="text-align:center">以二进制数据形式在物理媒体上传输数据</td><td style="text-align:center">ISO02110</td></tr></tbody></table><h4 id="传输层的两种协议">传输层的两种协议</h4><p>​1、传输控制协议TCP：提供面向连接、可靠的数据传输服务、数据单位为报文段。</p><p>​2、用户数据报协议UDP：提供无连接、尽最大努力的数据传输服务、数据单位为用户数据报。</p><p>​3、TCP主要提供完整性服务，UDP主要提供及时性服务。</p><h4 id="tcp-ip">TCP/IP</h4><p>​1、它只有四层，相当于五层协议中数据链路层和物理层合并为网络接口层。</p><p>​2、TCP/IP 体系结构不严格遵循 OSI 分层概念，应用层可能会直接使用 IP 层或者网络接口层。</p><p>​3、TCP/IP 协议族是一种沙漏形状，中间小两边大，IP 协议在其中占据举足轻重的地位。</p><h3 id="2-物理层">2、物理层</h3><h4 id="2-1通信方式">2.1通信方式</h4><p>根据信息在传输线上的传送方向，分为以下三种通信方式：</p><ul><li>单工通信：单向传输</li><li>半双工通信：双向交替传输</li><li>全双工通信：双向同时传输</li></ul><h3 id="3-数据链路层">3、数据链路层</h3><h4 id="3-1基本问题">3.1基本问题</h4><h5 id="1-封装成帧">1、封装成帧</h5><blockquote><p>​将网络层传下来的分组添加首部和尾部，用于标记帧的开始和结束。</p></blockquote><h5 id="2-透明传输">2、透明传输</h5><blockquote><p>​透明表示一个实际存在的事物看起来好像不存在一样。</p><p><strong>fx</strong></p><p>​如果数据部分出现转义字符，那么就在转义字符前面再加个转义字符。在接收端进行处理之后可以还原出原始数据。这个过程透明传输的内容是转义字符，用户察觉不到转义字符的存在。</p></blockquote><h5 id="3-差错检验">3、差错检验</h5><blockquote><p>​目前数据链路层广泛使用了循环冗余检验（CRC）来检查比特差错</p></blockquote><h4 id="3-2信道分类">3.2信道分类</h4><h5 id="1-广播信道">1、 广播信道</h5><blockquote><p>​一对多通信，一个节点发送的数据能够被广播信道上所有的节点接收到。</p><p>所有的节点都在同一个广播信道上发送数据，因此需要有专门的控制方法进行协调，避免发生冲突（冲突也叫碰撞）。</p><p>主要有两种控制方法进行协调，一个是使用信道复用技术，一是使用 CSMA/CD 协议。</p></blockquote><h5 id="2-点对点信道">2、点对点信道</h5><blockquote><p>​因为不会发生碰撞，因此也比较简单，使用 PPP 协议进行控制。</p></blockquote><h4 id="3-3信道复用技术">3.3信道复用技术</h4><h5 id="1-频分复用">1、频分复用</h5><blockquote><p>​频分复用的所有主机在相同的时间占用不同的频率带宽资源。(利用率不高)</p></blockquote><h5 id="2-时分复用">2、时分复用</h5><blockquote><p>​时分复用的所有主机在不同的时间占用相同的频率带宽资源。(利用率不高)</p></blockquote><h5 id="3-统计时分复用">3、统计时分复用</h5><blockquote><p>是对时分复用的一种改进，不固定每个用户在时分复用帧中的位置，只要有数据就集中起来组成统计时分复用帧然后发送。</p></blockquote><h5 id="4-波分复用">4、波分复用</h5><blockquote><p>​光的频分复用。由于光的频率很高，因此习惯上用波长而不是频率来表示所使用的光载波。</p></blockquote><h5 id="5-码分复用">5、码分复用</h5><blockquote><p>​为每个用户分配 m bit 的码片，并且所有的码片正交，对于任意两个码片 s 和 t有</p></blockquote><h4 id="3-4-csma-cd-协议">3.4 CSMA/CD 协议</h4><p>CSMA/CD 表示载波监听多点接入 / 碰撞检测。</p><ul><li><strong>多点接入</strong> ：说明这是总线型网络，许多主机以多点的方式连接到总线上。</li><li><strong>载波监听</strong> ：每个主机都必须不停地监听信道。在发送前，如果监听到信道正在使用，就必须等待。</li><li><strong>碰撞检测</strong> ：在发送中，如果监听到信道已有其它主机正在发送数据，就表示发生了碰撞。虽然每个主机在发送数据之前都已经监听到信道为空闲，但是由于电磁波的传播时延的存在，还是有可能会发生碰撞。</li></ul><p>记端到端的传播时延为 τ，最先发送的站点最多经过 2τ 就可以知道是否发生了碰撞，称 2τ 为 <strong>争用期</strong> 。只有经过争用期之后还没有检测到碰撞，才能肯定这次发送不会发生碰撞。</p><h4 id="3-5-ppp协议">3.5 PPP协议</h4><blockquote><p>互联网用户通常需要连接到某个 ISP 之后才能接入到互联网，PPP 协议是用户计算机和 ISP 进行通信时所使用的数据链路层协议。</p></blockquote><h4 id="3-6-mac地址">3.6 MAC地址</h4><blockquote><p>MAC 地址是链路层地址，长度为 6 字节（48 位），用于唯一标识网络适配器（网卡）。</p></blockquote><h4 id="3-7局域网">3.7局域网</h4><blockquote><p>局域网是一种典型的广播信道，主要特点是网络为一个单位所拥有，且地理范围和站点数目均有限。</p></blockquote><h4 id="3-8以太网">3.8以太网</h4><blockquote><p>以太网是一种星型拓扑结构局域网。</p></blockquote><h4 id="3-9交换机">3.9交换机</h4><blockquote><p>交换机具有自学习能力，学习的是交换表的内容，交换表中存储着 MAC 地址到接口的映射。</p></blockquote><h4 id="3-10虚拟局域网">3.10虚拟局域网</h4><blockquote><p>虚拟局域网可以建立与物理位置无关的逻辑组，只有在同一个虚拟局域网中的成员才会收到链路层广播信息</p></blockquote><h3 id="4-网络层">4、网络层</h3><h4 id="4-1概念">4.1概念</h4><blockquote><p>因为网络层是整个互联网的核心，因此应当让网络层尽可能简单。网络层向上只提供简单灵活的、无连接的、尽最大努力交互的数据报服务。</p><p>使用 IP 协议，可以把异构的物理网络连接起来，使得在网络层看起来好像是一个统一的网络。</p></blockquote><p>与 IP 协议配套使用的还有三个协议：</p><ul><li><strong>地址解析协议 ARP（Address Resolution Protocol）</strong></li><li><strong>网际控制报文协议 ICMP（Internet Control Message Protocol）</strong></li><li><strong>网际组管理协议 IGMP（Internet Group Management Protocol）</strong></li></ul><h5 id="4-1-1-ip分类的历史">4.1.1 IP分类的历史</h5><p><strong>1.</strong> <strong>分类</strong></p><p>由两部分组成，网络号和主机号，其中不同分类具有不同的网络号长度，并且是固定的。</p><p>IP 地址 ::= {&lt; 网络号 &gt;, &lt; 主机号 &gt;}</p><p><strong>2.</strong> <strong>子网划分</strong></p><p>通过在主机号字段中拿一部分作为子网号，把两级 IP 地址划分为三级 IP 地址。</p><p>IP 地址 ::= {&lt; 网络号 &gt;, &lt; 子网号 &gt;, &lt; 主机号 &gt;}</p><p>要使用子网，必须配置子网掩码。一个 B 类地址的默认子网掩码为 255.255.0.0，如果 B 类地址的子网占两个比特，那么子网掩码为 11111111 11111111 11000000 00000000，也就是 255.255.192.0。</p><p>注意，外部网络看不到子网的存在。</p><p><strong>3.</strong> <strong>无分类</strong></p><p>无分类编址 CIDR 消除了传统 A 类、B 类和 C 类地址以及划分子网的概念，使用网络前缀和主机号来对 IP 地址进行编码，网络前缀的长度可以根据需要变化。</p><p>IP 地址 ::= {&lt; 网络前缀号 &gt;, &lt; 主机号 &gt;}</p><p>CIDR 的记法上采用在 IP 地址后面加上网络前缀长度的方法，例如 128.14.35.7/20 表示前 20 位为网络前缀。</p><p>CIDR 的地址掩码可以继续称为子网掩码，子网掩码首 1 长度为网络前缀的长度。</p><p>一个 CIDR 地址块中有很多地址，一个 CIDR 表示的网络就可以表示原来的很多个网络，并且在路由表中只需要一个路由就可以代替原来的多个路由，减少了路由表项的数量。把这种通过使用网络前缀来减少路由表项的方式称为路由聚合，也称为 <strong>构成超网</strong> 。</p><p>在路由表中的项目由“网络前缀”和“下一跳地址”组成，在查找时可能会得到不止一个匹配结果，应当采用最长前缀匹配来确定应该匹配哪一个。</p><h3 id="5-传输层">5、传输层</h3><h4 id="5-1tcp与udp的区别">5.1TCP与UDP的区别</h4><ul><li><p>TCP是面向连接的，UDP是无连接的；</p></li><li><p>TCP是可靠的，UDP是不可靠的；</p></li><li><p>TCP只支持点对点通信，UDP支持一对一、一对多、多对一、多对多的通信模式；</p></li><li><p>TCP是面向字节流的，UDP是面向报文的；</p></li><li><p>TCP有拥塞控制机制;UDP没有拥塞控制，适合媒体通信；</p></li><li><p>TCP首部开销(20个字节)比UDP的首部开销(8个字节)要大；</p></li></ul><h4 id="5-2三次握手👉建立tcp连接">5.2三次握手👉建立TCP连接</h4><blockquote><p>​所谓三次握手（Three-Way Handshake）即建立TCP连接，就是指建立一个TCP连接时，需要客户端和服务端总共发送3个包以确认连接的建立。在socket编程中，这一过程由客户端执行connect来触发，整个流程如下图所示：</p></blockquote><p><img src="http://pic.rmb.bdstatic.com/b2c69809e73399318b038fb81fb1ff67.png@wm_2,t_55m+5a625Y+3L+W3puaCoA==,fc_ffffff,ff_U2ltSGVp,sz_33,x_21,y_21" alt></p><h5 id="5-2-1详细解释">5.2.1详细解释</h5><p><strong>在下边介绍中使用到了标志位，这里也介绍一下</strong></p><blockquote><p>TCP标志位-------&gt;6种</p><p>SYN---------------------建立联机（同步序号）</p><p>ACK---------------------确认</p><p>PSH---------------------传送</p><p>FIN---------------------结束</p><p>RST---------------------重置</p><p>URG---------------------紧急</p><p>Sequence number-----------------顺序号码)</p><p>Acknowledge number-------------确认号码</p></blockquote><p>前提：A为客户端，B为服务端，B应该处于监听状态，等待客户需求。</p><p>第一步：A-&gt;B发起报文请求，SYN=1，ACK=0，初始序号为x.</p><p>第二步：B收到报文请求之后，如果同意建立连接，则会向A发送连接确认报文，SYN=1，ACK=1，确认号为x+1，同时也需要发送一个初始的序号y。</p><p>第三步：A收到B的确认之后，还需要继续向B发出确认，确认号为y+1，序号为x+1.B收到之后，与A建立连接。</p><h5 id="5-2-2为什么要进行三次握手">5.2.2为什么要进行三次握手</h5><p>第三次握手是为了防止失效的连接请求到达服务器，让服务器错误打开连接。</p><p>客户端发送的连接请求如果在网络中滞留，那么就会隔很长一段时间才能收到服务器端发回的连接确认。客户端等待一个超时重传时间之后，就会重新请求连接。但是这个滞留的连接请求最后还是会到达服务器，如果不进行三次握手，那么服务器就会打开两个连接。如果有第三次握手，客户端会忽略服务器之后发送的对滞留连接请求的连接确认，不进行第三次握手，因此就不会再次打开连接。</p><h5 id="5-2-3为什么不进行一次握手或者两次握手">5.2.3为什么不进行一次握手或者两次握手</h5><blockquote><p>​为什么不能一次握手很容易理解，TCP是面向连接的，一次握手肯定建立不了连接，一条信息发出去连个回信都没有怎么连接？</p><p>​所以问题在为什么不能两次握手，这个问题也很容易网上说的也不少，假设只有两次握手，比如图中的1，2步，当A想要建立连接时发送一个SYN，然后等待ACK，结果这个SYN因为网络问题没有及时到达B，所以A在一段时间内没收到ACK后，在发送一个SYN，B也成功收到，然后A也收到ACK，这时A发送的第一个SYN终于到了B，对于B来说这是一个新连接请求，然后B又为这个连接申请资源，返回ACK，然而这个SYN是个无效的请求，A收到这个SYN的ACK后也并不会理会它，而B却不知道，B会一直为这个连接维持着资源，造成资源的浪费</p><p>​那三次握手为什么可以？两次握手的问题在于服务器端不知道一个SYN是否是无效的，而三次握手机制因为客户端会给服务器回复第二次握手，也意味着服务器会等待客户端的第三次握手，如果第三次握手迟迟不来，服务器便会认为这个SYN是无效的，释放相关资源。但这时有个问题就是客户端完成第二次握手便认为连接已建立，而第三次握手可能在传输中丢失，服务端会认为连接是无效的，这时如果Client端向Server写数据，Server端将以RST包响应，方能感知到Server的错误。</p><p><strong>实现机制（上边已经阐述）</strong></p><p>第一次握手A发送SYN传输失败，A,B都不会申请资源，连接失败。如果一段时间内发出多个SYN连接请求，那么A只会接受它最后发送的那个SYN的SYN+ACK回应，忽略其他回应全部回应，B中多申请的资源也会释放</p><p>第二次握手B发送SYN+ACK传输失败，A不会申请资源，B申请了资源，但收不到A的ACK，过一段时间释放资源。如果是收到了多个A的SYN请求，B都会回复SYN+ACK，但A只会承认其中它最早发送的那个SYN的回应，并回复最后一次握手的ACK</p><p>第三次握手ACK传输失败，B没有收到ACK，释放资源，对于后序的A的传输数据返回RST。实际上B会因为没有收到A的ACK会多次发送SYN+ACK，次数是可以设置的，如果最后还是没有收到A的ACK，则释放资源，对A的数据传输返回RST</p></blockquote><h4 id="5-3四次挥手👉断开连接">5.3四次挥手👉断开连接</h4><blockquote><p>​四次挥手（Four-Way Wavehand）即终止TCP连接，就是指断开一个TCP连接时，需要客户端和服务端总共发送4个包以确认连接的断开。在socket编程中，这一过程由客户端或服务端任一方执行close来触发，整个流程如下图所示：</p></blockquote><p><img src="http://pic.rmb.bdstatic.com/845813c61190858b218abd19b9e15948.jpeg@wm_2,t_55m+5a625Y+3L+W3puaCoA==,fc_ffffff,ff_U2ltSGVp,sz_25,x_16,y_16" alt></p><h5 id="5-3-1详细解释">5.3.1详细解释</h5><p>第一步：A发送释放报文，FIN为1。</p><p>第二步：B结束之后发出确认，此时TCP属于半关闭状态，B能向A发送数据但是A不能向B发送数据。</p><p>第三步：当B不再需要连接时，发送连接释放报文，FIN=1.</p><p>第四步：A收到后发送确认，进入TIME-WAIT状态，等待2MSL后释放连接。B收到A的确认后释放连接。</p><h5 id="5-3-2为什么要进行四次挥手-为什么是四次而不是三次呢？">5.3.2为什么要进行四次挥手，为什么是四次而不是三次呢？</h5><p>为了断开TCP连接</p><pre><code>&gt;前两次挥手：结束一个方向的连接&gt;&gt;后两次挥手：结束另一个方向的连接</code></pre><p><strong>下边引入一张图片来深入理解一下</strong></p><p><img src="http://album.sina.com.cn/pic/0077QrK8zy7me4J7Crsd6" alt></p><h5 id="5-3-3为什么有time-wait？">5.3.3为什么有TIME_WAIT？</h5><p>客户端在接受服务器的FIN之后，并不是直接进入CLOSED状态，而是需要等待2MS，有以下两个原因</p><blockquote><p>​1、为了确保最后一个确认报文能够送达</p><p>​2、等待一段时间是为了让本连接持续时间内所产生的所有报文都从网络中消失，使得下一个新的连接不会出现旧的连接请求报文。</p></blockquote><h4 id="5-4tcp可靠传输">5.4TCP可靠传输</h4><p>​<strong>TCP 使用超时重传来实现可靠传输：如果一个已经发送的报文段在超时时间内没有收到确认，那么就重传这个报文段。</strong></p><h4 id="5-5tcp滑动窗口">5.5TCP滑动窗口</h4><h5 id="5-5-1作用">5.5.1作用</h5><p>​1、提供TCP的可靠性</p><p>​2、提供TCP的流控特性</p><h5 id="5-5-2tcp窗口机制">5.5.2TCP窗口机制</h5><blockquote><p>TCP的窗口机制有两种，一种是固定窗口大小，另一种是滑动窗口。数据在传输时,TCP会对所有数据进行编号，发送方在发送过程中始终保持着一个窗口，只有落在发送窗口内的数据帧才允许被发送；同时接受方也始终保持着一个接收窗口，只有落在窗口内的数据才会被接收。这样通过改变发送窗口和接收窗口的大小就可以实现流量控制。</p></blockquote><h5 id="5-5-3tcp窗口大小">5.5.3TCP窗口大小</h5><blockquote><p>当窗口过大时，会导致不必要的数据来拥塞我们的链路，但是窗口太小时，会造成很大的延时，比如为1时，发送方没发送一个数据，接受方就会返回一个ack报文，在发送方未接收到接受方的确认报文ack之前不会进行下一次发送。<strong>当链路变好了或者变差了这个窗口还会发生变化，并不是第一次协商好了以后就永远不变了。</strong></p></blockquote><h5 id="5-5-4窗口滑动协议">5.5.4窗口滑动协议</h5><blockquote><p>是TCP使用的一种流量控制方法。该协议允许发送方在停止并等待接收确认报文前可以连续发送多个分组。由于发送方不必每发一个分组就停下来等待确认，因此该协议可以加速数据的传输。 只有在接收窗口向前滑动时（与此同时也发送了确认），发送窗口才有可能向前滑动。收发两端的窗口按照以上规律不断地向前滑动，因此这种协议又称为滑动窗口协议。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;font style=&quot;font-weight:bold;font-size:25px&quot;&gt;👉💭计算机网络&lt;/font&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="网络" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="网络" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Spring事务管理</title>
    <link href="http://yoursite.com/2019/06/25/Spring%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2019/06/25/Spring事务管理/</id>
    <published>2019-06-25T03:20:42.000Z</published>
    <updated>2019-06-25T05:16:30.196Z</updated>
    
    <content type="html"><![CDATA[<p><font style="font-weight:bold;font-size:25px">👉🙋Spring事务管理</font></p><a id="more"></a><h2 id="1-spring的数据库编程">1、Spring的数据库编程</h2><h3 id="1-1spring-jdbc的配置">1.1Spring JDBC的配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DriverManagerDataSource"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--添加数据库连接驱动以及URL，USER，PASS--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-2spring-jdbctemplate的常用方法">1.2Spring JdbcTemplate的常用方法</h3><figure class="highlight plain"><figcaption><span>int update(String sql,Object args[]);```对数据表进行增加，修改，删除</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```public List&lt;T&gt; query(Strinbg sql,RowMapper&lt;T&gt; rowMapper,Object args[]);```查询操作，并映射到自定义类中----》rowMapper</span><br><span class="line"></span><br><span class="line">## 2、编程式事务管理</span><br><span class="line"></span><br><span class="line">&gt; ​概念：在代码中调用beginTransaction、commit、rollback等与事务处理相关的方法。</span><br><span class="line"></span><br><span class="line">### 2.1基于底层API的编程式事务管理</span><br><span class="line"></span><br><span class="line">&gt; ​基于底层API的编程式事务管理，就是根据**PlatformTransactionManager**、**TransactionDefinition** 和 **TransactionStatus** 三个核心接口，通过编程的方式来进行事务处理。</span><br><span class="line"></span><br><span class="line">#### 2.1.1给数据源配置事务管理器</span><br><span class="line"></span><br><span class="line">```xml</span><br><span class="line">&lt;!—为数据源添加事务管理器 --&gt;</span><br><span class="line">&lt;bean id=&quot;txManager&quot;   </span><br><span class="line">   class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;   </span><br><span class="line">   &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot; /&gt;   </span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><h4 id="2-1-2创建数据访问类">2.1.2创建数据访问类</h4><h4 id="2-1-3创建测试类">2.1.3创建测试类</h4><h3 id="2-2-基于transactiontemplate的编程式事务管理">2.2、基于TransactionTemplate的编程式事务管理</h3><blockquote><p>​TransactionTemplate的execute()方法有一个TransactionCallback接口类型的参数，该接口中定义了一个doInTransaction()方法，通常以匿名内部类的方式实现TransactionCallback 接口，并在其doInTransaction()方法中书写业务逻辑代码。这里可以使用默认的事务提交和回滚规则，在业务代码中不需要显式调用任何事务处理的API。doInTransaction()方法有一个TransactionStatus类型的参数，可以在方法的任何位置调用该参数的setRollbackOnly()方法将事务标识为回滚，以执行事务回滚。</p></blockquote><h2 id="3-声明式事务管理">3、声明式事务管理</h2><blockquote><p>​Spring的声明式事务管理是通过AOP技术实现的事务管理，其本质是对方法前后进行拦截，然后在目标方法开始之前创建或者加入一个事务，在执行完目标方法之后根据执行情况提交或者回滚事务。</p></blockquote><h3 id="3-1基于xml方式的声明式事务管理">3.1基于XML方式的声明式事务管理</h3><h4 id="3-1-1导入jar包">3.1.1导入jar包</h4><h4 id="3-1-2创建dao层">3.1.2创建Dao层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.statement.dao;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TestDao</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">save</span><span class="params">(String sql, Object param[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(String sql, Object param[])</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>TestDaoImpl实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.statement.dao;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"><span class="meta">@Repository</span>(<span class="string">"TestDao"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDaoImpl</span> <span class="keyword">implements</span> <span class="title">TestDao</span></span>&#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">save</span><span class="params">(String sql, Object[] param)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> jdbcTemplate.update(sql,param);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(String sql, Object[] param)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> jdbcTemplate.update(sql,param);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-1-3创建service层">3.1.3创建Service层</h4><h4 id="3-1-4创建controller层">3.1.4创建Controller层</h4><h4 id="3-1-5创建配置文件-重要">3.1.5创建配置文件—重要</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx/spring-tx.xsd"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 指定需要扫描的包（包括子包），使注解生效 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.statement"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 配置数据源 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DriverManagerDataSource"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- MySQL数据库驱动 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 连接数据库的URL --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/springtest?characterEncoding=utf8"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 连接数据库的用户名 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 连接数据库的密码 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 配置JDBC模板 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jdbcTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.core.JdbcTemplate"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 为数据源添加事务管理器 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"txManager"</span>   </span></span><br><span class="line"><span class="tag">     <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span>   </span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span>   </span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line">   <span class="comment">&lt;!-- 编写通知声明事务 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"myAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"txManager"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- *表示任意方法 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 编写AOP，让Spring自动对目标对象生成代理，需要使用AspectJ的表达式 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 定义切入点 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">expression</span>=<span class="string">"execution(* com.statement.service.*.*())"</span> <span class="attr">id</span>=<span class="string">"txPointCut"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 切面：将切入点与通知关联 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"myAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"txPointCut"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2基于-transactional注解的声明式事务管理">3.2基于@Transactional注解的声明式事务管理</h3><h4 id="3-2-1创建配置文件">3.2.1创建配置文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 为数据源添加事务管理器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"txManager"</span>   </span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span>   </span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line">  <span class="comment">&lt;!-- 为事务管理器注册注解驱动 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"txManager"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-2为service添加-transactional注解">3.2.2为Service添加@Transactional注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span>(<span class="string">"testService"</span>)</span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="comment">//加上注解@Transactional,就可以指定这个类需要受Spring的事务管理</span></span><br><span class="line"><span class="comment">//注意@Transactional只能针对public属性范围内的方法添加-----需要注意</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServiceImpl</span> <span class="keyword">implements</span> <span class="title">TestService</span></span>&#123;</span><br></pre></td></tr></table></figure><h3 id="3-3如何在事务处理中捕获异常">3.3如何在事务处理中捕获异常</h3><h4 id="3-3-1声明式事务处理的流程">3.3.1声明式事务处理的流程</h4><blockquote><p>​<font style="color:blue">1、Spring根据配置完成事务定义，设置事务属性</font></p><p>​<font style="color:blue">2、执行开发者的逻辑代码</font></p><p>​<font style="color:blue">3、如果开发者的代码产生异常（主键重复）并且满足回滚的配置文件，则事务回滚，否则事务提交</font></p><p>​<font style="color:blue">4、事务资源释放</font></p></blockquote><h4 id="3-3-2在基于xml的方式的声明式事务管理中捕获异常">3.3.2在基于XML的方式的声明式事务管理中捕获异常</h4><p>（1）为xml配置文件中添加 roolback-for=&quot;&quot;。</p><p>（2）在catch语句中添加throw new RuntimeException();</p><h4 id="3-3-3在基于注解的声明式事务管理中捕获异常">3.3.3在基于注解的声明式事务管理中捕获异常</h4><p>（1）@Transactional改为@Transactional(rollbackFor={Exception.class})</p><p>（2）在catch语句中添加throw new RuntimeException();</p><p><font style="color:red;font-weight:bold;font-size:20px">在实际项目中经常在catch语句中添加<code>TransactionAspectSupport.currentTransactionStatus.setRollbackOnly();</code></font></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;font style=&quot;font-weight:bold;font-size:25px&quot;&gt;👉🙋Spring事务管理&lt;/font&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>SpringAop</title>
    <link href="http://yoursite.com/2019/06/25/SpringAop/"/>
    <id>http://yoursite.com/2019/06/25/SpringAop/</id>
    <published>2019-06-25T00:52:00.000Z</published>
    <updated>2019-06-25T01:07:58.675Z</updated>
    
    <content type="html"><![CDATA[<p><font style="font-weight:bold;font-size:25px">👉SpringAop详解</font></p><a id="more"></a><h2 id="一-前言">一、前言</h2><p>​在以前的学习中，只学习了如何入使用AOP，并没有真正去了解Spring的一些核心概念。这几天通过上网搜索。看到了一篇博主的文章。特此摘抄：<a href="http://www.cnblogs.com/xrq730/p/4919025.html" target="_blank" rel="noopener">大佬博客</a></p><h4 id="aop"><strong>AOP</strong></h4><p>AOP（Aspect Oriented Programming），即面向切面编程，可以说是OOP（Object Oriented Programming，面向对象编程）的补充和完善。OOP引入封装、继承、多态等概念来建立一种对象层次结构，用于模拟公共行为的一个集合。不过OOP允许开发者定义纵向的关系，但并不适合定义横向的关系，例如日志功能。日志代码往往横向地散布在所有对象层次中，而与它对应的对象的核心功能毫无关系对于其他类型的代码，如安全性、异常处理和透明的持续性也都是如此，这种散布在各处的无关的代码被称为横切（cross cutting），在OOP设计中，它导致了大量代码的重复，而不利于各个模块的重用。</p><p>AOP技术恰恰相反，它利用一种称为&quot;横切&quot;的技术，剖解开封装的对象内部，并将那些影响了多个类的公共行为封装到一个可重用模块，并将其命名为&quot;Aspect&quot;，即切面。所谓&quot;切面&quot;，简单说就是那些与业务无关，却为业务模块所共同调用的逻辑或责任封装起来，便于减少系统的重复代码，降低模块之间的耦合度，并有利于未来的可操作性和可维护性。</p><p>使用&quot;横切&quot;技术，AOP把软件系统分为两个部分：<strong>核心关注点</strong>和<strong>横切关注点</strong>。业务处理的主要流程是核心关注点，与之关系不大的部分是横切关注点。横切关注点的一个特点是，他们经常发生在核心关注点的多处，而各处基本相似，比如权限认证、日志、事物。AOP的作用在于分离系统中的各种关注点，将核心关注点和横切关注点分离开来。</p><h4 id="aop核心概念"><strong>AOP核心概念</strong></h4><h5 id="1-横切关注点">1、横切关注点</h5><p>对哪些方法进行拦截，拦截后怎么处理，这些关注点称之为横切关注点</p><h5 id="2-切面-aspect">2、切面（aspect）</h5><p>类是对物体特征的抽象，切面就是对横切关注点的抽象</p><h5 id="3-连接点-joinpoint">3、连接点（joinpoint）</h5><p>被拦截到的点，因为Spring只支持方法类型的连接点，所以在Spring中连接点指的就是被拦截到的方法，实际上连接点还可以是字段或者构造器</p><h5 id="4-切入点-pointcut">4、切入点（pointcut）</h5><p>对连接点进行拦截的定义</p><h5 id="5-通知-advice">5、通知（advice）</h5><p>所谓通知指的就是指拦截到连接点之后要执行的代码，通知分为前置、后置、异常、最终、环绕通知五类</p><h5 id="6-目标对象">6、目标对象</h5><p>代理的目标对象</p><h5 id="7-织入-weave">7、织入（weave）</h5><p>将切面应用到目标对象并导致代理对象创建的过程</p><h5 id="8-引入-introduction">8、引入（introduction）</h5><p>在不修改代码的前提下，引入可以在<strong>运行期</strong>为类动态地添加一些方法或字段</p><h4 id="spring对aop的支持"><strong>Spring对AOP的支持</strong></h4><p><strong>Spring中AOP代理由Spring的IOC容器负责生成、管理，其依赖关系也由IOC容器负责管理</strong>。因此，AOP代理可以直接使用容器中的其它bean实例作为目标，这种关系可由IOC容器的依赖注入提供。Spring创建代理的规则为：</p><p>1、<strong>默认使用Java动态代理来创建AOP代理</strong>，这样就可以为任何接口实例创建代理了</p><p>2、<strong>当需要代理的类不是代理接口的时候，Spring会切换为使用CGLIB代理</strong>，也可强制使用CGLIB</p><p>AOP编程其实是很简单的事情，纵观AOP编程，程序员只需要参与三个部分：</p><p>1、定义普通业务组件</p><p>2、定义切入点，一个切入点可能横切多个业务组件</p><p>3、定义增强处理，增强处理就是在AOP框架为普通业务组件织入的处理动作</p><p>所以进行AOP编程的关键就是定义切入点和定义增强处理，一旦定义了合适的切入点和增强处理，AOP框架将自动生成AOP代理，即：<strong>代理对象的方法=增强处理+被代理对象</strong>的方法。</p><p>下面给出一个Spring AOP的.xml文件模板，名字叫做aop.xml，之后的内容都在aop.xml上进行扩展：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd"</span>&gt;</span></span><br><span class="line">            </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>基于Spring的AOP简单实现</strong></p><p>注意一下，在讲解之前，说明一点：使用Spring AOP，要成功运行起代码，只用Spring提供给开发者的jar包是不够的，请额外上网下载两个jar包：</p><p>1、aopalliance.jar</p><p>2、aspectjweaver.jar</p><p>开始讲解用Spring AOP的XML实现方式，先定义一个接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HelloWorld</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printHelloWorld</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">doPrint</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义两个接口实现类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldImpl1</span> <span class="keyword">implements</span> <span class="title">HelloWorld</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printHelloWorld</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Enter HelloWorldImpl1.printHelloWorld()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPrint</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Enter HelloWorldImpl1.doPrint()"</span>);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldImpl2</span> <span class="keyword">implements</span> <span class="title">HelloWorld</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printHelloWorld</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Enter HelloWorldImpl2.printHelloWorld()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPrint</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Enter HelloWorldImpl2.doPrint()"</span>);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>横切关注点，这里是打印时间：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeHandler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"CurrentTime = "</span> + System.currentTimeMillis());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有这三个类就可以实现一个简单的Spring AOP了，看一下aop.xml的配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd"</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"helloWorldImpl1"</span> <span class="attr">class</span>=<span class="string">"com.xrq.aop.HelloWorldImpl1"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"helloWorldImpl2"</span> <span class="attr">class</span>=<span class="string">"com.xrq.aop.HelloWorldImpl2"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"timeHandler"</span> <span class="attr">class</span>=<span class="string">"com.xrq.aop.TimeHandler"</span> /&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">id</span>=<span class="string">"time"</span> <span class="attr">ref</span>=<span class="string">"timeHandler"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"addAllMethod"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.xrq.aop.HelloWorld.*(..))"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">"printTime"</span> <span class="attr">pointcut-ref</span>=<span class="string">"addAllMethod"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">"printTime"</span> <span class="attr">pointcut-ref</span>=<span class="string">"addAllMethod"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>写一个main函数调用一下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ApplicationContext ctx = </span><br><span class="line">            <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"aop.xml"</span>);</span><br><span class="line">        </span><br><span class="line">    HelloWorld hw1 = (HelloWorld)ctx.getBean(<span class="string">"helloWorldImpl1"</span>);</span><br><span class="line">    HelloWorld hw2 = (HelloWorld)ctx.getBean(<span class="string">"helloWorldImpl2"</span>);</span><br><span class="line">    hw1.printHelloWorld();</span><br><span class="line">    System.out.println();</span><br><span class="line">    hw1.doPrint();</span><br><span class="line">    </span><br><span class="line">    System.out.println();</span><br><span class="line">    hw2.printHelloWorld();</span><br><span class="line">    System.out.println();</span><br><span class="line">    hw2.doPrint();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">CurrentTime = <span class="number">1446129611993</span></span><br><span class="line">Enter HelloWorldImpl1.printHelloWorld()</span><br><span class="line">CurrentTime = <span class="number">1446129611993</span></span><br><span class="line"></span><br><span class="line">CurrentTime = <span class="number">1446129611994</span></span><br><span class="line">Enter HelloWorldImpl1.doPrint()</span><br><span class="line">CurrentTime = <span class="number">1446129611994</span></span><br><span class="line"></span><br><span class="line">CurrentTime = <span class="number">1446129611994</span></span><br><span class="line">Enter HelloWorldImpl2.printHelloWorld()</span><br><span class="line">CurrentTime = <span class="number">1446129611994</span></span><br><span class="line"></span><br><span class="line">CurrentTime = <span class="number">1446129611994</span></span><br><span class="line">Enter HelloWorldImpl2.doPrint()</span><br><span class="line">CurrentTime = <span class="number">1446129611994</span></span><br></pre></td></tr></table></figure><p>看到给HelloWorld接口的两个实现类的所有方法都加上了代理，代理内容就是打印时间</p><p><strong>基于Spring的AOP使用其他细节</strong></p><p>1、增加一个横切关注点，打印日志，Java类为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogHandler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LogBefore</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Log before method"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LogAfter</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Log after method"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;beans xmlns=<span class="string">"http://www.springframework.org/schema/beans"</span></span><br><span class="line">    xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">    xmlns:aop=<span class="string">"http://www.springframework.org/schema/aop"</span></span><br><span class="line">    xmlns:tx=<span class="string">"http://www.springframework.org/schema/tx"</span></span><br><span class="line">    xsi:schemaLocation=<span class="string">"http://www.springframework.org/schema/beans</span></span><br><span class="line"><span class="string">        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd</span></span><br><span class="line"><span class="string">        http://www.springframework.org/schema/aop</span></span><br><span class="line"><span class="string">        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd"</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;bean id=<span class="string">"helloWorldImpl1"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.xrq.aop.HelloWorldImpl1"</span> /&gt;</span><br><span class="line">        &lt;bean id=<span class="string">"helloWorldImpl2"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.xrq.aop.HelloWorldImpl2"</span> /&gt;</span><br><span class="line">        &lt;bean id=<span class="string">"timeHandler"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.xrq.aop.TimeHandler"</span> /&gt;</span><br><span class="line">        &lt;bean id=<span class="string">"logHandler"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.xrq.aop.LogHandler"</span> /&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;aop:config&gt;</span><br><span class="line">            &lt;aop:aspect id=<span class="string">"time"</span> ref=<span class="string">"timeHandler"</span> order=<span class="string">"1"</span>&gt;</span><br><span class="line">                &lt;aop:pointcut id=<span class="string">"addTime"</span> expression=<span class="string">"execution(* com.xrq.aop.HelloWorld.*(..))"</span> /&gt;</span><br><span class="line">                &lt;aop:before method=<span class="string">"printTime"</span> pointcut-ref=<span class="string">"addTime"</span> /&gt;</span><br><span class="line">                &lt;aop:after method=<span class="string">"printTime"</span> pointcut-ref=<span class="string">"addTime"</span> /&gt;</span><br><span class="line">            &lt;/aop:aspect&gt;</span><br><span class="line">            &lt;aop:aspect id=<span class="string">"log"</span> ref=<span class="string">"logHandler"</span> order=<span class="string">"2"</span>&gt;</span><br><span class="line">                &lt;aop:pointcut id=<span class="string">"printLog"</span> expression=<span class="string">"execution(* com.xrq.aop.HelloWorld.*(..))"</span> /&gt;</span><br><span class="line">                &lt;aop:before method=<span class="string">"LogBefore"</span> pointcut-ref=<span class="string">"printLog"</span> /&gt;</span><br><span class="line">                &lt;aop:after method=<span class="string">"LogAfter"</span> pointcut-ref=<span class="string">"printLog"</span> /&gt;</span><br><span class="line">            &lt;/aop:aspect&gt;</span><br><span class="line">        &lt;/aop:config&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure><p>测试类不变，打印结果为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">CurrentTime = <span class="number">1446130273734</span></span><br><span class="line">Log before method</span><br><span class="line">Enter HelloWorldImpl1.printHelloWorld()</span><br><span class="line">Log after method</span><br><span class="line">CurrentTime = <span class="number">1446130273735</span></span><br><span class="line"></span><br><span class="line">CurrentTime = <span class="number">1446130273736</span></span><br><span class="line">Log before method</span><br><span class="line">Enter HelloWorldImpl1.doPrint()</span><br><span class="line">Log after method</span><br><span class="line">CurrentTime = <span class="number">1446130273736</span></span><br><span class="line"></span><br><span class="line">CurrentTime = <span class="number">1446130273736</span></span><br><span class="line">Log before method</span><br><span class="line">Enter HelloWorldImpl2.printHelloWorld()</span><br><span class="line">Log after method</span><br><span class="line">CurrentTime = <span class="number">1446130273736</span></span><br><span class="line"></span><br><span class="line">CurrentTime = <span class="number">1446130273737</span></span><br><span class="line">Log before method</span><br><span class="line">Enter HelloWorldImpl2.doPrint()</span><br><span class="line">Log after method</span><br><span class="line">CurrentTime = <span class="number">1446130273737</span></span><br></pre></td></tr></table></figure><p>要想让logHandler在timeHandler前使用有两个办法：</p><p>（1）aspect里面有一个order属性，order属性的数字就是横切关注点的顺序</p><p>（2）把logHandler定义在timeHandler前面，Spring默认以aspect的定义顺序作为织入顺序</p><p>2、我只想织入接口中的某些方法</p><p>修改一下pointcut的expression就好了：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;beans xmlns=<span class="string">"http://www.springframework.org/schema/beans"</span></span><br><span class="line">    xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">    xmlns:aop=<span class="string">"http://www.springframework.org/schema/aop"</span></span><br><span class="line">    xmlns:tx=<span class="string">"http://www.springframework.org/schema/tx"</span></span><br><span class="line">    xsi:schemaLocation=<span class="string">"http://www.springframework.org/schema/beans</span></span><br><span class="line"><span class="string">        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd</span></span><br><span class="line"><span class="string">        http://www.springframework.org/schema/aop</span></span><br><span class="line"><span class="string">        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd"</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;bean id=<span class="string">"helloWorldImpl1"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.xrq.aop.HelloWorldImpl1"</span> /&gt;</span><br><span class="line">        &lt;bean id=<span class="string">"helloWorldImpl2"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.xrq.aop.HelloWorldImpl2"</span> /&gt;</span><br><span class="line">        &lt;bean id=<span class="string">"timeHandler"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.xrq.aop.TimeHandler"</span> /&gt;</span><br><span class="line">        &lt;bean id=<span class="string">"logHandler"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.xrq.aop.LogHandler"</span> /&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;aop:config&gt;</span><br><span class="line">            &lt;aop:aspect id=<span class="string">"time"</span> ref=<span class="string">"timeHandler"</span> order=<span class="string">"1"</span>&gt;</span><br><span class="line">                &lt;aop:pointcut id=<span class="string">"addTime"</span> expression=<span class="string">"execution(* com.xrq.aop.HelloWorld.print*(..))"</span> /&gt;</span><br><span class="line">                &lt;aop:before method=<span class="string">"printTime"</span> pointcut-ref=<span class="string">"addTime"</span> /&gt;</span><br><span class="line">                &lt;aop:after method=<span class="string">"printTime"</span> pointcut-ref=<span class="string">"addTime"</span> /&gt;</span><br><span class="line">            &lt;/aop:aspect&gt;</span><br><span class="line">            &lt;aop:aspect id=<span class="string">"log"</span> ref=<span class="string">"logHandler"</span> order=<span class="string">"2"</span>&gt;</span><br><span class="line">                &lt;aop:pointcut id=<span class="string">"printLog"</span> expression=<span class="string">"execution(* com.xrq.aop.HelloWorld.do*(..))"</span> /&gt;</span><br><span class="line">                &lt;aop:before method=<span class="string">"LogBefore"</span> pointcut-ref=<span class="string">"printLog"</span> /&gt;</span><br><span class="line">                &lt;aop:after method=<span class="string">"LogAfter"</span> pointcut-ref=<span class="string">"printLog"</span> /&gt;</span><br><span class="line">            &lt;/aop:aspect&gt;</span><br><span class="line">        &lt;/aop:config&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure><p>表示timeHandler只会织入HelloWorld接口print开头的方法，logHandler只会织入HelloWorld接口do开头的方法</p><p>3、强制使用CGLIB生成代理</p><p>前面说过Spring使用动态代理或是CGLIB生成代理是有规则的，高版本的Spring会自动选择是使用动态代理还是CGLIB生成代理内容，当然我们也可以强制使用CGLIB生成代理，那就是&lt;aop:config&gt;里面有一个&quot;proxy-target-class&quot;属性，这个属性值如果被设置为true，那么基于类的代理将起作用，如果proxy-target-class被设置为false或者这个属性被省略，那么基于接口的代理将起作用</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;font style=&quot;font-weight:bold;font-size:25px&quot;&gt;👉SpringAop详解&lt;/font&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Hexo设置---MarkDown</title>
    <link href="http://yoursite.com/2019/06/24/Hexo%E8%AE%BE%E7%BD%AE-MarkDown/"/>
    <id>http://yoursite.com/2019/06/24/Hexo设置-MarkDown/</id>
    <published>2019-06-24T08:40:17.000Z</published>
    <updated>2019-06-24T08:43:10.968Z</updated>
    
    <content type="html"><![CDATA[<h1>hexo-renderer-markdown-it 插件 快速配置</h1><h2 id="简介">简介</h2><p><code>hexo-renderer-markdown-it</code> 是一款用于 Markdown 解析和渲染的插件。</p><ul><li>用于替换 Hexo 默认自带的 Markdown 渲染器。</li><li>提供了更丰富的 Markdown 解析和渲染。</li></ul><a id="more"></a><h2 id="安装">安装</h2><p>Hexo 主文件目录下：</p><ol><li><p>卸载 Hexo 默认自带的 Markdown 渲染器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>安装 <code>hexo-renderer-markdown-it</code> 插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-markdown-it --save</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="配置">配置</h2><p>Hexo 主配置文件 <code>_config.yml</code> 中添加以下配置内容（官方提供的完整配置）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># Markdown-it config</span><br><span class="line">markdown:</span><br><span class="line">  render:</span><br><span class="line">    html: true</span><br><span class="line">    xhtmlOut: false</span><br><span class="line">    breaks: true</span><br><span class="line">    linkify: true</span><br><span class="line">    typographer: true</span><br><span class="line">    quotes: &apos;“”‘’&apos;</span><br><span class="line">  plugins:</span><br><span class="line">    - markdown-it-abbr</span><br><span class="line">    - markdown-it-footnote</span><br><span class="line">    - markdown-it-ins</span><br><span class="line">    - markdown-it-sub</span><br><span class="line">    - markdown-it-sup</span><br><span class="line">  anchors:</span><br><span class="line">    level: 2</span><br><span class="line">    collisionSuffix: &apos;v&apos;</span><br><span class="line">    permalink: true</span><br><span class="line">    permalinkClass: header-anchor</span><br><span class="line">    permalinkSymbol: ¶</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;hexo-renderer-markdown-it 插件 快速配置&lt;/h1&gt;
&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;hexo-renderer-markdown-it&lt;/code&gt; 是一款用于 Markdown 解析和渲染的插件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于替换 Hexo 默认自带的 Markdown 渲染器。&lt;/li&gt;
&lt;li&gt;提供了更丰富的 Markdown 解析和渲染。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Hexo主题" scheme="http://yoursite.com/categories/Hexo%E4%B8%BB%E9%A2%98/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>GitHub表情</title>
    <link href="http://yoursite.com/2019/06/24/GitHub%E8%A1%A8%E6%83%85/"/>
    <id>http://yoursite.com/2019/06/24/GitHub表情/</id>
    <published>2019-06-24T07:51:30.000Z</published>
    <updated>2019-06-24T11:45:52.144Z</updated>
    
    <content type="html"><![CDATA[<p>😄  欢迎来到我的博客(小白)</p><p>🔑  <font style="font-style:italic">Dream  💗   I am coming</font></p><p>👉 最新emoji大全（来自大佬）：<a href="https://github.com/caiyongji/emoji-list" target="_blank" rel="noopener">emoji列表</a></p><a id="more"></a><h1>emoji-list</h1><p>emoji表情列表</p><p><a href="https://github.com/caiyongji/emoji-list/issues" target="_blank" rel="noopener"><img src="https://img.shields.io/github/issues/caiyongji/emoji-list.svg" alt="img"></a> <a href="https://github.com/caiyongji/emoji-list/network" target="_blank" rel="noopener"><img src="https://img.shields.io/github/forks/caiyongji/emoji-list.svg" alt="img"></a> <a href="https://github.com/caiyongji/emoji-list/stargazers" target="_blank" rel="noopener"><img src="https://img.shields.io/github/stars/caiyongji/emoji-list.svg" alt="img"></a> <a href="https://travis-ci.org/caiyongji/emoji-list" target="_blank" rel="noopener"><img src="https://travis-ci.org/caiyongji/emoji-list.svg?branch=master" alt="img"></a> <a href="https://github.com/caiyongji/emoji-list/releases" target="_blank" rel="noopener"><img src="https://img.shields.io/github/release/caiyongji/emoji-list.svg" alt="img"></a></p><h2 id="人物">人物</h2><table><thead><tr><th>:bowtie: <code>:bowtie:</code></th><th>😄 <code>:smile:</code></th><th>😆 <code>:laughing:</code></th></tr></thead><tbody><tr><td>😊 <code>:blush:</code></td><td>😃 <code>:smiley:</code></td><td>☺️ <code>:relaxed:</code></td></tr><tr><td>😏 <code>:smirk:</code></td><td>😍 <code>:heart_eyes:</code></td><td>😘 <code>:kissing_heart:</code></td></tr><tr><td>😚 <code>:kissing_closed_eyes:</code></td><td>😳 <code>:flushed:</code></td><td>😌 <code>:relieved:</code></td></tr><tr><td>😆 <code>:satisfied:</code></td><td>😁 <code>:grin:</code></td><td>😉 <code>:wink:</code></td></tr><tr><td>😜 <code>:stuck_out_tongue_winking_eye:</code></td><td>😝 <code>:stuck_out_tongue_closed_eyes:</code></td><td>😀 <code>:grinning:</code></td></tr><tr><td>😗 <code>:kissing:</code></td><td>😙 <code>:kissing_smiling_eyes:</code></td><td>😛 <code>:stuck_out_tongue:</code></td></tr><tr><td>😴 <code>:sleeping:</code></td><td>😟 <code>:worried:</code></td><td>😦 <code>:frowning:</code></td></tr><tr><td>😧 <code>:anguished:</code></td><td>😮 <code>:open_mouth:</code></td><td>😬 <code>:grimacing:</code></td></tr><tr><td>😕 <code>:confused:</code></td><td>😯 <code>:hushed:</code></td><td>😑 <code>:expressionless:</code></td></tr><tr><td>😒 <code>:unamused:</code></td><td>😅 <code>:sweat_smile:</code></td><td>😓 <code>:sweat:</code></td></tr><tr><td>😥 <code>:disappointed_relieved:</code></td><td>😩 <code>:weary:</code></td><td>😔 <code>:pensive:</code></td></tr><tr><td>😞 <code>:disappointed:</code></td><td>😖 <code>:confounded:</code></td><td>😨 <code>:fearful:</code></td></tr><tr><td>😰 <code>:cold_sweat:</code></td><td>😣 <code>:persevere:</code></td><td>😢 <code>:cry:</code></td></tr><tr><td>😭 <code>:sob:</code></td><td>😂 <code>:joy:</code></td><td>😲 <code>:astonished:</code></td></tr><tr><td>😱 <code>:scream:</code></td><td>:neckbeard: <code>:neckbeard:</code></td><td>😫 <code>:tired_face:</code></td></tr><tr><td>😠 <code>:angry:</code></td><td>😡 <code>:rage:</code></td><td>😤 <code>:triumph:</code></td></tr><tr><td>😪 <code>:sleepy:</code></td><td>😋 <code>:yum:</code></td><td>😷 <code>:mask:</code></td></tr><tr><td>😎 <code>:sunglasses:</code></td><td>😵 <code>:dizzy_face:</code></td><td>👿 <code>:imp:</code></td></tr><tr><td>😈 <code>:smiling_imp:</code></td><td>😐 <code>:neutral_face:</code></td><td>😶 <code>:no_mouth:</code></td></tr><tr><td>😇 <code>:innocent:</code></td><td>👽 <code>:alien:</code></td><td>💛 <code>:yellow_heart:</code></td></tr><tr><td>💙 <code>:blue_heart:</code></td><td>💜 <code>:purple_heart:</code></td><td>❤️ <code>:heart:</code></td></tr><tr><td>💚 <code>:green_heart:</code></td><td>💔 <code>:broken_heart:</code></td><td>💓 <code>:heartbeat:</code></td></tr><tr><td>💗 <code>:heartpulse:</code></td><td>💕 <code>:two_hearts:</code></td><td>💞 <code>:revolving_hearts:</code></td></tr><tr><td>💘 <code>:cupid:</code></td><td>💖 <code>:sparkling_heart:</code></td><td>✨ <code>:sparkles:</code></td></tr><tr><td>⭐ <code>:star:</code></td><td>🌟 <code>:star2:</code></td><td>💫 <code>:dizzy:</code></td></tr><tr><td>💥 <code>:boom:</code></td><td>💥 <code>:collision:</code></td><td>💢 <code>:anger:</code></td></tr><tr><td>❗ <code>:exclamation:</code></td><td>❓ <code>:question:</code></td><td>❕ <code>:grey_exclamation:</code></td></tr><tr><td>❔ <code>:grey_question:</code></td><td>💤 <code>:zzz:</code></td><td>💨 <code>:dash:</code></td></tr><tr><td>💦 <code>:sweat_drops:</code></td><td>🎶 <code>:notes:</code></td><td>🎵 <code>:musical_note:</code></td></tr><tr><td>🔥 <code>:fire:</code></td><td>💩 <code>:hankey:</code></td><td>💩 <code>:poop:</code></td></tr><tr><td>💩 <code>:shit:</code></td><td>👍 <code>:+1:</code></td><td>👍 <code>:thumbsup:</code></td></tr><tr><td>👎 <code>:-1:</code></td><td>👎 <code>:thumbsdown:</code></td><td>👌 <code>:ok_hand:</code></td></tr><tr><td>👊 <code>:punch:</code></td><td>👊 <code>:facepunch:</code></td><td>✊ <code>:fist:</code></td></tr><tr><td>✌️ <code>:v:</code></td><td>👋 <code>:wave:</code></td><td>✋ <code>:hand:</code></td></tr><tr><td>✋ <code>:raised_hand:</code></td><td>👐 <code>:open_hands:</code></td><td>☝️ <code>:point_up:</code></td></tr><tr><td>👇 <code>:point_down:</code></td><td>👈 <code>:point_left:</code></td><td>👉 <code>:point_right:</code></td></tr><tr><td>🙌 <code>:raised_hands:</code></td><td>🙏 <code>:pray:</code></td><td>👆 <code>:point_up_2:</code></td></tr><tr><td>👏 <code>:clap:</code></td><td>💪 <code>:muscle:</code></td><td>:metal: <code>:metal:</code></td></tr><tr><td>:fu: <code>:fu:</code></td><td>🚶 <code>:walking:</code></td><td>🏃 <code>:runner:</code></td></tr><tr><td>🏃 <code>:running:</code></td><td>👫 <code>:couple:</code></td><td>👪 <code>:family:</code></td></tr><tr><td>👬 <code>:two_men_holding_hands:</code></td><td>👭 <code>:two_women_holding_hands:</code></td><td>💃 <code>:dancer:</code></td></tr><tr><td>👯 <code>:dancers:</code></td><td>🙆 <code>:ok_woman:</code></td><td>🙅 <code>:no_good:</code></td></tr><tr><td>💁 <code>:information_desk_person:</code></td><td>🙋 <code>:raising_hand:</code></td><td>👰 <code>:bride_with_veil:</code></td></tr><tr><td>🙎 <code>:person_with_pouting_face:</code></td><td>🙍 <code>:person_frowning:</code></td><td>🙇 <code>:bow:</code></td></tr><tr><td>💏 <code>:couplekiss:</code></td><td>💑 <code>:couple_with_heart:</code></td><td>💆 <code>:massage:</code></td></tr><tr><td>💇 <code>:haircut:</code></td><td>💅 <code>:nail_care:</code></td><td>👦 <code>:boy:</code></td></tr><tr><td>👧 <code>:girl:</code></td><td>👩 <code>:woman:</code></td><td>👨 <code>:man:</code></td></tr><tr><td>👶 <code>:baby:</code></td><td>👵 <code>:older_woman:</code></td><td>👴 <code>:older_man:</code></td></tr><tr><td>👱 <code>:person_with_blond_hair:</code></td><td>👲 <code>:man_with_gua_pi_mao:</code></td><td>👳 <code>:man_with_turban:</code></td></tr><tr><td>👷 <code>:construction_worker:</code></td><td>👮 <code>:cop:</code></td><td>👼 <code>:angel:</code></td></tr><tr><td>👸 <code>:princess:</code></td><td>😺 <code>:smiley_cat:</code></td><td>😸 <code>:smile_cat:</code></td></tr><tr><td>😻 <code>:heart_eyes_cat:</code></td><td>😽 <code>:kissing_cat:</code></td><td>😼 <code>:smirk_cat:</code></td></tr><tr><td>🙀 <code>:scream_cat:</code></td><td>😿 <code>:crying_cat_face:</code></td><td>😹 <code>:joy_cat:</code></td></tr><tr><td>😾 <code>:pouting_cat:</code></td><td>👹 <code>:japanese_ogre:</code></td><td>👺 <code>:japanese_goblin:</code></td></tr><tr><td>🙈 <code>:see_no_evil:</code></td><td>🙉 <code>:hear_no_evil:</code></td><td>🙊 <code>:speak_no_evil:</code></td></tr><tr><td>💂 <code>:guardsman:</code></td><td>💀 <code>:skull:</code></td><td>🐾 <code>:feet:</code></td></tr><tr><td>👄 <code>:lips:</code></td><td>💋 <code>:kiss:</code></td><td>💧 <code>:droplet:</code></td></tr><tr><td>👂 <code>:ear:</code></td><td>👀 <code>:eyes:</code></td><td>👃 <code>:nose:</code></td></tr><tr><td>👅 <code>:tongue:</code></td><td>💌 <code>:love_letter:</code></td><td>👤 <code>:bust_in_silhouette:</code></td></tr><tr><td>👥 <code>:busts_in_silhouette:</code></td><td>💬 <code>:speech_balloon:</code></td><td>💭 <code>:thought_balloon:</code></td></tr><tr><td>:feelsgood: <code>:feelsgood:</code></td><td>:finnadie: <code>:finnadie:</code></td><td>:goberserk: <code>:goberserk:</code></td></tr><tr><td>:godmode: <code>:godmode:</code></td><td>:hurtrealbad: <code>:hurtrealbad:</code></td><td>:rage1: <code>:rage1:</code></td></tr><tr><td>:rage2: <code>:rage2:</code></td><td>:rage3: <code>:rage3:</code></td><td>:rage4: <code>:rage4:</code></td></tr><tr><td>:suspect: <code>:suspect:</code></td><td>:trollface: <code>:trollface:</code></td><td></td></tr></tbody></table><h2 id="自然">自然</h2><table><thead><tr><th>☀️ <code>:sunny:</code></th><th>☔ <code>:umbrella:</code></th><th>☁️ <code>:cloud:</code></th></tr></thead><tbody><tr><td>❄️ <code>:snowflake:</code></td><td>⛄ <code>:snowman:</code></td><td>⚡ <code>:zap:</code></td></tr><tr><td>🌀 <code>:cyclone:</code></td><td>🌁 <code>:foggy:</code></td><td>🌊 <code>:ocean:</code></td></tr><tr><td>🐱 <code>:cat:</code></td><td>🐶 <code>:dog:</code></td><td>🐭 <code>:mouse:</code></td></tr><tr><td>🐹 <code>:hamster:</code></td><td>🐰 <code>:rabbit:</code></td><td>🐺 <code>:wolf:</code></td></tr><tr><td>🐸 <code>:frog:</code></td><td>🐯 <code>:tiger:</code></td><td>🐨 <code>:koala:</code></td></tr><tr><td>🐻 <code>:bear:</code></td><td>🐷 <code>:pig:</code></td><td>🐽 <code>:pig_nose:</code></td></tr><tr><td>🐮 <code>:cow:</code></td><td>🐗 <code>:boar:</code></td><td>🐵 <code>:monkey_face:</code></td></tr><tr><td>🐒 <code>:monkey:</code></td><td>🐴 <code>:horse:</code></td><td>🐎 <code>:racehorse:</code></td></tr><tr><td>🐫 <code>:camel:</code></td><td>🐑 <code>:sheep:</code></td><td>🐘 <code>:elephant:</code></td></tr><tr><td>🐼 <code>:panda_face:</code></td><td>🐍 <code>:snake:</code></td><td>🐦 <code>:bird:</code></td></tr><tr><td>🐤 <code>:baby_chick:</code></td><td>🐥 <code>:hatched_chick:</code></td><td>🐣 <code>:hatching_chick:</code></td></tr><tr><td>🐔 <code>:chicken:</code></td><td>🐧 <code>:penguin:</code></td><td>🐢 <code>:turtle:</code></td></tr><tr><td>🐛 <code>:bug:</code></td><td>🐝 <code>:honeybee:</code></td><td>🐜 <code>:ant:</code></td></tr><tr><td>🐞 <code>:beetle:</code></td><td>🐌 <code>:snail:</code></td><td>🐙 <code>:octopus:</code></td></tr><tr><td>🐠 <code>:tropical_fish:</code></td><td>🐟 <code>:fish:</code></td><td>🐳 <code>:whale:</code></td></tr><tr><td>🐋 <code>:whale2:</code></td><td>🐬 <code>:dolphin:</code></td><td>🐄 <code>:cow2:</code></td></tr><tr><td>🐏 <code>:ram:</code></td><td>🐀 <code>:rat:</code></td><td>🐃 <code>:water_buffalo:</code></td></tr><tr><td>🐅 <code>:tiger2:</code></td><td>🐇 <code>:rabbit2:</code></td><td>🐉 <code>:dragon:</code></td></tr><tr><td>🐐 <code>:goat:</code></td><td>🐓 <code>:rooster:</code></td><td>🐕 <code>:dog2:</code></td></tr><tr><td>🐖 <code>:pig2:</code></td><td>🐁 <code>:mouse2:</code></td><td>🐂 <code>:ox:</code></td></tr><tr><td>🐲 <code>:dragon_face:</code></td><td>🐡 <code>:blowfish:</code></td><td>🐊 <code>:crocodile:</code></td></tr><tr><td>🐪 <code>:dromedary_camel:</code></td><td>🐆 <code>:leopard:</code></td><td>🐈 <code>:cat2:</code></td></tr><tr><td>🐩 <code>:poodle:</code></td><td>🐾 <code>:paw_prints:</code></td><td>💐 <code>:bouquet:</code></td></tr><tr><td>🌸 <code>:cherry_blossom:</code></td><td>🌷 <code>:tulip:</code></td><td>🍀 <code>:four_leaf_clover:</code></td></tr><tr><td>🌹 <code>:rose:</code></td><td>🌻 <code>:sunflower:</code></td><td>🌺 <code>:hibiscus:</code></td></tr><tr><td>🍁 <code>:maple_leaf:</code></td><td>🍃 <code>:leaves:</code></td><td>🍂 <code>:fallen_leaf:</code></td></tr><tr><td>🌿 <code>:herb:</code></td><td>🍄 <code>:mushroom:</code></td><td>🌵 <code>:cactus:</code></td></tr><tr><td>🌴 <code>:palm_tree:</code></td><td>🌲 <code>:evergreen_tree:</code></td><td>🌳 <code>:deciduous_tree:</code></td></tr><tr><td>🌰 <code>:chestnut:</code></td><td>🌱 <code>:seedling:</code></td><td>🌼 <code>:blossom:</code></td></tr><tr><td>🌾 <code>:ear_of_rice:</code></td><td>🐚 <code>:shell:</code></td><td>🌐 <code>:globe_with_meridians:</code></td></tr><tr><td>🌞 <code>:sun_with_face:</code></td><td>🌝 <code>:full_moon_with_face:</code></td><td>🌚 <code>:new_moon_with_face:</code></td></tr><tr><td>🌑 <code>:new_moon:</code></td><td>🌒 <code>:waxing_crescent_moon:</code></td><td>🌓 <code>:first_quarter_moon:</code></td></tr><tr><td>🌔 <code>:waxing_gibbous_moon:</code></td><td>🌕 <code>:full_moon:</code></td><td>🌖 <code>:waning_gibbous_moon:</code></td></tr><tr><td>🌗 <code>:last_quarter_moon:</code></td><td>🌘 <code>:waning_crescent_moon:</code></td><td>🌜 <code>:last_quarter_moon_with_face:</code></td></tr><tr><td>🌛 <code>:first_quarter_moon_with_face:</code></td><td>🌔 <code>:moon:</code></td><td>🌍 <code>:earth_africa:</code></td></tr><tr><td>🌎 <code>:earth_americas:</code></td><td>🌏 <code>:earth_asia:</code></td><td>🌋 <code>:volcano:</code></td></tr><tr><td>🌌 <code>:milky_way:</code></td><td>⛅ <code>:partly_sunny:</code></td><td>:octocat: <code>:octocat:</code></td></tr><tr><td>:squirrel: <code>:squirrel:</code></td><td></td><td></td></tr></tbody></table><h2 id="事物">事物</h2><table><thead><tr><th>🎍 <code>:bamboo:</code></th><th>💝 <code>:gift_heart:</code></th><th>🎎 <code>:dolls:</code></th></tr></thead><tbody><tr><td>🎒 <code>:school_satchel:</code></td><td>🎓 <code>:mortar_board:</code></td><td>🎏 <code>:flags:</code></td></tr><tr><td>🎆 <code>:fireworks:</code></td><td>🎇 <code>:sparkler:</code></td><td>🎐 <code>:wind_chime:</code></td></tr><tr><td>🎑 <code>:rice_scene:</code></td><td>🎃 <code>:jack_o_lantern:</code></td><td>👻 <code>:ghost:</code></td></tr><tr><td>🎅 <code>:santa:</code></td><td>🎄 <code>:christmas_tree:</code></td><td>🎁 <code>:gift:</code></td></tr><tr><td>🔔 <code>:bell:</code></td><td>🔕 <code>:no_bell:</code></td><td>🎋 <code>:tanabata_tree:</code></td></tr><tr><td>🎉 <code>:tada:</code></td><td>🎊 <code>:confetti_ball:</code></td><td>🎈 <code>:balloon:</code></td></tr><tr><td>🔮 <code>:crystal_ball:</code></td><td>💿 <code>:cd:</code></td><td>📀 <code>:dvd:</code></td></tr><tr><td>💾 <code>:floppy_disk:</code></td><td>📷 <code>:camera:</code></td><td>📹 <code>:video_camera:</code></td></tr><tr><td>🎥 <code>:movie_camera:</code></td><td>💻 <code>:computer:</code></td><td>📺 <code>:tv:</code></td></tr><tr><td>📱 <code>:iphone:</code></td><td>☎️ <code>:phone:</code></td><td>☎️ <code>:telephone:</code></td></tr><tr><td>📞 <code>:telephone_receiver:</code></td><td>📟 <code>:pager:</code></td><td>📠 <code>:fax:</code></td></tr><tr><td>💽 <code>:minidisc:</code></td><td>📼 <code>:vhs:</code></td><td>🔉 <code>:sound:</code></td></tr><tr><td>🔈 <code>:speaker:</code></td><td>🔇 <code>:mute:</code></td><td>📢 <code>:loudspeaker:</code></td></tr><tr><td>📣 <code>:mega:</code></td><td>⌛ <code>:hourglass:</code></td><td>⏳ <code>:hourglass_flowing_sand:</code></td></tr><tr><td>⏰ <code>:alarm_clock:</code></td><td>⌚ <code>:watch:</code></td><td>📻 <code>:radio:</code></td></tr><tr><td>📡 <code>:satellite:</code></td><td>➿ <code>:loop:</code></td><td>🔍 <code>:mag:</code></td></tr><tr><td>🔎 <code>:mag_right:</code></td><td>🔓 <code>:unlock:</code></td><td>🔒 <code>:lock:</code></td></tr><tr><td>🔏 <code>:lock_with_ink_pen:</code></td><td>🔐 <code>:closed_lock_with_key:</code></td><td>🔑 <code>:key:</code></td></tr><tr><td>💡 <code>:bulb:</code></td><td>🔦 <code>:flashlight:</code></td><td>🔆 <code>:high_brightness:</code></td></tr><tr><td>🔅 <code>:low_brightness:</code></td><td>🔌 <code>:electric_plug:</code></td><td>🔋 <code>:battery:</code></td></tr><tr><td>📲 <code>:calling:</code></td><td>✉️ <code>:email:</code></td><td>📫 <code>:mailbox:</code></td></tr><tr><td>📮 <code>:postbox:</code></td><td>🛀 <code>:bath:</code></td><td>🛁 <code>:bathtub:</code></td></tr><tr><td>🚿 <code>:shower:</code></td><td>🚽 <code>:toilet:</code></td><td>🔧 <code>:wrench:</code></td></tr><tr><td>🔩 <code>:nut_and_bolt:</code></td><td>🔨 <code>:hammer:</code></td><td>💺 <code>:seat:</code></td></tr><tr><td>💰 <code>:moneybag:</code></td><td>💴 <code>:yen:</code></td><td>💵 <code>:dollar:</code></td></tr><tr><td>💷 <code>:pound:</code></td><td>💶 <code>:euro:</code></td><td>💳 <code>:credit_card:</code></td></tr><tr><td>💸 <code>:money_with_wings:</code></td><td>📧 <code>:e-mail:</code></td><td>📥 <code>:inbox_tray:</code></td></tr><tr><td>📤 <code>:outbox_tray:</code></td><td>✉️ <code>:envelope:</code></td><td>📨 <code>:incoming_envelope:</code></td></tr><tr><td>📯 <code>:postal_horn:</code></td><td>📪 <code>:mailbox_closed:</code></td><td>📬 <code>:mailbox_with_mail:</code></td></tr><tr><td>📭 <code>:mailbox_with_no_mail:</code></td><td>🚪 <code>:door:</code></td><td>🚬 <code>:smoking:</code></td></tr><tr><td>💣 <code>:bomb:</code></td><td>🔫 <code>:gun:</code></td><td>🔪 <code>:hocho:</code></td></tr><tr><td>💊 <code>:pill:</code></td><td>💉 <code>:syringe:</code></td><td>📄 <code>:page_facing_up:</code></td></tr><tr><td>📃 <code>:page_with_curl:</code></td><td>📑 <code>:bookmark_tabs:</code></td><td>📊 <code>:bar_chart:</code></td></tr><tr><td>📈 <code>:chart_with_upwards_trend:</code></td><td>📉 <code>:chart_with_downwards_trend:</code></td><td>📜 <code>:scroll:</code></td></tr><tr><td>📋 <code>:clipboard:</code></td><td>📆 <code>:calendar:</code></td><td>📅 <code>:date:</code></td></tr><tr><td>📇 <code>:card_index:</code></td><td>📁 <code>:file_folder:</code></td><td>📂 <code>:open_file_folder:</code></td></tr><tr><td>✂️ <code>:scissors:</code></td><td>📌 <code>:pushpin:</code></td><td>📎 <code>:paperclip:</code></td></tr><tr><td>✒️ <code>:black_nib:</code></td><td>✏️ <code>:pencil2:</code></td><td>📏 <code>:straight_ruler:</code></td></tr><tr><td>📐 <code>:triangular_ruler:</code></td><td>📕 <code>:closed_book:</code></td><td>📗 <code>:green_book:</code></td></tr><tr><td>📘 <code>:blue_book:</code></td><td>📙 <code>:orange_book:</code></td><td>📓 <code>:notebook:</code></td></tr><tr><td>📔 <code>:notebook_with_decorative_cover:</code></td><td>📒 <code>:ledger:</code></td><td>📚 <code>:books:</code></td></tr><tr><td>🔖 <code>:bookmark:</code></td><td>📛 <code>:name_badge:</code></td><td>🔬 <code>:microscope:</code></td></tr><tr><td>🔭 <code>:telescope:</code></td><td>📰 <code>:newspaper:</code></td><td>🏈 <code>:football:</code></td></tr><tr><td>🏀 <code>:basketball:</code></td><td>⚽ <code>:soccer:</code></td><td>⚾️ <code>:baseball:</code></td></tr><tr><td>🎾 <code>:tennis:</code></td><td>🎱 <code>:8ball:</code></td><td>🏉 <code>:rugby_football:</code></td></tr><tr><td>🎳 <code>:bowling:</code></td><td>⛳ <code>:golf:</code></td><td>🚵 <code>:mountain_bicyclist:</code></td></tr><tr><td>🚴 <code>:bicyclist:</code></td><td>🏇 <code>:horse_racing:</code></td><td>🏂 <code>:snowboarder:</code></td></tr><tr><td>🏊 <code>:swimmer:</code></td><td>🏄 <code>:surfer:</code></td><td>🎿 <code>:ski:</code></td></tr><tr><td>♠️ <code>:spades:</code></td><td>♥️ <code>:hearts:</code></td><td>♣️ <code>:clubs:</code></td></tr><tr><td>♦️ <code>:diamonds:</code></td><td>💎 <code>:gem:</code></td><td>💍 <code>:ring:</code></td></tr><tr><td>🏆 <code>:trophy:</code></td><td>🎼 <code>:musical_score:</code></td><td>🎹 <code>:musical_keyboard:</code></td></tr><tr><td>🎻 <code>:violin:</code></td><td>👾 <code>:space_invader:</code></td><td>🎮 <code>:video_game:</code></td></tr><tr><td>🃏 <code>:black_joker:</code></td><td>🎴 <code>:flower_playing_cards:</code></td><td>🎲 <code>:game_die:</code></td></tr><tr><td>🎯 <code>:dart:</code></td><td>🀄 <code>:mahjong:</code></td><td>🎬 <code>:clapper:</code></td></tr><tr><td>📝 <code>:memo:</code></td><td>📝 <code>:pencil:</code></td><td>📖 <code>:book:</code></td></tr><tr><td>🎨 <code>:art:</code></td><td>🎤 <code>:microphone:</code></td><td>🎧 <code>:headphones:</code></td></tr><tr><td>🎺 <code>:trumpet:</code></td><td>🎷 <code>:saxophone:</code></td><td>🎸 <code>:guitar:</code></td></tr><tr><td>👞 <code>:shoe:</code></td><td>👡 <code>:sandal:</code></td><td>👠 <code>:high_heel:</code></td></tr><tr><td>💄 <code>:lipstick:</code></td><td>👢 <code>:boot:</code></td><td>👕 <code>:shirt:</code></td></tr><tr><td>👕 <code>:tshirt:</code></td><td>👔 <code>:necktie:</code></td><td>👚 <code>:womans_clothes:</code></td></tr><tr><td>👗 <code>:dress:</code></td><td>🎽 <code>:running_shirt_with_sash:</code></td><td>👖 <code>:jeans:</code></td></tr><tr><td>👘 <code>:kimono:</code></td><td>👙 <code>:bikini:</code></td><td>🎀 <code>:ribbon:</code></td></tr><tr><td>🎩 <code>:tophat:</code></td><td>👑 <code>:crown:</code></td><td>👒 <code>:womans_hat:</code></td></tr><tr><td>👞 <code>:mans_shoe:</code></td><td>🌂 <code>:closed_umbrella:</code></td><td>💼 <code>:briefcase:</code></td></tr><tr><td>👜 <code>:handbag:</code></td><td>👝 <code>:pouch:</code></td><td>👛 <code>:purse:</code></td></tr><tr><td>👓 <code>:eyeglasses:</code></td><td>🎣 <code>:fishing_pole_and_fish:</code></td><td>☕ <code>:coffee:</code></td></tr><tr><td>🍵 <code>:tea:</code></td><td>🍶 <code>:sake:</code></td><td>🍼 <code>:baby_bottle:</code></td></tr><tr><td>🍺 <code>:beer:</code></td><td>🍻 <code>:beers:</code></td><td>🍸 <code>:cocktail:</code></td></tr><tr><td>🍹 <code>:tropical_drink:</code></td><td>🍷 <code>:wine_glass:</code></td><td>🍴 <code>:fork_and_knife:</code></td></tr><tr><td>🍕 <code>:pizza:</code></td><td>🍔 <code>:hamburger:</code></td><td>🍟 <code>:fries:</code></td></tr><tr><td>🍗 <code>:poultry_leg:</code></td><td>🍖 <code>:meat_on_bone:</code></td><td>🍝 <code>:spaghetti:</code></td></tr><tr><td>🍛 <code>:curry:</code></td><td>🍤 <code>:fried_shrimp:</code></td><td>🍱 <code>:bento:</code></td></tr><tr><td>🍣 <code>:sushi:</code></td><td>🍥 <code>:fish_cake:</code></td><td>🍙 <code>:rice_ball:</code></td></tr><tr><td>🍘 <code>:rice_cracker:</code></td><td>🍚 <code>:rice:</code></td><td>🍜 <code>:ramen:</code></td></tr><tr><td>🍲 <code>:stew:</code></td><td>🍢 <code>:oden:</code></td><td>🍡 <code>:dango:</code></td></tr><tr><td>🍳 <code>:egg:</code></td><td>🍞 <code>:bread:</code></td><td>🍩 <code>:doughnut:</code></td></tr><tr><td>🍮 <code>:custard:</code></td><td>🍦 <code>:icecream:</code></td><td>🍨 <code>:ice_cream:</code></td></tr><tr><td>🍧 <code>:shaved_ice:</code></td><td>🎂 <code>:birthday:</code></td><td>🍰 <code>:cake:</code></td></tr><tr><td>🍪 <code>:cookie:</code></td><td>🍫 <code>:chocolate_bar:</code></td><td>🍬 <code>:candy:</code></td></tr><tr><td>🍭 <code>:lollipop:</code></td><td>🍯 <code>:honey_pot:</code></td><td>🍎 <code>:apple:</code></td></tr><tr><td>🍏 <code>:green_apple:</code></td><td>🍊 <code>:tangerine:</code></td><td>🍋 <code>:lemon:</code></td></tr><tr><td>🍒 <code>:cherries:</code></td><td>🍇 <code>:grapes:</code></td><td>🍉 <code>:watermelon:</code></td></tr><tr><td>🍓 <code>:strawberry:</code></td><td>🍑 <code>:peach:</code></td><td>🍈 <code>:melon:</code></td></tr><tr><td>🍌 <code>:banana:</code></td><td>🍐 <code>:pear:</code></td><td>🍍 <code>:pineapple:</code></td></tr><tr><td>🍠 <code>:sweet_potato:</code></td><td>🍆 <code>:eggplant:</code></td><td>🍅 <code>:tomato:</code></td></tr><tr><td>🌽 <code>:corn:</code></td><td></td><td></td></tr></tbody></table><h2 id="地点">地点</h2><table><thead><tr><th>🏠 <code>:house:</code></th><th>🏡 <code>:house_with_garden:</code></th><th>🏫 <code>:school:</code></th></tr></thead><tbody><tr><td>🏢 <code>:office:</code></td><td>🏣 <code>:post_office:</code></td><td>🏥 <code>:hospital:</code></td></tr><tr><td>🏦 <code>:bank:</code></td><td>🏪 <code>:convenience_store:</code></td><td>🏩 <code>:love_hotel:</code></td></tr><tr><td>🏨 <code>:hotel:</code></td><td>💒 <code>:wedding:</code></td><td>⛪ <code>:church:</code></td></tr><tr><td>🏬 <code>:department_store:</code></td><td>🏤 <code>:european_post_office:</code></td><td>🌇 <code>:city_sunrise:</code></td></tr><tr><td>🌆 <code>:city_sunset:</code></td><td>🏯 <code>:japanese_castle:</code></td><td>🏰 <code>:european_castle:</code></td></tr><tr><td>⛺ <code>:tent:</code></td><td>🏭 <code>:factory:</code></td><td>🗼 <code>:tokyo_tower:</code></td></tr><tr><td>🗾 <code>:japan:</code></td><td>🗻 <code>:mount_fuji:</code></td><td>🌄 <code>:sunrise_over_mountains:</code></td></tr><tr><td>🌅 <code>:sunrise:</code></td><td>🌠 <code>:stars:</code></td><td>🗽 <code>:statue_of_liberty:</code></td></tr><tr><td>🌉 <code>:bridge_at_night:</code></td><td>🎠 <code>:carousel_horse:</code></td><td>🌈 <code>:rainbow:</code></td></tr><tr><td>🎡 <code>:ferris_wheel:</code></td><td>⛲ <code>:fountain:</code></td><td>🎢 <code>:roller_coaster:</code></td></tr><tr><td>🚢 <code>:ship:</code></td><td>🚤 <code>:speedboat:</code></td><td>⛵ <code>:boat:</code></td></tr><tr><td>⛵ <code>:sailboat:</code></td><td>🚣 <code>:rowboat:</code></td><td>⚓ <code>:anchor:</code></td></tr><tr><td>🚀 <code>:rocket:</code></td><td>✈️ <code>:airplane:</code></td><td>🚁 <code>:helicopter:</code></td></tr><tr><td>🚂 <code>:steam_locomotive:</code></td><td>🚊 <code>:tram:</code></td><td>🚞 <code>:mountain_railway:</code></td></tr><tr><td>🚲 <code>:bike:</code></td><td>🚡 <code>:aerial_tramway:</code></td><td>🚟 <code>:suspension_railway:</code></td></tr><tr><td>🚠 <code>:mountain_cableway:</code></td><td>🚜 <code>:tractor:</code></td><td>🚙 <code>:blue_car:</code></td></tr><tr><td>🚘 <code>:oncoming_automobile:</code></td><td>🚗 <code>:car:</code></td><td>🚗 <code>:red_car:</code></td></tr><tr><td>🚕 <code>:taxi:</code></td><td>🚖 <code>:oncoming_taxi:</code></td><td>🚛 <code>:articulated_lorry:</code></td></tr><tr><td>🚌 <code>:bus:</code></td><td>🚍 <code>:oncoming_bus:</code></td><td>🚨 <code>:rotating_light:</code></td></tr><tr><td>🚓 <code>:police_car:</code></td><td>🚔 <code>:oncoming_police_car:</code></td><td>🚒 <code>:fire_engine:</code></td></tr><tr><td>🚑 <code>:ambulance:</code></td><td>🚐 <code>:minibus:</code></td><td>🚚 <code>:truck:</code></td></tr><tr><td>🚋 <code>:train:</code></td><td>🚉 <code>:station:</code></td><td>🚆 <code>:train2:</code></td></tr><tr><td>🚅 <code>:bullettrain_front:</code></td><td>🚄 <code>:bullettrain_side:</code></td><td>🚈 <code>:light_rail:</code></td></tr><tr><td>🚝 <code>:monorail:</code></td><td>🚃 <code>:railway_car:</code></td><td>🚎 <code>:trolleybus:</code></td></tr><tr><td>🎫 <code>:ticket:</code></td><td>⛽ <code>:fuelpump:</code></td><td>🚦 <code>:vertical_traffic_light:</code></td></tr><tr><td>🚥 <code>:traffic_light:</code></td><td>⚠️ <code>:warning:</code></td><td>🚧 <code>:construction:</code></td></tr><tr><td>🔰 <code>:beginner:</code></td><td>🏧 <code>:atm:</code></td><td>🎰 <code>:slot_machine:</code></td></tr><tr><td>🚏 <code>:busstop:</code></td><td>💈 <code>:barber:</code></td><td>♨️ <code>:hotsprings:</code></td></tr><tr><td>🏁 <code>:checkered_flag:</code></td><td>🎌 <code>:crossed_flags:</code></td><td>🏮 <code>:izakaya_lantern:</code></td></tr><tr><td>🗿 <code>:moyai:</code></td><td>🎪 <code>:circus_tent:</code></td><td>🎭 <code>:performing_arts:</code></td></tr><tr><td>📍 <code>:round_pushpin:</code></td><td>🚩 <code>:triangular_flag_on_post:</code></td><td>🇯🇵 <code>:jp:</code></td></tr><tr><td>🇰🇷 <code>:kr:</code></td><td>🇨🇳 <code>:cn:</code></td><td>🇺🇸 <code>:us:</code></td></tr><tr><td>🇫🇷 <code>:fr:</code></td><td>🇪🇸 <code>:es:</code></td><td>🇮🇹 <code>:it:</code></td></tr><tr><td>🇷🇺 <code>:ru:</code></td><td>🇬🇧 <code>:gb:</code></td><td>🇬🇧 <code>:uk:</code></td></tr><tr><td>🇩🇪 <code>:de:</code></td><td></td><td></td></tr></tbody></table><h2 id="符号">符号</h2><table><thead><tr><th>1️⃣ <code>:one:</code></th><th>2️⃣ <code>:two:</code></th><th>3️⃣ <code>:three:</code></th></tr></thead><tbody><tr><td>4️⃣ <code>:four:</code></td><td>5️⃣ <code>:five:</code></td><td>6️⃣ <code>:six:</code></td></tr><tr><td>7️⃣ <code>:seven:</code></td><td>8️⃣ <code>:eight:</code></td><td>9️⃣ <code>:nine:</code></td></tr><tr><td>🔟 <code>:keycap_ten:</code></td><td>🔢 <code>:1234:</code></td><td>0️⃣ <code>:zero:</code></td></tr><tr><td>#️⃣ <code>:hash:</code></td><td>🔣 <code>:symbols:</code></td><td>◀️ <code>:arrow_backward:</code></td></tr><tr><td>⬇️ <code>:arrow_down:</code></td><td>▶️ <code>:arrow_forward:</code></td><td>⬅️ <code>:arrow_left:</code></td></tr><tr><td>🔠 <code>:capital_abcd:</code></td><td>🔡 <code>:abcd:</code></td><td>🔤 <code>:abc:</code></td></tr><tr><td>↙️ <code>:arrow_lower_left:</code></td><td>↘️ <code>:arrow_lower_right:</code></td><td>➡️ <code>:arrow_right:</code></td></tr><tr><td>⬆️ <code>:arrow_up:</code></td><td>↖️ <code>:arrow_upper_left:</code></td><td>↗️ <code>:arrow_upper_right:</code></td></tr><tr><td>⏬ <code>:arrow_double_down:</code></td><td>⏫ <code>:arrow_double_up:</code></td><td>🔽 <code>:arrow_down_small:</code></td></tr><tr><td>⤵️ <code>:arrow_heading_down:</code></td><td>⤴️ <code>:arrow_heading_up:</code></td><td>↩️ <code>:leftwards_arrow_with_hook:</code></td></tr><tr><td>↪️ <code>:arrow_right_hook:</code></td><td>↔️ <code>:left_right_arrow:</code></td><td>↕️ <code>:arrow_up_down:</code></td></tr><tr><td>🔼 <code>:arrow_up_small:</code></td><td>🔃 <code>:arrows_clockwise:</code></td><td>🔄 <code>:arrows_counterclockwise:</code></td></tr><tr><td>⏪ <code>:rewind:</code></td><td>⏩ <code>:fast_forward:</code></td><td>ℹ️ <code>:information_source:</code></td></tr><tr><td>🆗 <code>:ok:</code></td><td>🔀 <code>:twisted_rightwards_arrows:</code></td><td>🔁 <code>:repeat:</code></td></tr><tr><td>🔂 <code>:repeat_one:</code></td><td>🆕 <code>:new:</code></td><td>🔝 <code>:top:</code></td></tr><tr><td>🆙 <code>:up:</code></td><td>🆒 <code>:cool:</code></td><td>🆓 <code>:free:</code></td></tr><tr><td>🆖 <code>:ng:</code></td><td>🎦 <code>:cinema:</code></td><td>🈁 <code>:koko:</code></td></tr><tr><td>📶 <code>:signal_strength:</code></td><td>🈹 <code>:u5272:</code></td><td>🈴 <code>:u5408:</code></td></tr><tr><td>🈺 <code>:u55b6:</code></td><td>🈯 <code>:u6307:</code></td><td>🈷️ <code>:u6708:</code></td></tr><tr><td>🈶 <code>:u6709:</code></td><td>🈵 <code>:u6e80:</code></td><td>🈚 <code>:u7121:</code></td></tr><tr><td>🈸 <code>:u7533:</code></td><td>🈳 <code>:u7a7a:</code></td><td>🈲 <code>:u7981:</code></td></tr><tr><td>🈂️ <code>:sa:</code></td><td>🚻 <code>:restroom:</code></td><td>🚹 <code>:mens:</code></td></tr><tr><td>🚺 <code>:womens:</code></td><td>🚼 <code>:baby_symbol:</code></td><td>🚭 <code>:no_smoking:</code></td></tr><tr><td>🅿️ <code>:parking:</code></td><td>♿ <code>:wheelchair:</code></td><td>🚇 <code>:metro:</code></td></tr><tr><td>🛄 <code>:baggage_claim:</code></td><td>🉑 <code>:accept:</code></td><td>🚾 <code>:wc:</code></td></tr><tr><td>🚰 <code>:potable_water:</code></td><td>🚮 <code>:put_litter_in_its_place:</code></td><td>㊙️ <code>:secret:</code></td></tr><tr><td>㊗️ <code>:congratulations:</code></td><td>Ⓜ️ <code>:m:</code></td><td>🛂 <code>:passport_control:</code></td></tr><tr><td>🛅 <code>:left_luggage:</code></td><td>🛃 <code>:customs:</code></td><td>🉐 <code>:ideograph_advantage:</code></td></tr><tr><td>🆑 <code>:cl:</code></td><td>🆘 <code>:sos:</code></td><td>🆔 <code>:id:</code></td></tr><tr><td>🚫 <code>:no_entry_sign:</code></td><td>🔞 <code>:underage:</code></td><td>📵 <code>:no_mobile_phones:</code></td></tr><tr><td>🚯 <code>:do_not_litter:</code></td><td>🚱 <code>:non-potable_water:</code></td><td>🚳 <code>:no_bicycles:</code></td></tr><tr><td>🚷 <code>:no_pedestrians:</code></td><td>🚸 <code>:children_crossing:</code></td><td>⛔ <code>:no_entry:</code></td></tr><tr><td>✳️ <code>:eight_spoked_asterisk:</code></td><td>✴️ <code>:eight_pointed_black_star:</code></td><td>💟 <code>:heart_decoration:</code></td></tr><tr><td>🆚 <code>:vs:</code></td><td>📳 <code>:vibration_mode:</code></td><td>📴 <code>:mobile_phone_off:</code></td></tr><tr><td>💹 <code>:chart:</code></td><td>💱 <code>:currency_exchange:</code></td><td>♈ <code>:aries:</code></td></tr><tr><td>♉ <code>:taurus:</code></td><td>♊ <code>:gemini:</code></td><td>♋ <code>:cancer:</code></td></tr><tr><td>♌ <code>:leo:</code></td><td>♍ <code>:virgo:</code></td><td>♎ <code>:libra:</code></td></tr><tr><td>♏ <code>:scorpius:</code></td><td>♐ <code>:sagittarius:</code></td><td>♑ <code>:capricorn:</code></td></tr><tr><td>♒ <code>:aquarius:</code></td><td>♓ <code>:pisces:</code></td><td>⛎ <code>:ophiuchus:</code></td></tr><tr><td>🔯 <code>:six_pointed_star:</code></td><td>❎ <code>:negative_squared_cross_mark:</code></td><td>🅰️ <code>:a:</code></td></tr><tr><td>🅱️ <code>:b:</code></td><td>🆎 <code>:ab:</code></td><td>🅾️ <code>:o2:</code></td></tr><tr><td>💠 <code>:diamond_shape_with_a_dot_inside:</code></td><td>♻️ <code>:recycle:</code></td><td>🔚 <code>:end:</code></td></tr><tr><td>🔛 <code>:on:</code></td><td>🔜 <code>:soon:</code></td><td>🕐 <code>:clock1:</code></td></tr><tr><td>🕜 <code>:clock130:</code></td><td>🕙 <code>:clock10:</code></td><td>🕥 <code>:clock1030:</code></td></tr><tr><td>🕚 <code>:clock11:</code></td><td>🕦 <code>:clock1130:</code></td><td>🕛 <code>:clock12:</code></td></tr><tr><td>🕧 <code>:clock1230:</code></td><td>🕑 <code>:clock2:</code></td><td>🕝 <code>:clock230:</code></td></tr><tr><td>🕒 <code>:clock3:</code></td><td>🕞 <code>:clock330:</code></td><td>🕓 <code>:clock4:</code></td></tr><tr><td>🕟 <code>:clock430:</code></td><td>🕔 <code>:clock5:</code></td><td>🕠 <code>:clock530:</code></td></tr><tr><td>🕕 <code>:clock6:</code></td><td>🕡 <code>:clock630:</code></td><td>🕖 <code>:clock7:</code></td></tr><tr><td>🕢 <code>:clock730:</code></td><td>🕗 <code>:clock8:</code></td><td>🕣 <code>:clock830:</code></td></tr><tr><td>🕘 <code>:clock9:</code></td><td>🕤 <code>:clock930:</code></td><td>💲 <code>:heavy_dollar_sign:</code></td></tr><tr><td>©️ <code>:copyright:</code></td><td>®️ <code>:registered:</code></td><td>™️ <code>:tm:</code></td></tr><tr><td>❌ <code>:x:</code></td><td>❗ <code>:heavy_exclamation_mark:</code></td><td>‼️ <code>:bangbang:</code></td></tr><tr><td>⁉️ <code>:interrobang:</code></td><td>⭕ <code>:o:</code></td><td>✖️ <code>:heavy_multiplication_x:</code></td></tr><tr><td>➕ <code>:heavy_plus_sign:</code></td><td>➖ <code>:heavy_minus_sign:</code></td><td>➗ <code>:heavy_division_sign:</code></td></tr><tr><td>💮 <code>:white_flower:</code></td><td>💯 <code>:100:</code></td><td>✔️ <code>:heavy_check_mark:</code></td></tr><tr><td>☑️ <code>:ballot_box_with_check:</code></td><td>🔘 <code>:radio_button:</code></td><td>🔗 <code>:link:</code></td></tr><tr><td>➰ <code>:curly_loop:</code></td><td>〰️ <code>:wavy_dash:</code></td><td>〽️ <code>:part_alternation_mark:</code></td></tr><tr><td>🔱 <code>:trident:</code></td><td>:black_square: <code>:black_square:</code></td><td>:white_square: <code>:white_square:</code></td></tr><tr><td>✅ <code>:white_check_mark:</code></td><td>🔲 <code>:black_square_button:</code></td><td>🔳 <code>:white_square_button:</code></td></tr><tr><td>⚫ <code>:black_circle:</code></td><td>⚪ <code>:white_circle:</code></td><td>🔴 <code>:red_circle:</code></td></tr><tr><td>🔵 <code>:large_blue_circle:</code></td><td>🔷 <code>:large_blue_diamond:</code></td><td>🔶 <code>:large_orange_diamond:</code></td></tr><tr><td>🔹 <code>:small_blue_diamond:</code></td><td>🔸 <code>:small_orange_diamond:</code></td><td>🔺 <code>:small_red_triangle:</code></td></tr><tr><td>🔻 <code>:small_red_triangle_down:</code></td><td>:shipit: <code>:shipit:</code></td><td></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;😄  欢迎来到我的博客(小白)&lt;/p&gt;
&lt;p&gt;🔑  &lt;font style=&quot;font-style:italic&quot;&gt;Dream  💗   I am coming&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;👉 最新emoji大全（来自大佬）：&lt;a href=&quot;https://github.com/caiyongji/emoji-list&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;emoji列表&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="GitHub" scheme="http://yoursite.com/categories/GitHub/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript学习</title>
    <link href="http://yoursite.com/2019/06/24/js%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/06/24/js学习/</id>
    <published>2019-06-24T06:46:23.000Z</published>
    <updated>2019-06-25T07:35:46.401Z</updated>
    
    <content type="html"><![CDATA[<p><font style="color:blue">JavaScript学习</font></p><a id="more"></a><h3 id="基础知识点">基础知识点</h3><ul><li><h4 id="什么是javascript">什么是JavaScript</h4><ul><li>一种基于对象和事件驱动的、并具有安全性能的脚本语言----基本概念</li><li>特点<ul><li>向HTML页面添加交互行为</li><li>脚本语言，语法和Java类似</li><li>解释性语言，边执行边解释</li></ul></li><li>组成<ul><li>ECMAScript(标准  js遵循这个标准)</li><li>DOM（文档对象模型）</li><li>BOM（提供内容与浏览器窗口交互）</li></ul></li></ul></li><li><h4 id="引入javascript的方式">引入JavaScript的方式</h4><ul><li><h5 id="使用-span-script-span-标签">使用<span>&quot;<script>&quot;</span>标签</h5></li><li><h5 id="外部js文件">外部JS文件</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h5 id="直接在html标签中">直接在HTML标签中</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"btn"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"弹出消息框"</span> <span class="attr">onclick</span>=<span class="string">"javascript:alert('welcome');"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="javascript核心语法">JavaScript核心语法</h4><ul><li><h5 id="变量">变量</h5><ul><li><p>先声明变量再赋值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> width;<span class="keyword">var</span>-----用于声明变量的关键字</span><br><span class="line">width = <span class="number">5</span>;width---变量名</span><br></pre></td></tr></table></figure></li><li><p>判断变量类型</p><ul><li>typeof(“属性名”)</li></ul></li></ul></li><li><h5 id="string对象">String对象</h5><ul><li>charAt(index)</li><li>indexOf(str,index)</li><li>substring(index1,index2)</li><li>split(str)</li></ul></li><li><h5 id="数组">数组</h5><ul><li><p>创建数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="keyword">new</span> <span class="built_in">Array</span>(size);</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><pre><code>- 赋值  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> f = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">"a"</span>,<span class="string">"b"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> f = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">2</span>);</span><br><span class="line">f[<span class="number">0</span>] = <span class="string">"c"</span>;</span><br><span class="line">f[<span class="number">1</span>] = <span class="string">"b"</span>;</span><br></pre></td></tr></table></figure>- 方法  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">length    元素数目</span><br><span class="line">join放入一个字符串，通过一个分隔符分割</span><br></pre></td></tr></table></figure></code></pre><ul><li><h5 id="运算符">运算符</h5><ul><li>与Java相似</li></ul></li><li><h5 id="逻辑控制语句">逻辑控制语句</h5><ul><li>与Java相同</li></ul></li><li><h5 id="常用输入输出">常用输入输出</h5><ul><li>alert(“信息”)------弹出警告框</li><li>prompt(&quot;&quot;,&quot;&quot;)</li></ul></li><li><h4 id="bom模型-浏览器对象模型">BOM模型(浏览器对象模型)</h4><ul><li>提供了独立于内容的，可以与浏览器窗口进行互动的对象结构</li><li>history对象</li><li>location对象</li></ul></li><li><h4 id="dom-文档对象模型">DOM（文档对象模型）</h4><ul><li><p>类型</p><ul><li><p>DOM core</p><blockquote><p>针对任何结构性文档的操作方法</p></blockquote></li><li><p>HTML-DOM</p></li><li><p>CSS-DOM</p></li></ul></li><li><p>根据层次关系访问节点</p><ul><li>parentNode</li><li>childNodes</li><li>firstChild</li><li>lastChild</li><li>nextSibling           下一个节点</li><li>previousSibling   上一个节点</li></ul></li></ul><p>·</p></li></ul></script></span></h5></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;font style=&quot;color:blue&quot;&gt;JavaScript学习&lt;/font&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>前后台交互</title>
    <link href="http://yoursite.com/2019/06/23/%E5%89%8D%E5%90%8E%E5%8F%B0%E4%BA%A4%E4%BA%92/"/>
    <id>http://yoursite.com/2019/06/23/前后台交互/</id>
    <published>2019-06-23T11:20:31.000Z</published>
    <updated>2019-06-24T09:13:51.534Z</updated>
    
    <content type="html"><![CDATA[<p><strong>基于Ajax与JQuery的前后台交互</strong></p><a id="more"></a><h5 id="整合maven-ssm-idea">整合Maven+SSM+IDEA</h5><h6 id="1-先创建maven工程">1、先创建Maven工程</h6><h6 id="2-手动创建main-java-main-resource-以及存储配置文件的目录">2、手动创建main.java main.resource 以及存储配置文件的目录</h6><p><img src="/2019/06/23/前后台交互/1.png" alt></p><h6 id="3-引入pom-xml文件">3、引入pom.xml文件</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 数据库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.37<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--jdbc连接池--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- DAO: MyBatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Servlet web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring核⼼ --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring DAO层 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="4-配置spring-springmvc-mybatis相关文件">4、配置Spring，SpringMVC，Mybatis相关文件</h6><ol><li><p>Spring配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:db.properties"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数据库连接池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置连接池属性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--c3p0连接池私有属性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxPoolSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;maxPoolSize&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minPoolSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;minPoolSize&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"autoCommitOnClose"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"checkoutTimeout"</span> <span class="attr">value</span>=<span class="string">"$&#123;checkoutTimeout&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"acquireRetryAttempts"</span> <span class="attr">value</span>=<span class="string">"$&#123;acquireRetryAttempts&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Mybatis的工厂 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactoryBean"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 核心配置文件的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:sqlMapConfig.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Mapper动态代理开发   扫描 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 基本包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.cn.nuc.dao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 注解事务 进行事务判断--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开启注解 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>Spring-MVC配置文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置包扫描器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.cn"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置注解驱动 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/**"</span> <span class="attr">location</span>=<span class="string">"/res"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--前缀--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--后缀--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>Mybatis配置文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置别名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 2. 指定扫描包，会把包内所有的类都设置别名，别名的名称就是类名，大小写不敏感 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.cn.nuc.pojo"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>db.properties</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql://localhost:3306/shop?useUnicode=true&amp;characterEncoding=utf8</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=123456</span><br><span class="line">#最大连接数</span><br><span class="line">maxPoolSize=20</span><br><span class="line">#最小连接数</span><br><span class="line">minPoolSize=10</span><br><span class="line">#连接超时时间</span><br><span class="line">checkoutTimeout=60000</span><br><span class="line">#失败重连次数</span><br><span class="line">acquireRetryAttempts=3</span><br></pre></td></tr></table></figure></li></ol><h6 id="5-实现前后台交互">5、实现前后台交互</h6><ol><li><p>配置Spring-MVC.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">添加</span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/**"</span> <span class="attr">location</span>=<span class="string">"/res"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">mapping固定写法  location写你的js文件以及img文件或者其他统一在哪个文件夹下</span><br></pre></td></tr></table></figure><ol start="2"><li>前台写法，博主在这写了两种写法，其中一种注释了</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Dell</span><br><span class="line">  Date: <span class="number">2019</span>/<span class="number">6</span>/<span class="number">23</span></span><br><span class="line">  Time: <span class="number">18</span>:<span class="number">43</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span>%&gt;</span><br><span class="line">&lt;%--&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;--%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Ajax&lt;/title&gt;</span><br><span class="line">&lt;%--    &lt;script type="text/javascript" src="&lt;c:url value="/res/js/jquery-3.2.1.js"/&gt;"&gt;&lt;/script&gt;--%&gt;</span><br><span class="line">    &lt;script type="text/javascript" src="/res/js/jquery-3.2.1.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    $(function()&#123;</span><br><span class="line">        $.post(<span class="string">"hello.do"</span>,&#123;&#125;,function (data)&#123;</span><br><span class="line">            console.log(<span class="string">"hello World"</span>)</span><br><span class="line">        &#125;,<span class="string">"json"</span>)</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;基于Ajax与JQuery的前后台交互&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java知识点" scheme="http://yoursite.com/categories/Java%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode(一)</title>
    <link href="http://yoursite.com/2019/06/21/LeetCode-%E4%B8%80/"/>
    <id>http://yoursite.com/2019/06/21/LeetCode-一/</id>
    <published>2019-06-21T07:25:58.000Z</published>
    <updated>2019-06-24T08:36:09.022Z</updated>
    
    <content type="html"><![CDATA[<p><font style="color:blue; font-size:24px;">算法面试</font></p><a id="more"></a><h5 id="1-只出现一次的数字">1、只出现一次的数字</h5><h5 id="2-求众数">2、求众数</h5><p>给定一个大小为 <em>n</em> 的数组，找到其中的众数。众数是指在数组中出现次数<strong>大于</strong> <code>⌊ n/2 ⌋</code> 的元素。</p><p>你可以假设数组是非空的，并且给定的数组总是存在众数。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [3,2,3]</span><br><span class="line">输出: 3</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [2,2,1,1,1,2,2]</span><br><span class="line">输出: 2</span><br></pre></td></tr></table></figure><h6 id="第一种解法">第一种解法</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">普通的遍历存Map查找</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;Integer,Integer&gt; map = <span class="keyword">new</span> HashMap&lt;Integer,Integer&gt;();</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!map.containsKey(nums[i]))&#123;</span><br><span class="line">                map.put(nums[i],<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                num = map.get(nums[i]);</span><br><span class="line">                num++;</span><br><span class="line">                map.put(nums[i],num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">         Iterator iterator = map.entrySet().iterator();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line"></span><br><span class="line">            Map.Entry entry = (Map.Entry) iterator.next();</span><br><span class="line">            <span class="keyword">if</span> ((<span class="keyword">int</span>) entry.getValue() &gt; nums.length / <span class="number">2</span>) &#123;</span><br><span class="line">                num = (<span class="keyword">int</span>) entry.getKey();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="第二种解法">第二种解法</h6><blockquote><p>摩尔投票法 Moore Voting，需要 O(n) 的时间和 O(1) 的空间</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res = nums[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (nums[i] == res) &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                count--;</span><br><span class="line">                <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">                    res = nums[i];</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-搜索二维矩阵">3、搜索二维矩阵</h5><p>编写一个高效的算法来搜索 <em>m</em> x <em>n</em> 矩阵 matrix 中的一个目标值 target。该矩阵具有以下特性：</p><ul><li>每行的元素从左到右升序排列。</li><li>每列的元素从上到下升序排列。</li></ul><p><strong>示例:</strong></p><p>现有矩阵 matrix 如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  [1,   4,  7, 11, 15],</span><br><span class="line">  [2,   5,  8, 12, 19],</span><br><span class="line">  [3,   6,  9, 16, 22],</span><br><span class="line">  [10, 13, 14, 17, 24],</span><br><span class="line">  [18, 21, 23, 26, 30]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>给定 target = <code>5</code>，返回 <code>true</code>。</p><p>给定 target = <code>20</code>，返回 <code>false</code>。</p><h6 id="实现代码">实现代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">searchMatrix</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = matrix.length;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span> == m) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> n = matrix[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span> == n) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(matrix[i][<span class="number">0</span>] &lt;= target &amp;&amp; matrix[i][n-<span class="number">1</span>] &gt;= target)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(matrix[i][j] == target) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好像可以先对角线找到第一个比给的值大的，然后对左下角和右上角进行二分查找也可以</p><blockquote><p>​附上别人代码，可以体会一下</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">bool <span class="title">searchMatrix</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> m = matrix.size();</span><br><span class="line">        <span class="keyword">if</span> (m == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> n = matrix[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (m == <span class="number">1</span>) <span class="keyword">return</span> binary_row_search(matrix, <span class="number">0</span>, n-<span class="number">1</span>, target);</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> binary_col_search(matrix, <span class="number">0</span>, m-<span class="number">1</span>, target);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> square = m &lt;= n ? m : n;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; square - <span class="number">1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (target == matrix[i][i] || target == matrix[i+<span class="number">1</span>][i+<span class="number">1</span>]) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (target &gt; matrix[i][i] &amp;&amp; target &lt; matrix[i+<span class="number">1</span>][i+<span class="number">1</span>]) <span class="keyword">break</span>;     </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> row = i+<span class="number">1</span>; row &lt; m; row++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (binary_row_search(matrix, row, i, target)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> col = i+<span class="number">1</span>; col &lt; n; col++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (binary_col_search(matrix, col, i, target)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 行搜索</span></span><br><span class="line">    <span class="function">bool <span class="title">binary_row_search</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> row, <span class="keyword">int</span> end, <span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (start &lt;= end)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = start + ((end - start) &gt;&gt; <span class="number">2</span>); <span class="comment">// 右移运算优先级小于加法，切记加括号！！！</span></span><br><span class="line">            <span class="keyword">if</span> (matrix[row][mid] == target) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (matrix[row][mid] &lt; target) start = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> end = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 列搜索</span></span><br><span class="line">    <span class="function">bool <span class="title">binary_col_search</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> col, <span class="keyword">int</span> end, <span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (start &lt;= end)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = start + ((end - start) &gt;&gt; <span class="number">2</span>); </span><br><span class="line">            <span class="keyword">if</span> (matrix[mid][col] == target) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (matrix[mid][col] &lt; target) start = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> end = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;font style=&quot;color:blue; font-size:24px;&quot;&gt;算法面试&lt;/font&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>关于本站</title>
    <link href="http://yoursite.com/2019/06/21/top/"/>
    <id>http://yoursite.com/2019/06/21/top/</id>
    <published>2019-06-21T01:40:33.000Z</published>
    <updated>2019-06-24T09:04:14.958Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>​博主之前是在CSDN与博客园上写博客的。但是慢慢地CSDN上广告突出…博客园也很少用，就自己上网学习，搭hexo博客。</p></blockquote><p><a href="https://blog.csdn.net/qq_40984919" target="_blank" rel="noopener">CSDN</a></p><p><a href="https://www.cnblogs.com/Yinchen-One/" target="_blank" rel="noopener">博客园</a></p><p><img src="/2019/06/21/top/bg.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;​	博主之前是在CSDN与博客园上写博客的。但是慢慢地CSDN上广告突出…博客园也很少用，就自己上网学习，搭hexo博客。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_4098491
      
    
    </summary>
    
    
      <category term="Info" scheme="http://yoursite.com/tags/Info/"/>
    
  </entry>
  
  <entry>
    <title>css3</title>
    <link href="http://yoursite.com/2019/06/20/css3/"/>
    <id>http://yoursite.com/2019/06/20/css3/</id>
    <published>2019-06-20T06:38:04.000Z</published>
    <updated>2019-06-24T08:35:54.021Z</updated>
    
    <content type="html"><![CDATA[<h1>CSS</h1><a id="more"></a><h5 id="二-选择器">二、选择器</h5><p><a href="http://tool.mkblog.cn/codeonline/" target="_blank" rel="noopener">孟坤工具箱</a></p><h6 id="层次选择器">层次选择器</h6><ul><li><p>后代选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>子选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&gt;<span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>相邻选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.active</span>+<span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">backgroung</span>:green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>通用兄弟选择器(同一层)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.active</span>~<span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h6 id="结构伪类选择器">结构伪类选择器</h6><ul><li><p>选择第一个子元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>选择最后一个子元素</p></li></ul>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>选择第n个子元素(父元素)</li></ul>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>选择第n个元素(同级)</li></ul>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:nth-of-type(2)</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="属性选择器">属性选择器</h6><ul><li><p>E[attr]：选择匹配具有属性attr的E元素</p></li><li><p>a[id=first]：具有id属性且匹配first</p></li><li><p>a[class=“links”]：class=links的会改变</p></li><li><p>a[class*=“links”]：class中包含links的会改变</p></li><li><p>a[href^=http]：以http开头元素</p></li><li><p>a[href$=png]：以png结尾的元素</p></li></ul><hr><h5 id="三-css美化页面">三、CSS美化页面</h5><ul><li><p>font属性</p><ul><li>字体属性的顺序：字体风格→字体粗细→字体大小→字体类型</li></ul></li><li><p>垂直居中</p></li><li><p>vertical-align：middle、top、bottom</p></li><li><p>文本阴影</p></li><li><p>text-shadow : color  x-offset  y-offset  blur-radius;</p></li><li><p>背景图片大小 background-size</p></li></ul><ul><li><table><thead><tr><th><strong>属性值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>auto</td><td>默认值，使用背景图片保持原样</td></tr><tr><td>percentage</td><td>当使用百分值时，不是相对于背景的尺寸大小来计算的，而是相对于元素宽度来计算的</td></tr><tr><td>cover</td><td>整个背景图片放大填充了整个元素</td></tr><tr><td>contain</td><td>让背景图片保持本身的宽高比例，将背景图片缩放到宽度或者高度正好适应所定义背景的区域</td></tr></tbody></table></li><li><p>背景线性渐变</p></li><li><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">red</span>,<span class="selector-tag">yellow</span>,<span class="selector-tag">blue</span>); <span class="comment">/* Safari 5.1-6.0 */</span></span><br><span class="line"> <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">red</span>,<span class="selector-tag">yellow</span>,<span class="selector-tag">blue</span>); <span class="comment">/* Opera 11.1-12.0 */</span> </span><br><span class="line"> <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">red</span>,<span class="selector-tag">yellow</span>,<span class="selector-tag">blue</span>); <span class="comment">/* Firefox 3.6-15 */</span></span><br><span class="line"> <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">red</span>,<span class="selector-tag">yellow</span>,<span class="selector-tag">blue</span>); <span class="comment">/* 标准语法 */</span></span><br></pre></td></tr></table></figure></li><li><p>盒子模型</p></li><li><p>要把容器想象成为一个盒子</p></li><li><p>理解外边距，内边距，边框的含义。</p></li><li><p><img src="/2019/06/20/css3/box.jpg" alt></p></li><li><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">box-sizing：content-box  |  border-box  |  inherit;</span><br><span class="line"></span><br><span class="line">1.默认值，盒子的总尺度</span><br><span class="line">2.盒子的宽度或高度等于元素内容的宽度或高度</span><br><span class="line">3.元素继承父元素的盒子模型模式</span><br></pre></td></tr></table></figure></li><li><p>盒子阴影</p><ul><li><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-shadow</span><span class="selector-pseudo">:inset</span>  <span class="selector-tag">x-offset</span>  <span class="selector-tag">y-offset</span>  <span class="selector-tag">blur-radius</span>  <span class="selector-tag">color</span>;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>浮动</p></li><li><p>overflow（父类使用）</p></li></ul><table><thead><tr><th><strong>属性值</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><strong>visible</strong></td><td><strong>默认值。内容不会被修剪，会呈现在盒子之外</strong></td></tr><tr><td><strong>hidden</strong></td><td><strong>内容会被修剪，并且其余内容是不可见的</strong></td></tr><tr><td><strong>scroll</strong></td><td><strong>内容会被修剪，但是浏览器会显示滚动条以便查看其余内容</strong></td></tr><tr><td><strong>auto</strong></td><td><strong>如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容</strong></td></tr></tbody></table><ul><li><p>父级添加伪类after</p><ul><li><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clear</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;          <span class="comment">/*在clear类后面添加内容为空*/</span></span><br><span class="line">    <span class="attribute">display</span>: block;      <span class="comment">/*把添加的内容转化为块元素*/</span></span><br><span class="line">    <span class="attribute">clear</span>: both;         <span class="comment">/*清除这个元素两边的浮动*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>定位网页元素</p></li><li><p>static—没有定位，以标准流方式显示</p></li><li><p>relativ—相对自身原来位置进行偏移</p><ul><li>偏移设置：top、left、right、bottom</li></ul></li><li><p>absolute—相对于父类</p><ul><li>偏移设置： left、right、top、bottom</li></ul></li><li><p>fixed—固定位置</p></li><li><p>CSS变形</p></li><li><p>transform:[transform-function] *;</p><ul><li>translate()：平移函数，基于X、Y坐标重新定位元素的位置</li><li>scale()：缩放函数，可以使任意元素对象尺寸发生变化</li><li>rotate()：旋转函数，取值是一个度数值</li><li>skew()：倾斜函数，取值是一个度数值</li></ul></li><li><p>过渡</p><ul><li><p>transition:[transition-property  transition-duration  transition-timing-function   transition-delay ]</p></li><li><p>过渡动画函数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ease：速度由快到慢（默认值）</span><br><span class="line">linear：速度恒速（匀速运动）</span><br><span class="line">ease-in：速度越来越快（渐显效果）</span><br><span class="line">ease-out：速度越来越慢（渐隐效果）</span><br><span class="line">ease-in-out：速度先加速再减速（渐显渐隐效果）</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>动画</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@keyframes spread &#123;</span><br><span class="line">   0% &#123;width:0;&#125;</span><br><span class="line">   33% &#123;width:23px;&#125;</span><br><span class="line">   66% &#123;width:46px;&#125;</span><br><span class="line">   100% &#123;width:69px;&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> ## 使用</span><br><span class="line"> animation:animation-name  animation–duration  animation-timing-function</span><br><span class="line">   animation-delay  animation-iteration-count  animation-direction  </span><br><span class="line">animation-play-state  animation-fill-mode;</span><br><span class="line"></span><br><span class="line">动画的播放次数（animation-iteration-count）</span><br><span class="line">    值通常为整数，默认值为1</span><br><span class="line">    特殊值infinite，表示动画无限次播放</span><br><span class="line">动画的播放方向（animation-direction）</span><br><span class="line">    normal，动画每次都是循环向前播放</span><br><span class="line">    alternate，动画播放为偶数次则向前播放</span><br><span class="line">动画的播放状态（animation-play-state）</span><br><span class="line">    running将暂停的动画重新播放</span><br><span class="line">    paused将正在播放的元素动画停下来</span><br><span class="line">动画发生的操作（animation-fill-mode）</span><br><span class="line">    forwards表示动画在结束后继续应用最后关键帧的位置</span><br><span class="line">    backwards表示会在向元素应用动画样式时迅速应用动画的初始帧</span><br><span class="line">    both表示元素动画同时具有forwards和backwards的效果</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;CSS&lt;/h1&gt;
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>深入浅出-MySQL</title>
    <link href="http://yoursite.com/2019/06/20/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA-MySQL/"/>
    <id>http://yoursite.com/2019/06/20/深入浅出-MySQL/</id>
    <published>2019-06-20T00:09:18.000Z</published>
    <updated>2019-06-24T08:36:22.919Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/06/20/深入浅出-MySQL/mysql.jpg" alt></p><a id="more"></a><h2 id="一-sql基础">一、SQL基础</h2><h4 id="1-sql分类">1、SQL分类</h4><ol><li><p>DDL：数据定义语句</p><ul><li><p>创建数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> test1</span><br><span class="line"><span class="comment">## 数据库中已有的</span></span><br><span class="line"><span class="number">1.</span>information_schema:存储系统中的一些数据库对象信息</span><br><span class="line"><span class="number">2.</span>cluster:存储了系统的集群信息</span><br><span class="line"><span class="number">3.</span>mysql:存储了系统的用户权限信息。</span><br><span class="line"><span class="number">4.</span><span class="keyword">test</span>:系统自动创建的测试数据库。</span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> test1</span><br></pre></td></tr></table></figure></li><li><p>创建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> **();</span><br><span class="line"></span><br><span class="line">查看表的定义</span><br><span class="line">DESC **</span><br><span class="line"></span><br><span class="line">查看创建表的SQL语句</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> ** \G;</span><br><span class="line">在这里我们可以看到ENGINE（存储引擎）和CHARSET（字符集信息）</span><br></pre></td></tr></table></figure></li><li><p>删除表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> emp</span><br></pre></td></tr></table></figure></li><li><p>修改表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改表类型</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">modify</span> ename <span class="built_in">varchar</span>(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 增加表字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">column</span> age <span class="built_in">int</span>(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除表字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> <span class="keyword">column</span> age;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 字段改名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">change</span> age age1 <span class="built_in">int</span>(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">## 修改字段排列顺序(可选项 first|after)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> birth <span class="keyword">data</span> <span class="keyword">after</span> ename;</span><br><span class="line">&gt; 修改字段age，将它放在最前边</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">modify</span> age <span class="built_in">int</span>(<span class="number">3</span>) <span class="keyword">first</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 更改表名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">rename</span> emp1;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>DML：数据操作语句</p><blockquote><p>​是对数据库中表记录的操作，主要包括表记录的插入、更新、删除和查询。</p></blockquote><ul><li><p>插入记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 插入语句</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp(<span class="number">1</span>,<span class="number">2</span>) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 一次性插入多条语句</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp(<span class="number">1</span>,<span class="number">2</span>) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>),(<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure></li><li><p>更新记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 更新</span></span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> <span class="number">1</span>=<span class="number">1</span> wherh ename=<span class="string">'lisi'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 同时更新两个表与这个情况类似</span></span><br></pre></td></tr></table></figure></li><li><p>删除记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 删除</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename=<span class="string">'dony'</span></span><br></pre></td></tr></table></figure></li><li><p>查询记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查询</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查询不重复的记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> deptno <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 条件查询(=、&gt;、&lt;、&gt;=、&lt;=、!=)</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="number">2</span>=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 排序和限制</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal;</span><br><span class="line">desc<span class="comment">----&gt;降序   </span></span><br><span class="line">asc<span class="comment">------&gt;升序</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 分页查询</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">3</span>  <span class="comment">-----&gt;第一个参数为起始偏移量，第二个为行数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 聚合</span></span><br><span class="line"><span class="keyword">select</span> [f1,f2,f3...]fun_name<span class="comment">------&gt;聚合函数  sun，count，max，min</span></span><br><span class="line"><span class="keyword">from</span> tablename</span><br><span class="line">[<span class="keyword">WHERE</span> where_contition] <span class="comment">-----&gt;条年间查询</span></span><br><span class="line">[<span class="keyword">GROUP</span> <span class="keyword">BY</span> field1,field2<span class="comment">-----&gt;分类聚合字段</span></span><br><span class="line">[<span class="keyword">WITH</span> <span class="keyword">ROLLUP</span>]]<span class="comment">-----&gt;表名是否对分类聚合进行汇总</span></span><br><span class="line">[<span class="keyword">HAVING</span> where_contition]<span class="comment">-----&gt;对分类后的结果再进行条件的过滤</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 连接</span></span><br><span class="line"><span class="number">1</span>、内连接</span><br><span class="line">仅选出两张表中互相匹配的记录</span><br><span class="line">fx：查询所有雇员的名字和所在的部门名称</span><br><span class="line"><span class="keyword">select</span> ename,deptname <span class="keyword">from</span> emp,dept <span class="keyword">where</span> emp.deptno=dept.deptno;</span><br><span class="line">2、外连接</span><br><span class="line">左连接：包含所有左边表中的记录甚至是右边表中没有和它匹配的记录。</span><br><span class="line">右连接：包含所有右边表中的记录甚至是左边表中没有和它匹配的记录。</span><br><span class="line">3、子查询（条件是另一<span class="keyword">select</span>语句的结果）</span><br><span class="line"><span class="keyword">select</span> * fomr emp <span class="keyword">where</span> <span class="number">1</span> <span class="keyword">in</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> dept);</span><br><span class="line">如果查询条件唯一，可以使用=代替in</span><br><span class="line">4、记录联合</span><br><span class="line">UNION:将UNION ALL后的结果进行一次DISTINCT</span><br><span class="line">UNION ALL把结果集直接合并在一起</span><br></pre></td></tr></table></figure></li></ul></li></ol><ol start="3"><li>DCL：数据控制语句-----管理系统中的对象权限时使用</li></ol><h4 id="2-mysql数据类型">2、MySQL数据类型</h4><table><thead><tr><th>整数类型</th><th>字节</th><th>最小值</th><th>最大值</th></tr></thead><tbody><tr><td>TINYINT</td><td>1</td><td>有符号-128<br>无符号 0</td><td>有符号 127<br>无符号 255</td></tr><tr><td>SMALLINT</td><td>2</td><td>有符号-32768<br>无符号 0</td><td>有符号32767<br>无符号 65535</td></tr><tr><td>MEDIUMINT</td><td>3</td><td>有符号-8388608<br>无符号 0</td><td>有符号8388607<br>无符号 1677215</td></tr><tr><td>INT,INTEGER</td><td>4</td><td>有符号-2147483648<br>无符号 0</td><td>有符号2147483647<br>无符号 4294967295</td></tr><tr><td>BIGINT</td><td>8</td><td>有符号-9223372036854775808<br>无符号 0</td><td>有符号9223372036854775807<br>无符号 18446744073709551615</td></tr></tbody></table><table><thead><tr><th>浮点数类型</th><th>字节</th><th>最小值</th><th>最大值</th></tr></thead><tbody><tr><td>FLOAT</td><td>4</td><td>±1.175494351E-38</td><td>±3.402823466E+38</td></tr><tr><td>DOUBLE</td><td>8</td><td>±2.2250738585072014E-308</td><td>±1.7976931348623157E+308</td></tr></tbody></table><table><thead><tr><th>位类型</th><th>字节</th><th>最小值</th><th>最大值</th></tr></thead><tbody><tr><td>BIT</td><td>1~8</td><td>BIT(1)</td><td>BIT(64)</td></tr></tbody></table><hr><h2 id="二-mysql开发篇">二、MySQL开发篇</h2><h4 id="1-表类型的选择">1、表类型的选择</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2019/06/20/深入浅出-MySQL/mysql.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL学习" scheme="http://yoursite.com/categories/MySQL%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Spring注解</title>
    <link href="http://yoursite.com/2019/06/19/Spring%E6%B3%A8%E8%A7%A3/"/>
    <id>http://yoursite.com/2019/06/19/Spring注解/</id>
    <published>2019-06-19T07:40:17.000Z</published>
    <updated>2019-06-25T00:52:09.448Z</updated>
    
    <content type="html"><![CDATA[<h1>核心容器</h1><a id="more"></a><h2 id="spring的核心jar包">Spring的核心jar包</h2><p>​一、spring-context-----maven注入</p><h3 id="没有注解之前-使用配置方式">没有注解之前，使用配置方式</h3><p>​<img src="/2019/06/19/Spring注解/Spring1.png" alt="Spring1"></p><h3 id="使用注解">使用注解</h3><ul><li><h4 id="configuration-配置类">@Configuration  配置类</h4><ul><li><p>@Bean给容器一注册一个Bean；类型为方绘制的类型，id默认为id</p><ul><li>可以给Bean添加value值</li></ul></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContextnew a = AnnotationConfigApplicationContext(配置类.class);</span><br><span class="line">Person p = a.getBean(Person.class);</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="包扫描-context-componet-scan-class-context-componet-scan">包扫描&lt;context:componet-scan class=&quot;&quot;&gt;&lt;/context:componet-scan&gt;</h4><ul><li><h5 id="只要标注了-controller-service-repository-component-自动扫描">只要标注了@Controller @Service @Repository @Component  自动扫描</h5><ul><li>包扫描过滤 在其下边继续写&lt;context:include合作者exclude</li></ul></li><li><h5 id="另一种方法可以在配置类上边加注解-componentscan-value-和上边包扫描效果一样会自动扫描">另一种方法可以在配置类上边加注解 @ComponentScan(value=&quot;&quot;)----和上边包扫描效果一样会自动扫描</h5><ul><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">指定要扫描的包</span><br><span class="line"><span class="meta">@ComponentScan</span>(value=<span class="string">""</span>,excludeFilters = &#123;</span><br><span class="line"><span class="meta">@Filter</span>(type=FilterType.ANNOTATION,classes=  &#123;Controller.class,Service,<span class="class"><span class="keyword">class</span>&#125;)</span></span><br><span class="line"><span class="class">&#125;)</span></span><br><span class="line"><span class="class">如果要使用只扫描--我们需要把<span class="title">useDefaultFilters</span> </span>= <span class="keyword">false</span>  默认扫描关闭</span><br></pre></td></tr></table></figure></li><li><p>在其中我们还可以使用ComponentScans来扫描多个  value是数组</p></li><li><p><img src="/2019/06/19/Spring注解/Spring2.png" alt></p></li><li><p>常用规则（扫描方式）</p><ul><li><blockquote><p>FilterType.*</p><p>1、<strong>ANNOTATION</strong>  按照注解</p><p>2、<strong>ASSIGNABLE_TYPE</strong> 按照给定的类型</p><p>3、ASPECTJ ASPECTJ表达式</p><p>4、REGEX正则表达式</p><p>5、CUSTOM自定义规则</p><ul><li>需要实现TypeFilter接口</li></ul></blockquote></li><li><p>修改Scope（调整组件作用域）</p><ul><li>prototype多实例的</li><li>singletion     单实例的</li></ul></li><li><p>懒加载@Lazy</p><ul><li>单实例Bean：默认在启动的时候创建对象</li><li>第一次使用Bean的时候再创建对象-----懒加载</li></ul></li><li><p>按照条件注册bean</p><ul><li>@Conditional:按照一定的条件进行判断，满足条件给容器中注册bean</li><li>@Conditional(Condition数组—》类.class)</li><li>实现的类需要实现Conditional接口，来为后续的判断提供条件</li></ul></li><li><p>import[快速给容器导入组件]</p><ul><li>@Import(要导入到容器中的组件)；容器就会自动注册这个组件</li><li>@ImportSelector：返回需要导入的组件的全类名的注解<ul><li>实现的接口 里边写返回的类函数</li></ul></li><li>@ImportBeanDefinitionRegistrar  手动注册bean到容器中</li><li>使用Spring的FactoryBean方法（工厂Bean）<ul><li>获得工厂bean的方法  在前边加引用</li></ul></li></ul></li></ul></li></ul></li></ul></li><li><h4 id="bean的生命周期">Bean的生命周期</h4><ul><li><h5 id="自定义初始化和销毁方法">自定义初始化和销毁方法</h5><ul><li><h6 id="指定初始化和销毁方法">指定初始化和销毁方法</h6><ul><li>指定<code>init-method</code>  和 <code>destory-method</code>方法（配置文件时候使用的方法）</li><li>@Bean(initMethod=&quot;&quot;,destoryMethod=&quot;&quot;) ------  注解的情况<ul><li>初始化：对象创建完成，并赋值好，调用初始化方法</li><li>销毁：容器关闭之后调用  多实例不进行销毁</li></ul></li></ul></li><li><h6 id="通过实现initializingbean接口-初始化-disposablebean接口-销毁">通过实现InitializingBean接口(初始化)，DisposableBean接口(销毁)</h6><ul><li>在实现一个类之后，可以把它定义为组件@Compotent  这样是可以被配置文件进行扫描的</li></ul></li><li><h6 id="可以使用jsr250">可以使用JSR250</h6><ul><li>@PostConstruct:在Bean 创建完成，并且属性赋值完成，执行初始化</li><li>@PreDestory:     在容器销毁Bean之前通知我们进行清理工作</li></ul></li><li><h6 id="beanpostprocessor-bean的后置处理器-在spring后端也大量使用">BeanPostProcessor:bean的后置处理器（在Spring后端也大量使用）</h6><ul><li>在bean初始化前后进行工作</li><li>postProcessBeforeInitialization：初始化之前</li><li>postProcessAfterInitialization：在初始化之后</li></ul></li><li><h6 id="spring底层对beanpostprocessor的使用">Spring底层对BeanPostProcessor的使用</h6><ul><li>bean赋值，注入其他主键，@Autowired，生命周期注解功能</li></ul></li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;核心容器&lt;/h1&gt;
    
    </summary>
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>JavaSE基础</title>
    <link href="http://yoursite.com/2019/06/18/JavaSE%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2019/06/18/JavaSE基础/</id>
    <published>2019-06-18T08:40:40.000Z</published>
    <updated>2019-06-24T08:34:30.382Z</updated>
    
    <content type="html"><![CDATA[<p><strong>JavaSE面试要点以及知识概要</strong></p><a id="more"></a><h5 id="1-面向对象的特征有哪些方面">1、面向对象的特征有哪些方面</h5><ol><li>抽象：抽象就是忽略一个主题中与当前目标无关的那些方面，以便更充分地注意与当前目标有关的方面。抽象并不打算了解全部问题，而只是选择其中的一部分，暂时不用部分细节。抽象包括两个方面，一是过程抽象，二是数据抽象。</li><li>继承：继承是一种联结类的层次模型，并且允许和鼓励类的重用，它提供了一种明确表述共性的方法。对象的一个新类可以从现有的类中派生，这个过程称为类继承。新类继承了原始类的特性，新类称为原始类的派生类（子类），而原始类称为新类的基类（父类）。派生类可以从它的基类那里继承方法和实例变量，并且类可以修改或增加新的方法使之更适合特殊的需要。</li><li>封装：封装是把过程和数据包围起来，对数据的访问只能通过已定义的界面。面向对象计算始于这个基本概念，即现实世界可以被描绘成一系列完全自治、封装的对象，这些对象通过一个受保护的接口访问其他对象。</li><li>多态性：多态性是指允许不同类的对象对同一消息作出响应。多态性包括参数化多态性和包含多态性。多态性语言具有灵活、抽象、行为共享、代码共享的优势，很好的解决了应用程序函数同名问题。</li></ol><h5 id="2-基本数据类型">2、基本数据类型</h5><p>​基本数据类型包括</p><pre><code>byte、int、char、long、float、double、boolean、short</code></pre><p>​<strong>java.lang.String类是final类型的，因此不可以继承这个类、不能修改这个类。为了提高效率节省空间，我们应该用StringBuffer类</strong></p><h5 id="3-super和this的区别">3、super和this的区别</h5><p>​super代表父类对象，this代表当前类对象</p><h5 id="4-和equals的区别">4、==和equals的区别</h5><p><strong>==</strong></p><ul><li><p>基本类型：比较值是否相同</p></li><li><p>引用类型：比较引用是否相同</p><p>代码示例</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String x = <span class="string">"string"</span>;</span><br><span class="line">String y = <span class="string">"string"</span>;</span><br><span class="line">String z = <span class="keyword">new</span> String(<span class="string">"string"</span>);</span><br><span class="line">system.out.println(x==y);<span class="comment">//true比较引用</span></span><br><span class="line">system.out.println(x==z);<span class="comment">//false比较引用</span></span><br><span class="line">system.out.println(x.equals(y));<span class="comment">//true比较值</span></span><br><span class="line">system.out.println(x.equals(z));<span class="comment">//true比较值</span></span><br></pre></td></tr></table></figure><p><strong>equals</strong></p><p>​equals本质上是==，不过String和Integer等重写了equals方法，变为了值比较</p><h5 id="5-两个对象的hashcode相同-equals相同么">5、两个对象的hashcode相同，equals相同么</h5><p>​hashcode得到的是哈希值相同，然而哈希值相同，并不能得到键值对相同。</p><h5 id="6-final在java中的作用">6、final在Java中的作用</h5><ul><li>final修饰的类交最终类，改类不能被继承</li><li>final修饰的方法不能被重写</li><li>final修饰的变量交常量，常量必须初始化，初始化之后值不能被修改</li></ul><h5 id="7-操作字符串的类">7、操作字符串的类</h5><p>String声明的是不可变的对象，每次操作都会生成新的String对象。</p><p>StringBuffer、StringBuilder可以在原有对象的基础上进行操作</p><p>String和StringBuilder的区别</p><p><font style="color:red">1. StringBuffer是线程安全的   StringBuilder是非线程安全的</font></p><p><font style="color:red">2.StringBuilder性能比StringBuffer高</font></p><p><font style="color:red">3.单线程可以使用StringBulider  多项成使用StringBuffer</font></p><h5 id="8-string-s-i-与-string-s1-new-string-asd-的区别">8、String s=“i” 与 String s1=new String(“asd”)的区别</h5><p>​第一种是分配到常量池中，第二种是分配到堆内存中。</p><h5 id="9-抽象类必须要有抽象方法么？">9、抽象类必须要有抽象方法么？</h5><p>​不需要，抽象类不一定非要有抽象方法。</p><h6 id="我们来具体分析一下抽象与接口">我们来具体分析一下抽象与接口</h6><ul><li>抽象类是什么？（抽象类只能作为父类被继承，避免子类的随意性）<ul><li>抽象方法只做声明，而不包含实现，可以看成是没有实现体的虚方法</li><li>抽象类不能被实例化</li><li>抽象类可以但不是必须有抽象属性和抽象方法，但是一旦有了抽象方法，就一定要把这个类声明为抽象类</li><li>具体派生类必须覆盖基类的抽象方法</li><li>抽象派生类可以覆盖基类的抽象方法，也可以不覆盖。如果不覆盖，则其具体派生类必须覆盖它们</li></ul></li><li>接口是什么？<ul><li>接口不能被实例化</li><li>接口只能包含方法声明</li><li>接口的成员包括方法、属性、索引器、事件</li><li>接口中不能包含常量、字段(域)、构造函数、析构函数(Java存在自动回收机制，一般用不到析构函数)、静态成员</li></ul></li><li>接口和抽象类的区别   <strong>重要</strong><ul><li>抽象类可以有构造方法，接口中不能有构造方法。</li><li>抽象类中可以有普通成员变量，接口中没有普通成员变量</li><li>抽象类中可以包含静态方法，接口中不能包含静态方法</li><li>一个类可以实现多个接口，但只能继承一个抽象类。</li><li>接口可以被多重实现，抽象类只能被单一继承</li><li>如果抽象类实现接口，则可以把接口中方法映射到抽象类中作为抽象方法而不必实现，而在抽象类的子类中实现接口中方法</li></ul></li><li>接口和抽象类的相同点<ul><li>都可以被继承</li><li>都不能被实例化</li><li>都可以包含方法声明</li><li>派生类必须实现未实现的方法</li></ul></li></ul><h5 id="10-和-的区别？">10、&amp;和&amp;&amp;的区别？</h5><ul><li>&amp;运算符有两种用法：<br>-按位与；<br>-逻辑与。<br>-&amp;&amp;运算符是短路与运算。逻辑与跟短路与的差别是非常巨大的，虽然二者都要求运算符左右两端的布尔值都是true整个表达式的值才是true。&amp;&amp;之所以称为短路运算是因为，如果&amp;&amp;左边的表达式的值是false，右边的表达式会被直接短路掉，不会进行运算。很多时候我们可能都需要用&amp;&amp;而不是&amp;，例如在验证用户登录时判定用户名不是null而且不是空字符串，应当写为：username != null &amp;&amp;!username.equals(&quot;&quot;)，二者的顺序不能交换，更不能用&amp;运算符，因为第一个条件如果不成立，根本不能进行字符串的equals比较，否则会产生NullPointerException异常。</li></ul><h5 id="11-关键字">11、关键字</h5><h6 id="与流程控制相关的">与流程控制相关的</h6><table><thead><tr><th>关键字</th><th>知识点</th></tr></thead><tbody><tr><td>if</td><td>表示条件判断，一般用法if（关系表达式），后跟else或{……}</td></tr><tr><td>esle</td><td>条件转折，如if （关系表达式）{语句块1}else{语句块2}，如果关系表达式的值为true，则执行语句块1，否则执行语句块2.</td></tr><tr><td>do……while……</td><td>do和while一般一起使用，用于表示循环语句。do{……}while（关系表达式）……；当关系表达式的值为true是继续循环。</td></tr><tr><td>for</td><td>用于表示循环，for循环是最常使用的循环，格式for（表达式a; 表达式b; 表达式c）括号里面的书通常用于控制循环的次数，一般会用一个int类型的变量类计数，如（int i=0; i&lt;10; i++）表达式a用于流程控制的开始值，表达式b表示循环终止条件，表达式c用于计数。</td></tr><tr><td>switch</td><td>分支语句</td></tr><tr><td>default</td><td>条件不成立</td></tr><tr><td>break</td><td>跳出</td></tr><tr><td>continue</td><td>跳出本次循环</td></tr><tr><td>return</td><td>返回值</td></tr><tr><td>try……catch……finally……</td><td>异常处理</td></tr></tbody></table><h6 id="与修饰符有关的">与修饰符有关的</h6><table><thead><tr><th>范围</th><th>本类</th><th>同软件包</th><th>不同包中子类</th><th>不同包且无继承</th><th>作用(含义)</th></tr></thead><tbody><tr><td>public</td><td>可以</td><td>可以</td><td>可以</td><td>可以</td><td>公有的</td></tr><tr><td>protect</td><td>可以</td><td>可以</td><td>可以</td><td></td><td>受保护的</td></tr><tr><td>default(无权限修饰符)</td><td>可以</td><td>可以</td><td></td><td></td><td>当前的</td></tr><tr><td>private</td><td>可以</td><td></td><td></td><td></td><td>私有的</td></tr></tbody></table><table><thead><tr><th>关键字</th><th>知识点</th></tr></thead><tbody><tr><td>final</td><td>1. final的变量的值不能被改变<br>              a.final的成员变量<br>              b.final的局部变量；<br>2. final的方法不能被重写；<br>3. final的类不能被继承。</td></tr><tr><td>Synchronized</td><td>当它用来修饰一个方法或者一个代码块的时候，能够保证在同一时刻最多只有一个线程执行该段代码。JDK1.5以后引入了自旋锁、锁粗化、轻量级锁，偏向锁来有优化关键字的性能。</td></tr><tr><td>Lock</td><td><strong>synchronized在发生异常时，会自动释放线程占有的锁，因此不会导致死锁现象发生；而Lock在发生异常时，如果没有主动通过unLock()去释放锁，则很可能造成死锁现象，因此使用Lock时需要在finally块中释放锁；<br><br>Lock可以让等待锁的线程响应中断，而synchronized却不行，使用synchronized时，等待的线程会一直等待下去，不能够响应中断；<br><br>通过Lock可以知道有没有成功获取锁，而synchronized却无法办到。</strong></td></tr></tbody></table><h5 id="12-java中的覆盖与重载的含义">12、Java中的覆盖与重载的含义</h5><pre><code>1.覆盖是发生在同一个类里边或者多个方法的方法名相同但参数不用的情况。2.方法覆盖是说子类重新定义了父类的方法。方法覆盖必须有相同的方法名，参数列表和返回类型。覆盖者可能不会限制它所覆盖的方法的访问。</code></pre><h5 id="13-面向对象的-六原则一法则">13、面向对象的&quot;六原则一法则&quot;。</h5><table><thead><tr><th>名称</th><th>作用</th></tr></thead><tbody><tr><td>单一职责原则（高内聚）</td><td>一个类只做它该做的事情</td></tr><tr><td>开闭原则</td><td>软件实体应当对扩展开放，对修改关闭。</td></tr><tr><td>依赖倒转原则</td><td>面向接口编程。</td></tr><tr><td>里氏替换原则</td><td>任何时候都可以用子类型替换掉父类型</td></tr><tr><td>接口隔离性</td><td>接口要小而专，绝不能大而全。</td></tr><tr><td>合成聚合复用原则</td><td>优先使用聚合或合成关系复用代码。</td></tr><tr><td>迪米特法则（低耦合）</td><td>迪米特法则又叫最少知识原则，一个对象应当对其他对象有尽可能少的了解。</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;JavaSE面试要点以及知识概要&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java知识点" scheme="http://yoursite.com/categories/Java%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>实训---html</title>
    <link href="http://yoursite.com/2019/06/18/%E5%AE%9E%E8%AE%AD-html/"/>
    <id>http://yoursite.com/2019/06/18/实训-html/</id>
    <published>2019-06-18T08:06:37.000Z</published>
    <updated>2019-06-24T09:57:49.017Z</updated>
    
    <content type="html"><![CDATA[<h2 id="html">HTML</h2><p><img src="/2019/06/18/实训-html/bg.jpg" alt="生活"></p><a id="more"></a><h3 id="w3c标准">W3C标准</h3><pre><code>1. 结构化标准语言(HTML,XHML)2. 表现标准语言(CSS)3. 行为标准(DOM)</code></pre><h3 id="meta设置">meta设置</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置过期--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--跳转页面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"2:http://www.baidu.com"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!----&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Pragma"</span> <span class="attr">content</span>=<span class="string">"No-cach"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--无法被其他网页嵌套--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Window-target"</span> <span class="attr">content</span>=<span class="string">"_top"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--网页特效--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Page-Exit"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--搜索关键字--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"Keywords"</span> <span class="attr">lang</span>=<span class="string">"EN"</span> <span class="attr">content</span>=<span class="string">"中北大学"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置网页简介--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"中北大学"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置网址作者--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"Author"</span> <span class="attr">content</span>=<span class="string">"银尘"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置网站的版本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"Copyright"</span> <span class="attr">content</span>=<span class="string">"本页版权归银尘所有"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="页面布局分析">页面布局分析</h3><h4 id="h5结构元素">H5结构元素</h4><table><thead><tr><th style="text-align:left">方法名</th><th>作用位置</th></tr></thead><tbody><tr><td style="text-align:left">header</td><td>头部</td></tr><tr><td style="text-align:left">nav</td><td>头部</td></tr><tr><td style="text-align:left">aside</td><td>侧面栏</td></tr><tr><td style="text-align:left">section</td><td>主题部分</td></tr><tr><td style="text-align:left">article</td><td>主题部分</td></tr><tr><td style="text-align:left">footer</td><td>尾部</td></tr></tbody></table><h4 id="框架">框架</h4><blockquote><p>frameset----现在不经常使用了</p><p>iframe—基本都使用这个（灵活）</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;html&quot;&gt;HTML&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/2019/06/18/实训-html/bg.jpg&quot; alt=&quot;生活&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Java容器知识点</title>
    <link href="http://yoursite.com/2019/06/18/Java%E5%AE%B9%E5%99%A8%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://yoursite.com/2019/06/18/Java容器知识点/</id>
    <published>2019-06-18T05:20:03.000Z</published>
    <updated>2019-06-24T08:36:03.782Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Java容器与设计模式解释</strong></p><a id="more"></a><h3 id="单例模式">单例模式</h3><h4 id="静态初始化-饿汉式">静态初始化（饿汉式）</h4><h4 id="双重检查-懒汉式">双重检查（懒汉式）</h4><blockquote><p><strong>用到的时候才会建立，不用则不会建立</strong></p></blockquote><h5 id="要考虑多个线程的并发问题">要考虑多个线程的并发问题</h5><ul><li>通过lock和synchronized双重检查</li><li>保证只有一个线程运行</li><li>内存可见性  volatile 修饰</li></ul><h4 id="单例注册表">单例注册表</h4><h3 id="常用设计模式与应用场景">常用设计模式与应用场景</h3><ol><li>工厂模式：Spring如何创建Bean</li><li>代理模式：Motan服务的动态代理  反射</li></ol><ul><li>静态代理:编译时创建好的  源代码中编写的类</li><li>动态代理:在JVM</li></ul><ol start="3"><li>责任链模式：Netty消息处理的方式</li><li>适配器模式：SLF4J如何支持Log4J  — 接口</li><li>观察者模式（一个对象的某个事件触发某些行为）：GRPC是如何支持流式请求的</li><li>构造者模式（多个复杂的属性）：PB序列化中的Builder</li></ol><h3 id="java语言特性">Java语言特性</h3><h4 id="知识详解">知识详解</h4><p>==HashMap==</p><ul><li>数组加链表的实现方式</li><li>容量大小是2的幂次方<ul><li>可以利用按位与操作，计算余数</li></ul></li><li>并发读写的风险（参考源码）<ul><li>死循环问题</li><li>HashMap 是一个散列桶（数组和链表），它存储的内容是键值对 key-value 映射</li><li>HashMap 采用了数组和链表的数据结构，能在查询和修改方便继承了数组的线性查找和链表的寻址修改</li><li>HashMap 是非 synchronized，所以 HashMap 很快</li><li>HashMap 可以接受 null 键和值，而 Hashtable 则不能（原因就是 equlas() 方法需要对象，因为 HashMap 是后出的 API 经过处理才可以）</li></ul></li><li>工作原理</li><li>HashMap 在 Map.Entry 静态内部类实现中存储键值对，使用哈希算法。在 put 和 get 方法中，使用 hashCode() 和 equals() 方法。</li><li>调用 put 方法时，使用键值对中的 Key hashCode() 和哈希算法找出存储键值对索引。键值对 Entry 存储在 LinkedList 中，如果存在 Entry，使用 equals() 方法来检查 Key 是否已经存在：如果存在，则覆盖 value；如果不存在，会创建一个新的 Entry 然后保存。</li><li>调用 get 方法时，HashMap 使用键值 Key hashCode() 来找到数组中的索引，然后使用 equals() 方法找出正确的 Entry，返回 Entry 中的 Value。</li></ul><p>==ConcurrentHashMap==</p><blockquote><p>ConcurrentHashMap 和 HashMap 实现上类似，最主要的差别是 ConcurrentHashMap 采用了分段锁（Segment），每个分段锁维护着几个桶（HashEntry），多个线程可以同时访问不同分段锁上的桶，从而使其并发度更高（并发度就是 Segment 的个数）。</p></blockquote><ol><li><p>并发控制与分段锁的思想</p></li><li><p>1.8的CAS自旋锁</p></li><li><p>红黑树的启动条件</p><ul><li>TREEIFY THRESHOLD==8  阈值超过8  小于6就转回链表</li></ul></li><li><p>具体的get方法</p><blockquote><h3 id="当我们调用-get-方法-hashmap-会使用键对象的-hashcode-找到-bucket-位置-找到-bucket-位置之后-会调用-keys-equals-方法去找到链表中正确的节点-最终找到要找的值对象">- 当我们调用 get() 方法，HashMap 会使用键对象的 hashcode 找到 bucket 位置，找到 bucket 位置之后，会调用 keys.equals() 方法去找到链表中正确的节点，最终找到要找的值对象。</h3></blockquote></li><li><p>hash源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">static final int hash(Object key) &#123;</span><br><span class="line"> if (key == null)&#123;</span><br><span class="line">     return 0;</span><br><span class="line"> &#125;</span><br><span class="line"> int h;</span><br><span class="line"> h = key.hashCode()；返回散列值也就是hashcode</span><br><span class="line"> // ^ ：按位异或</span><br><span class="line"> // &gt;&gt;&gt;:无符号右移，忽略符号位，空位都以0补齐</span><br><span class="line"> //其中n是数组的长度，即Map的数组部分初始化长度</span><br><span class="line"> return (n-1)&amp;(h ^ (h &gt;&gt;&gt; 16));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ul><li>源码分析(个人理解n初始化数组长度为16)<blockquote><p>高16 bit 不变，低16 bit 和高16 bit 做了一个异或（得到的 hashcode 转化为32位二进制，前16位和后16位低16 bit和高16 bit做了一个异或）(n·1) &amp; hash = -&gt; 得到下标</p></blockquote></li></ul></li></ol><hr><ol start="6"><li><p>为什么一直使用红黑树，不使用二叉树呢?</p><ul><li>二叉树在使用过程中可能会变成一条线性结构，这就相当于链表结构了，查找速度会很慢。红黑树可以在插入数据时进行左旋，右旋、变色这些操作来保持平衡。所以，我们在长度大于8的时候，我们会使用红黑树，长度小于8的时候就没有必要用了，反而会更慢。</li></ul></li><li><p>说说你对红黑树的见解</p><ul><li>应该不会手撕。。。。<ol><li>每个节点非红即黑</li><li>根节点总是黑色的</li><li>如果节点是红色的，则它的子节点必须是黑色的（反之不一定）</li><li>每个叶子节点都是黑色的空节点（NIL节点）<br>5.从根节点到叶节点或空子节点的每条路径，必须包含相同数目的黑色节点（即相同的黑色高度）</li></ol></li></ul></li><li><p>解决hash碰撞的方法</p><ul><li><p>开放定址法</p><blockquote><h6 id="当冲突发生时-使用某种探查技术在散列表中形成一个探查-测-序列-沿此序列逐个单元地查找-直到找到给定的地址-按照形成探查序列的方法不同-可将开放定址法区分为线性探查法-二次探查法-双重散列法等">当冲突发生时，使用某种探查技术在散列表中形成一个探查（测）序列。沿此序列逐个单元地查找，直到找到给定的地址。按照形成探查序列的方法不同，可将开放定址法区分为线性探查法、二次探查法、双重散列法等。</h6></blockquote></li></ul></li><li><p>如果 HashMap 的大小超过了负载因子（load factor）定义的容量怎么办？</p><blockquote><h5 id="hashmap-默认的负载因子大小为0-75-也就是说-当一个-map-填满了75-的-bucket-时候-和其它集合类一样-如-arraylist-等-将会创建原来-hashmap-大小的两倍的-bucket-数组来重新调整-map-大小-并将原来的对象放入新的-bucket-数组中-这个过程叫作-rehashing-br-br-只有两个可能的位置-一个是原下标的位置-另一种是在下标为-原下标-原容量-的位置">HashMap 默认的负载因子大小为0.75。也就是说，当一个 Map 填满了75%的 bucket 时候，和其它集合类一样（如 ArrayList 等），将会创建原来 HashMap 大小的两倍的 bucket 数组来重新调整 Map 大小，并将原来的对象放入新的 bucket 数组中。这个过程叫作 rehashing。<br><br><strong>只有两个可能的位置</strong>:一个是原下标的位置，另一种是在下标为 &lt;原下标+原容量&gt; 的位置。</h5></blockquote></li><li><p>什么情况会引起多线程</p><ol><li>在调整HashMap大小的时候，如果两个线程同时调整HashMap大小的话，可能会发生条件竞争。然后就----&gt;死循环了。。。</li></ol></li><li><p>为什么多线程会死循环。怎么发生的？</p><blockquote><h6 id="hashmap-的容量是有限的-当经过多次元素插入-使得-hashmap-达到一定饱和度时-key-映射位置发生冲突的几率会逐渐提高-这时候-hashmap-需要扩展它的长度-也就是进行resize-br-br">HashMap 的容量是有限的。当经过多次元素插入，使得 HashMap 达到一定饱和度时，Key 映射位置发生冲突的几率会逐渐提高。这时候， HashMap 需要扩展它的长度，也就是进行Resize。<br><br></h6><h6 id="扩容：创建一个新的-entry-空数组-长度是原数组的2倍-br-rehash：遍历原-entry-数组-把所有的-entry-重新-hash-详解">扩容：创建一个新的 Entry 空数组，长度是原数组的2倍<br>rehash：遍历原 Entry 数组，把所有的 Entry 重新 Hash <a href="https://www.cnblogs.com/zhuoqingsen/p/8577646.html" target="_blank" rel="noopener">详解</a></h6></blockquote></li><li><p>HashMap 允许插入键为 null 的键值对。但是因为无法调用 null 的 hashCode() 方法，也就无法确定该键值对的桶下标，只能通过强制指定一个桶下标来存放。HashMap 使用第 0 个桶存放键为 null 的键值对。</p></li></ol><h3 id="容器的区别">容器的区别</h3><p>==HashTable与HashTable==</p><ol><li>HashTable<ul><li>数组+链式存储</li><li>默认容量：11</li><li>put操作：首先进行索引计算 （key.hashCode() &amp; 0x7FFFFFFF）% table.length；若在链表中找到了，则替换旧值，若未找到则继续；当总元素个数超过 容量 * 加载因子 时，扩容为原来 2 倍并重新散列；将新元素加到链表头部</li><li>对修改 Hashtable 内部共享数据的方法添加了 synchronized，保证线程安全</li></ul></li><li>HashMap和HashTable的区别<ul><li>默认容量不同，扩容不同</li><li>线程安全性： HashTable安全</li><li>效率不同： HashTable要慢  加锁了</li></ul></li><li>可以使用 CocurrentHashMap 来代替 Hashtable 吗？<ul><li>我们知道 Hashtable 是 synchronized 的，但是 ConcurrentHashMap 同步性能更好，因为它仅仅根据同步级别对 map 的一部分进行上锁</li><li>ConcurrentHashMap 当然可以代替 HashTable，但是 HashTable 提供更强的线程安全性</li><li>它们都可以用于多线程的环境，但是当 Hashtable 的大小增加到一定的时候，性能会急剧下降，因为迭代时需要被锁定很长的时间。由于 ConcurrentHashMap 引入了分割（segmentation），不论它变得多么大，仅仅需要锁定 Map 的某个部分，其它的线程不需要等到迭代完成才能访问 Map。简而言之，在迭代的过程中，ConcurrentHashMap 仅仅锁定 Map 的某个部分，而 Hashtable 则会锁定整个 Map</li></ul></li></ol><p>==Collection详解==</p><ol><li>Set</li></ol><ul><li>TreeSet</li></ul><blockquote><p>基于红黑树实现，支持有序性操作，例如根据一个范围查找元素的操作。但是查找效率不如 HashSet，HashSet 查找的时间复杂度为 O(1)，TreeSet 则为 O(logN)。</p></blockquote><ul><li><p>HashSet</p><blockquote><p>基于哈希表实现，支持快速查找，但不支持有序性操作。并且失去了元素的插入顺序信息，也就是说使用 Iterator 遍历 HashSet 得到的结果是不确定的。</p></blockquote></li><li><p>LinkedHashSet</p><blockquote><p>具有 HashSet 的查找效率，且内部使用双向链表维护元素的插入顺序</p></blockquote></li></ul><ol start="2"><li>List</li></ol><ul><li>ArrayList</li></ul><blockquote><p>基于动态数组实现，支持随机访问。</p></blockquote><ul><li><p>Vector</p><blockquote><p>和 ArrayList 类似，但它是线程安全的。</p></blockquote></li><li><p>LinkedList</p><blockquote><p>基于双向链表实现，只能顺序访问，但是可以快速地在链表中间插入和删除元素。不仅如此，LinkedList 还可以用作栈、队列和双向队列。</p></blockquote></li></ul><ol start="3"><li>Queue</li></ol><ul><li>LinkedList</li></ul><blockquote><p>可以用来实现双向队列</p></blockquote><ul><li><p>PriorityQueue</p><blockquote><p>基于堆结构实现，可以用它来实现优先队列。</p></blockquote></li></ul><hr><ol start="4"><li>Map</li></ol><ul><li><p>TreeMap：基于红黑树实现。</p></li><li><p>HashMap：基于哈希表实现。</p></li><li><p>HashTable：和 HashMap 类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入 HashTable 并且不会导致数据不一致。它是遗留类，不应该去使用它。现在可以使用 ConcurrentHashMap 来支持线程安全，并且 ConcurrentHashMap 的效率会更高，因为 ConcurrentHashMap 引入了分段锁。</p></li><li><p>LinkedHashMap：使用双向链表来维护元素的顺序，顺序为插入顺序或者最近最少使用（LRU）顺序。</p></li></ul><h5 id="5-arraylist和vector的区别">5. ArrayList和Vector的区别</h5><pre><code>Vector 是同步的，因此开销就比 ArrayList 要大，访问速度更慢。最好使用 ArrayList 而不是 Vector，因为同步操作完全可以由程序员自己来控制；Vector 每次扩容请求其大小的 2 倍空间，而 ArrayList 是 1.5 倍。可以使用 Collections.synchronizedList(); 得到一个线程安全的 ArrayList。List&lt;String&gt; list = new ArrayList&lt;&gt;();List&lt;String&gt; synList = Collections.synchronizedList(list);</code></pre><h5 id="6-arraylist和linkedlist比较">6.ArrayList和LinkedList比较</h5><pre><code>ArrayList 基于动态数组实现，LinkedList 基于双向链表实现；ArrayList 支持随机访问，LinkedList 不支持；LinkedList 在任意位置添加删除元素更快。</code></pre><h5 id="7-linkedhashmap">7.LinkedHashMap</h5><p>继承自 HashMap，因此具有和 HashMap 一样的快速查找特性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public class LinkedHashMap&lt;K,V&gt; extends HashMap&lt;K,V&gt; implements Map&lt;K,V&gt;</span><br></pre></td></tr></table></figure><p>内部维护了一个双向链表，用来维护插入顺序或者 LRU 顺序。</p><h5 id="8-为什么要实现序列化">8.为什么要实现序列化</h5><pre><code>实现serializable接口的作用是就是可以把对象存到字节流，然后可以恢复。所以你想如果你的对象没实现序列化怎么才能进行网络传输呢，要网络传输就得转为字节流，所以在分布式应用中，你就得实现序列化，如果你不需要分布式应用，那就没那个必要实现序列化。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Java容器与设计模式解释&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java知识点" scheme="http://yoursite.com/categories/Java%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/06/18/hello-world/"/>
    <id>http://yoursite.com/2019/06/18/hello-world/</id>
    <published>2019-06-18T03:08:02.942Z</published>
    <updated>2019-06-24T08:35:59.234Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><a id="more"></a><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;quick-start&quot;&gt;Quick Start&lt;/h2&gt;
&lt;h3 id=&quot;create-a-new-post&quot;&gt;Create a new post&lt;/h3&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
